

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 23:45:28 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4520 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  0062A8                     __pidataCOMRAM:
    92                           	callstack 0
    93                           
    94                           ;initializer for _led
    95  0062A8  01                 	db	1
    96  0062A9  02                 	db	2
    97  0062AA  04                 	db	4
    98  0062AB  08                 	db	8
    99  0062AC  20                 	db	32
   100  0062AD  10                 	db	16
   101  0062AE  40                 	db	64
   102  0062AF  80                 	db	128
   103                           
   104                           ;initializer for _reset
   105  0062B0  0001               	dw	1
   106  0062B2  0000               	dw	0
   107                           
   108                           ;initializer for _bigBreak
   109  0062B4  A5E0               	dw	42464
   110  0062B6  0001               	dw	1
   111                           
   112                           ;initializer for _breakTime
   113  0062B8  4650               	dw	18000
   114  0062BA  0000               	dw	0
   115                           
   116                           ;initializer for _studyTime
   117  0062BC  D2F0               	dw	54000
   118  0062BE  0000               	dw	0
   119                           
   120                           	psect	mediumconst
   121  007EC6                     __pmediumconst:
   122                           	callstack 0
   123  007EC6  00                 	db	0
   124  007EC7                     _valor:
   125                           	callstack 0
   126  007EC7  3F                 	db	63
   127  007EC8  06                 	db	6
   128  007EC9  5B                 	db	91
   129  007ECA  4F                 	db	79
   130  007ECB  66                 	db	102
   131  007ECC  6D                 	db	109
   132  007ECD  7D                 	db	125
   133  007ECE  07                 	db	7
   134  007ECF  7F                 	db	127
   135  007ED0  6F                 	db	111
   136  007ED1  77                 	db	119
   137  007ED2  7C                 	db	124
   138  007ED3  39                 	db	57
   139  007ED4  5E                 	db	94
   140  007ED5  79                 	db	121
   141  007ED6  71                 	db	113
   142  007ED7                     __end_of_valor:
   143                           	callstack 0
   144  007ED7                     _charKey:
   145                           	callstack 0
   146  007ED7  55                 	db	85
   147  007ED8  4C                 	db	76
   148  007ED9  44                 	db	68
   149  007EDA  52                 	db	82
   150  007EDB  53                 	db	83
   151  007EDC  58                 	db	88
   152  007EDD  41                 	db	65
   153  007EDE  42                 	db	66
   154  007EDF  59                 	db	89
   155  007EE0  73                 	db	115
   156  007EE1                     __end_of_charKey:
   157                           	callstack 0
   158  0000                     _SPBRG	set	4015
   159  0000                     _SPBRGH	set	4016
   160  0000                     _BAUDCON	set	4024
   161  0000                     _TXSTA	set	4012
   162  0000                     _RCREG	set	4014
   163  0000                     _RCSTA	set	4011
   164  0000                     _TXREG	set	4013
   165  0000                     _PIR1	set	3998
   166  0000                     _TRISE	set	3990
   167  0000                     _TRISD	set	3989
   168  0000                     _TRISC	set	3988
   169  0000                     _TRISB	set	3987
   170  0000                     _TRISA	set	3986
   171  0000                     _PORTE	set	3972
   172  0000                     _PORTD	set	3971
   173  0000                     _PORTC	set	3970
   174  0000                     _PORTB	set	3969
   175  0000                     _PORTA	set	3968
   176  0000                     _T0CON	set	4053
   177  0000                     _TMR0L	set	4054
   178  0000                     _TMR0H	set	4055
   179  0000                     _INTCON	set	4082
   180  0000                     _ADRESL	set	4035
   181  0000                     _ADRESH	set	4036
   182  0000                     _ADCON2	set	4032
   183  0000                     _ADCON1	set	4033
   184  0000                     _ADCON0	set	4034
   185  007EE1                     STR_1:
   186  007EE1  48                 	db	72	;'H'
   187  007EE2  6F                 	db	111	;'o'
   188  007EE3  72                 	db	114	;'r'
   189  007EE4  61                 	db	97	;'a'
   190  007EE5  20                 	db	32
   191  007EE6  64                 	db	100	;'d'
   192  007EE7  6F                 	db	111	;'o'
   193  007EE8  20                 	db	32
   194  007EE9  64                 	db	100	;'d'
   195  007EEA  65                 	db	101	;'e'
   196  007EEB  73                 	db	115	;'s'
   197  007EEC  63                 	db	99	;'c'
   198  007EED  61                 	db	97	;'a'
   199  007EEE  6E                 	db	110	;'n'
   200  007EEF  73                 	db	115	;'s'
   201  007EF0  6F                 	db	111	;'o'
   202  007EF1  21                 	db	33
   203  007EF2  00                 	db	0
   204  007EF3  70                 	db	112	;'p'
   205  007EF4  72                 	db	114	;'r'
   206  007EF5  6F                 	db	111	;'o'
   207  007EF6  78                 	db	120	;'x'
   208  007EF7  69                 	db	105	;'i'
   209  007EF8  6D                 	db	109	;'m'
   210  007EF9  6F                 	db	111	;'o'
   211  007EFA  20                 	db	32
   212  007EFB  69                 	db	105	;'i'
   213  007EFC  6E                 	db	110	;'n'
   214  007EFD  74                 	db	116	;'t'
   215  007EFE  65                 	db	101	;'e'
   216  007EFF  72                 	db	114	;'r'
   217  007F00  76                 	db	118	;'v'
   218  007F01  61                 	db	97	;'a'
   219  007F02  6C                 	db	108	;'l'
   220  007F03  6F                 	db	111	;'o'
   221  007F04  00                 	db	0
   222  007F05                     STR_4:
   223  007F05  54                 	db	84	;'T'
   224  007F06  65                 	db	101	;'e'
   225  007F07  6D                 	db	109	;'m'
   226  007F08  70                 	db	112	;'p'
   227  007F09  6F                 	db	111	;'o'
   228  007F0A  20                 	db	32
   229  007F0B  64                 	db	100	;'d'
   230  007F0C  65                 	db	101	;'e'
   231  007F0D  20                 	db	32
   232  007F0E  65                 	db	101	;'e'
   233  007F0F  73                 	db	115	;'s'
   234  007F10  74                 	db	116	;'t'
   235  007F11  75                 	db	117	;'u'
   236  007F12  64                 	db	100	;'d'
   237  007F13  6F                 	db	111	;'o'
   238  007F14  3A                 	db	58	;':'
   239  007F15  00                 	db	0
   240  007F16  61                 	db	97	;'a'
   241  007F17  75                 	db	117	;'u'
   242  007F18  6D                 	db	109	;'m'
   243  007F19  65                 	db	101	;'e'
   244  007F1A  6E                 	db	110	;'n'
   245  007F1B  74                 	db	116	;'t'
   246  007F1C  61                 	db	97	;'a'
   247  007F1D  72                 	db	114	;'r'
   248  007F1E  20                 	db	32
   249  007F1F  6F                 	db	111	;'o'
   250  007F20  20                 	db	32
   251  007F21  74                 	db	116	;'t'
   252  007F22  65                 	db	101	;'e'
   253  007F23  6D                 	db	109	;'m'
   254  007F24  70                 	db	112	;'p'
   255  007F25  6F                 	db	111	;'o'
   256  007F26  00                 	db	0
   257  007F27  64                 	db	100	;'d'
   258  007F28  69                 	db	105	;'i'
   259  007F29  6D                 	db	109	;'m'
   260  007F2A  69                 	db	105	;'i'
   261  007F2B  6E                 	db	110	;'n'
   262  007F2C  75                 	db	117	;'u'
   263  007F2D  69                 	db	105	;'i'
   264  007F2E  72                 	db	114	;'r'
   265  007F2F  20                 	db	32
   266  007F30  6F                 	db	111	;'o'
   267  007F31  20                 	db	32
   268  007F32  74                 	db	116	;'t'
   269  007F33  65                 	db	101	;'e'
   270  007F34  6D                 	db	109	;'m'
   271  007F35  70                 	db	112	;'p'
   272  007F36  6F                 	db	111	;'o'
   273  007F37  00                 	db	0
   274  007F38  50                 	db	80	;'P'
   275  007F39  6F                 	db	111	;'o'
   276  007F3A  6D                 	db	109	;'m'
   277  007F3B  6F                 	db	111	;'o'
   278  007F3C  64                 	db	100	;'d'
   279  007F3D  6F                 	db	111	;'o'
   280  007F3E  72                 	db	114	;'r'
   281  007F3F  6F                 	db	111	;'o'
   282  007F40  20                 	db	32
   283  007F41  54                 	db	84	;'T'
   284  007F42  69                 	db	105	;'i'
   285  007F43  6D                 	db	109	;'m'
   286  007F44  65                 	db	101	;'e'
   287  007F45  72                 	db	114	;'r'
   288  007F46  21                 	db	33
   289  007F47  00                 	db	0
   290  007F48  41                 	db	65	;'A'
   291  007F49  70                 	db	112	;'p'
   292  007F4A  65                 	db	101	;'e'
   293  007F4B  72                 	db	114	;'r'
   294  007F4C  74                 	db	116	;'t'
   295  007F4D  65                 	db	101	;'e'
   296  007F4E  20                 	db	32
   297  007F4F  27                 	db	39
   298  007F50  44                 	db	68	;'D'
   299  007F51  27                 	db	39
   300  007F52  20                 	db	32
   301  007F53  70                 	db	112	;'p'
   302  007F54  61                 	db	97	;'a'
   303  007F55  72                 	db	114	;'r'
   304  007F56  61                 	db	97	;'a'
   305  007F57  00                 	db	0
   306  007F58  44                 	db	68	;'D'
   307  007F59  69                 	db	105	;'i'
   308  007F5A  67                 	db	103	;'g'
   309  007F5B  69                 	db	105	;'i'
   310  007F5C  74                 	db	116	;'t'
   311  007F5D  65                 	db	101	;'e'
   312  007F5E  20                 	db	32
   313  007F5F  27                 	db	39
   314  007F60  47                 	db	71	;'G'
   315  007F61  27                 	db	39
   316  007F62  20                 	db	32
   317  007F63  70                 	db	112	;'p'
   318  007F64  61                 	db	97	;'a'
   319  007F65  72                 	db	114	;'r'
   320  007F66  61                 	db	97	;'a'
   321  007F67  00                 	db	0
   322  007F68  41                 	db	65	;'A'
   323  007F69  70                 	db	112	;'p'
   324  007F6A  65                 	db	101	;'e'
   325  007F6B  72                 	db	114	;'r'
   326  007F6C  74                 	db	116	;'t'
   327  007F6D  65                 	db	101	;'e'
   328  007F6E  20                 	db	32
   329  007F6F  27                 	db	39
   330  007F70  53                 	db	83	;'S'
   331  007F71  27                 	db	39
   332  007F72  20                 	db	32
   333  007F73  70                 	db	112	;'p'
   334  007F74  61                 	db	97	;'a'
   335  007F75  72                 	db	114	;'r'
   336  007F76  61                 	db	97	;'a'
   337  007F77  00                 	db	0
   338  007F78  41                 	db	65	;'A'
   339  007F79  70                 	db	112	;'p'
   340  007F7A  65                 	db	101	;'e'
   341  007F7B  72                 	db	114	;'r'
   342  007F7C  74                 	db	116	;'t'
   343  007F7D  65                 	db	101	;'e'
   344  007F7E  20                 	db	32
   345  007F7F  27                 	db	39
   346  007F80  55                 	db	85	;'U'
   347  007F81  27                 	db	39
   348  007F82  20                 	db	32
   349  007F83  70                 	db	112	;'p'
   350  007F84  61                 	db	97	;'a'
   351  007F85  72                 	db	114	;'r'
   352  007F86  61                 	db	97	;'a'
   353  007F87  00                 	db	0
   354  007F88  41                 	db	65	;'A'
   355  007F89  70                 	db	112	;'p'
   356  007F8A  65                 	db	101	;'e'
   357  007F8B  72                 	db	114	;'r'
   358  007F8C  74                 	db	116	;'t'
   359  007F8D  65                 	db	101	;'e'
   360  007F8E  20                 	db	32
   361  007F8F  27                 	db	39
   362  007F90  73                 	db	115	;'s'
   363  007F91  27                 	db	39
   364  007F92  20                 	db	32
   365  007F93  70                 	db	112	;'p'
   366  007F94  61                 	db	97	;'a'
   367  007F95  72                 	db	114	;'r'
   368  007F96  61                 	db	97	;'a'
   369  007F97  00                 	db	0
   370  007F98  63                 	db	99	;'c'
   371  007F99  6F                 	db	111	;'o'
   372  007F9A  6D                 	db	109	;'m'
   373  007F9B  65                 	db	101	;'e'
   374  007F9C  63                 	db	99	;'c'
   375  007F9D  61                 	db	97	;'a'
   376  007F9E  72                 	db	114	;'r'
   377  007F9F  20                 	db	32
   378  007FA0  6F                 	db	111	;'o'
   379  007FA1  20                 	db	32
   380  007FA2  74                 	db	116	;'t'
   381  007FA3  69                 	db	105	;'i'
   382  007FA4  6D                 	db	109	;'m'
   383  007FA5  65                 	db	101	;'e'
   384  007FA6  72                 	db	114	;'r'
   385  007FA7  00                 	db	0
   386  007FA8  73                 	db	115	;'s'
   387  007FA9  65                 	db	101	;'e'
   388  007FAA  74                 	db	116	;'t'
   389  007FAB  61                 	db	97	;'a'
   390  007FAC  72                 	db	114	;'r'
   391  007FAD  20                 	db	32
   392  007FAE  6D                 	db	109	;'m'
   393  007FAF  65                 	db	101	;'e'
   394  007FB0  74                 	db	116	;'t'
   395  007FB1  61                 	db	97	;'a'
   396  007FB2  20                 	db	32
   397  007FB3  64                 	db	100	;'d'
   398  007FB4  65                 	db	101	;'e'
   399  007FB5  00                 	db	0
   400  007FB6  65                 	db	101	;'e'
   401  007FB7  73                 	db	115	;'s'
   402  007FB8  74                 	db	116	;'t'
   403  007FB9  75                 	db	117	;'u'
   404  007FBA  64                 	db	100	;'d'
   405  007FBB  6F                 	db	111	;'o'
   406  007FBC  20                 	db	32
   407  007FBD  65                 	db	101	;'e'
   408  007FBE  6D                 	db	109	;'m'
   409  007FBF  20                 	db	32
   410  007FC0  6D                 	db	109	;'m'
   411  007FC1  69                 	db	105	;'i'
   412  007FC2  6E                 	db	110	;'n'
   413  007FC3  00                 	db	0
   414  007FC4  70                 	db	112	;'p'
   415  007FC5  75                 	db	117	;'u'
   416  007FC6  6C                 	db	108	;'l'
   417  007FC7  61                 	db	97	;'a'
   418  007FC8  72                 	db	114	;'r'
   419  007FC9  20                 	db	32
   420  007FCA  70                 	db	112	;'p'
   421  007FCB  61                 	db	97	;'a'
   422  007FCC  72                 	db	114	;'r'
   423  007FCD  61                 	db	97	;'a'
   424  007FCE  20                 	db	32
   425  007FCF  6F                 	db	111	;'o'
   426  007FD0  00                 	db	0
   427  007FD1  42                 	db	66	;'B'
   428  007FD2  65                 	db	101	;'e'
   429  007FD3  6D                 	db	109	;'m'
   430  007FD4  2D                 	db	45
   431  007FD5  76                 	db	118	;'v'
   432  007FD6  69                 	db	105	;'i'
   433  007FD7  6E                 	db	110	;'n'
   434  007FD8  64                 	db	100	;'d'
   435  007FD9  6F                 	db	111	;'o'
   436  007FDA  20                 	db	32
   437  007FDB  61                 	db	97	;'a'
   438  007FDC  6F                 	db	111	;'o'
   439  007FDD  00                 	db	0
   440  007FDE                     STR_2:
   441  007FDE  41                 	db	65	;'A'
   442  007FDF  74                 	db	116	;'t'
   443  007FE0  75                 	db	117	;'u'
   444  007FE1  61                 	db	97	;'a'
   445  007FE2  6C                 	db	108	;'l'
   446  007FE3  20                 	db	32
   447  007FE4  6D                 	db	109	;'m'
   448  007FE5  65                 	db	101	;'e'
   449  007FE6  74                 	db	116	;'t'
   450  007FE7  61                 	db	97	;'a'
   451  007FE8  3A                 	db	58	;':'
   452  007FE9  00                 	db	0
   453  007FEA  49                 	db	73	;'I'
   454  007FEB  6E                 	db	110	;'n'
   455  007FEC  73                 	db	115	;'s'
   456  007FED  74                 	db	116	;'t'
   457  007FEE  72                 	db	114	;'r'
   458  007FEF  75                 	db	117	;'u'
   459  007FF0  63                 	db	99	;'c'
   460  007FF1  6F                 	db	111	;'o'
   461  007FF2  65                 	db	101	;'e'
   462  007FF3  73                 	db	115	;'s'
   463  007FF4  3A                 	db	58	;':'
   464  007FF5  00                 	db	0
   465  007FF6                     STR_3:
   466  007FF6  20                 	db	32
   467  007FF7  6D                 	db	109	;'m'
   468  007FF8  69                 	db	105	;'i'
   469  007FF9  6E                 	db	110	;'n'
   470  007FFA  75                 	db	117	;'u'
   471  007FFB  74                 	db	116	;'t'
   472  007FFC  6F                 	db	111	;'o'
   473  007FFD  73                 	db	115	;'s'
   474  007FFE  00                 	db	0
   475  007FFF  00                 	db	0	; dummy byte at the end
   476  0000                     
   477                           ; #config settings
   478                           
   479                           	psect	cinit
   480  0063D8                     __pcinit:
   481                           	callstack 0
   482  0063D8                     start_initialization:
   483                           	callstack 0
   484  0063D8                     __initialization:
   485                           	callstack 0
   486                           
   487                           ; Initialize objects allocated to COMRAM (24 bytes)
   488                           ; load TBLPTR registers with __pidataCOMRAM
   489  0063D8  0EA8               	movlw	low __pidataCOMRAM
   490  0063DA  6EF6               	movwf	tblptrl,c
   491  0063DC  0E62               	movlw	high __pidataCOMRAM
   492  0063DE  6EF7               	movwf	tblptrh,c
   493  0063E0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   494  0063E2  6EF8               	movwf	tblptru,c
   495  0063E4  EE00  F063         	lfsr	0,__pdataCOMRAM
   496  0063E8  EE10 F018          	lfsr	1,24
   497  0063EC                     copy_data0:
   498  0063EC  0009               	tblrd		*+
   499  0063EE  CFF5 FFEE          	movff	tablat,postinc0
   500  0063F2  50E5               	movf	postdec1,w,c
   501  0063F4  50E1               	movf	fsr1l,w,c
   502  0063F6  E1FA               	bnz	copy_data0
   503                           
   504                           ; Clear objects allocated to COMRAM (36 bytes)
   505  0063F8  EE00  F03F         	lfsr	0,__pbssCOMRAM
   506  0063FC  0E24               	movlw	36
   507  0063FE                     clear_0:
   508  0063FE  6AEE               	clrf	postinc0,c
   509  006400  06E8               	decf	wreg,f,c
   510  006402  E1FD               	bnz	clear_0
   511  006404                     end_of_initialization:
   512                           	callstack 0
   513  006404                     __end_of__initialization:
   514                           	callstack 0
   515  006404  0E00               	movlw	low (__Lmediumconst shr (0+16))
   516  006406  6EF8               	movwf	tblptru,c
   517  006408  0100               	movlb	0
   518  00640A  EFC5  F039         	goto	_main	;jump to C main() function
   519                           
   520                           	psect	bssCOMRAM
   521  00003F                     __pbssCOMRAM:
   522                           	callstack 0
   523  00003F                     _oldStudyGoal:
   524                           	callstack 0
   525  00003F                     	ds	4
   526  000043                     _studyGoal:
   527                           	callstack 0
   528  000043                     	ds	4
   529  000047                     _totalBreak:
   530                           	callstack 0
   531  000047                     	ds	4
   532  00004B                     _totalStudied:
   533                           	callstack 0
   534  00004B                     	ds	4
   535  00004F                     _time:
   536                           	callstack 0
   537  00004F                     	ds	4
   538  000053                     kpDebounce@oldRead:
   539                           	callstack 0
   540  000053                     	ds	2
   541  000055                     kpDebounce@newRead:
   542                           	callstack 0
   543  000055                     	ds	2
   544  000057                     _keys:
   545                           	callstack 0
   546  000057                     	ds	2
   547  000059                     _oldValue:
   548                           	callstack 0
   549  000059                     	ds	2
   550  00005B                     _v3:
   551                           	callstack 0
   552  00005B                     	ds	1
   553  00005C                     _v2:
   554                           	callstack 0
   555  00005C                     	ds	1
   556  00005D                     _v1:
   557                           	callstack 0
   558  00005D                     	ds	1
   559  00005E                     _v0:
   560                           	callstack 0
   561  00005E                     	ds	1
   562  00005F                     _display:
   563                           	callstack 0
   564  00005F                     	ds	1
   565  000060                     kpDebounce@tempo:
   566                           	callstack 0
   567  000060                     	ds	1
   568  000061                     _enable:
   569                           	callstack 0
   570  000061                     	ds	1
   571  000062                     _tecla:
   572                           	callstack 0
   573  000062                     	ds	1
   574                           
   575                           	psect	dataCOMRAM
   576  000063                     __pdataCOMRAM:
   577                           	callstack 0
   578  000063                     _led:
   579                           	callstack 0
   580  000063                     	ds	8
   581  00006B                     _reset:
   582                           	callstack 0
   583  00006B                     	ds	4
   584  00006F                     _bigBreak:
   585                           	callstack 0
   586  00006F                     	ds	4
   587  000073                     _breakTime:
   588                           	callstack 0
   589  000073                     	ds	4
   590  000077                     _studyTime:
   591                           	callstack 0
   592  000077                     	ds	4
   593                           
   594                           	psect	cstackCOMRAM
   595  000001                     __pcstackCOMRAM:
   596                           	callstack 0
   597  000001                     ??_kpReadKey:
   598  000001                     ?_kpRead:
   599                           	callstack 0
   600  000001                     ?_adcRead:
   601                           	callstack 0
   602  000001                     ?_digitalRead:
   603                           	callstack 0
   604  000001                     ?___awdiv:
   605                           	callstack 0
   606  000001                     ?___lmul:
   607                           	callstack 0
   608  000001                     LigarLed@num:
   609                           	callstack 0
   610  000001                     DesligarLed@num:
   611                           	callstack 0
   612  000001                     adcRead@channel:
   613                           	callstack 0
   614  000001                     delayMicro@a:
   615                           	callstack 0
   616  000001                     delayMili@a:
   617                           	callstack 0
   618  000001                     digitalWrite@pin:
   619                           	callstack 0
   620  000001                     digitalRead@pin:
   621                           	callstack 0
   622  000001                     pinMode@pin:
   623                           	callstack 0
   624  000001                     ___awdiv@dividend:
   625                           	callstack 0
   626  000001                     ___lmul@multiplier:
   627                           	callstack 0
   628                           
   629                           ; 4 bytes @ 0x0
   630  000001                     	ds	2
   631  000003                     ??_digitalRead:
   632  000003                     ??_delayMili:
   633  000003                     adcRead@ADvalor:
   634                           	callstack 0
   635  000003                     digitalWrite@value:
   636                           	callstack 0
   637  000003                     pinMode@type:
   638                           	callstack 0
   639  000003                     ___awdiv@divisor:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x2
   643  000003                     	ds	1
   644  000004                     kpReadKey@i:
   645                           	callstack 0
   646  000004                     delayMili@i:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x3
   650  000004                     	ds	1
   651  000005                     ??_pinMode:
   652  000005                     ??_digitalWrite:
   653  000005                     ___awdiv@counter:
   654                           	callstack 0
   655  000005                     ___lmul@multiplicand:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x4
   659  000005                     	ds	1
   660  000006                     ___awdiv@sign:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x5
   664  000006                     	ds	1
   665  000007                     soWrite@value:
   666                           	callstack 0
   667  000007                     ___awdiv@quotient:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x6
   671  000007                     	ds	2
   672  000009                     ?___awmod:
   673                           	callstack 0
   674  000009                     soWrite@i:
   675                           	callstack 0
   676  000009                     ___awmod@dividend:
   677                           	callstack 0
   678  000009                     ___lmul@product:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x8
   682  000009                     	ds	1
   683  00000A                     ??_ssdUpdate:
   684  00000A                     ??_kpDebounce:
   685  00000A                     pushNibble@rs:
   686                           	callstack 0
   687  00000A                     pushByte@rs:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x9
   691  00000A                     	ds	1
   692  00000B                     ___awmod@divisor:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0xA
   696  00000B                     	ds	1
   697  00000C                     ??_pushByte:
   698  00000C                     pushNibble@value:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0xB
   702  00000C                     	ds	1
   703  00000D                     ?___aldiv:
   704                           	callstack 0
   705  00000D                     pushByte@value:
   706                           	callstack 0
   707  00000D                     ___awmod@counter:
   708                           	callstack 0
   709  00000D                     kpDebounce@i:
   710                           	callstack 0
   711  00000D                     ___aldiv@dividend:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0xC
   715  00000D                     	ds	1
   716  00000E                     lcdCommand@value:
   717                           	callstack 0
   718  00000E                     lcdChar@value:
   719                           	callstack 0
   720  00000E                     ___awmod@sign:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0xD
   724  00000E                     	ds	1
   725  00000F                     lcdString@msg:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0xE
   729  00000F                     	ds	2
   730  000011                     ??_lcdString:
   731  000011                     ___aldiv@divisor:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x10
   735  000011                     	ds	2
   736  000013                     lcdString@i:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x12
   740  000013                     	ds	2
   741  000015                     ___aldiv@counter:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x14
   745  000015                     	ds	1
   746  000016                     ___aldiv@sign:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0x15
   750  000016                     	ds	1
   751  000017                     ___aldiv@quotient:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x16
   755  000017                     	ds	4
   756  00001B                     ??_verifyGoal:
   757  00001B                     ?___almod:
   758                           	callstack 0
   759  00001B                     lcdNumber@value:
   760                           	callstack 0
   761  00001B                     ___almod@dividend:
   762                           	callstack 0
   763                           
   764                           ; 4 bytes @ 0x1A
   765  00001B                     	ds	1
   766  00001C                     verifyGoal@i:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x1B
   770  00001C                     	ds	1
   771  00001D                     lcdNumber@i:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x1C
   775  00001D                     	ds	1
   776  00001E                     verifyGoal@j:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x1D
   780  00001E                     	ds	1
   781  00001F                     SetaMeta@i:
   782                           	callstack 0
   783  00001F                     ___almod@divisor:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x1E
   787  00001F                     	ds	1
   788  000020                     verifyGoal@test:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x1F
   792  000020                     	ds	3
   793  000023                     ___almod@counter:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x22
   797  000023                     	ds	1
   798  000024                     ___almod@sign:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x23
   802  000024                     	ds	1
   803  000025                     ssdDigit@pos:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x24
   807  000025                     	ds	1
   808  000026                     ssdDigit@val:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x25
   812  000026                     	ds	1
   813  000027                     ??_operate:
   814                           
   815                           ; 1 bytes @ 0x26
   816  000027                     	ds	2
   817  000029                     _operate$1186:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x28
   821  000029                     	ds	4
   822  00002D                     _operate$1187:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x2C
   826  00002D                     	ds	4
   827  000031                     operate@op:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x30
   831  000031                     	ds	1
   832  000032                     operate@tempo:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x31
   836  000032                     	ds	2
   837  000034                     ??_main:
   838                           
   839                           ; 1 bytes @ 0x33
   840  000034                     	ds	2
   841  000036                     _main$1188:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x35
   845  000036                     	ds	4
   846  00003A                     _main$1189:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x39
   850  00003A                     	ds	4
   851  00003E                     main@slot:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x3D
   855  00003E                     	ds	1
   856                           
   857 ;;
   858 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   859 ;;
   860 ;; *************** function _main *****************
   861 ;; Defined at:
   862 ;;		line 156 in file "main.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  slot            1   61[COMRAM] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   876 ;;      Params:         0       0       0       0       0       0       0
   877 ;;      Locals:         9       0       0       0       0       0       0
   878 ;;      Temps:          2       0       0       0       0       0       0
   879 ;;      Totals:        11       0       0       0       0       0       0
   880 ;;Total ram usage:       11 bytes
   881 ;; Hardware stack levels required when called: 8
   882 ;; This function calls:
   883 ;;		_ConfiguraLed
   884 ;;		_LeTeclado
   885 ;;		_SetaMeta
   886 ;;		___aldiv
   887 ;;		___almod
   888 ;;		_adcInit
   889 ;;		_kpDebounce
   890 ;;		_kpInit
   891 ;;		_lcdInit
   892 ;;		_ssdDigit
   893 ;;		_ssdInit
   894 ;;		_ssdUpdate
   895 ;; This function is called by:
   896 ;;		Startup code after reset
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text0
   901  00738A                     __ptext0:
   902                           	callstack 0
   903  00738A                     _main:
   904                           	callstack 23
   905  00738A                     
   906                           ;main.c: 157:     char slot;;main.c: 159:     lcdInit();
   907  00738A  EC17  F035         	call	_lcdInit	;wreg free
   908                           
   909                           ;main.c: 160:     kpInit();
   910  00738E  ECD3  F031         	call	_kpInit	;wreg free
   911                           
   912                           ;main.c: 161:     ssdInit();
   913  007392  ECE5  F032         	call	_ssdInit	;wreg free
   914  007396                     
   915                           ;main.c: 162:     ConfiguraLed();
   916  007396  EC35  F031         	call	_ConfiguraLed	;wreg free
   917  00739A                     
   918                           ;main.c: 163:     adcInit();
   919  00739A  EC47  F032         	call	_adcInit	;wreg free
   920  00739E  EFEB  F039         	goto	l2741
   921  0073A2                     l2721:
   922                           
   923                           ;main.c: 171:                 LeTeclado();
   924  0073A2  EC14  F034         	call	_LeTeclado	;wreg free
   925  0073A6                     l2723:
   926                           
   927                           ;main.c: 172:                 slot = 2;
   928  0073A6  0E02               	movlw	2
   929  0073A8  6E3E               	movwf	main@slot^0,c
   930                           
   931                           ;main.c: 173:                 break;
   932  0073AA  EF08  F03A         	goto	l2743
   933  0073AE                     l2727:
   934                           
   935                           ;main.c: 179:                 kpDebounce();
   936  0073AE  ECCF  F036         	call	_kpDebounce	;wreg free
   937  0073B2                     
   938                           ;main.c: 180:                 slot = 3;
   939  0073B2  0E03               	movlw	3
   940  0073B4  6E3E               	movwf	main@slot^0,c
   941                           
   942                           ;main.c: 181:                 break;
   943  0073B6  EF08  F03A         	goto	l2743
   944  0073BA                     l2731:
   945                           
   946                           ;main.c: 183:                 if (enable == 1) {
   947  0073BA  0461               	decf	_enable^0,w,c
   948  0073BC  A4D8               	btfss	status,2,c
   949  0073BE  EFE3  F039         	goto	u2511
   950  0073C2  EFE5  F039         	goto	u2510
   951  0073C6                     u2511:
   952  0073C6  EFE7  F039         	goto	l2735
   953  0073CA                     u2510:
   954  0073CA                     
   955                           ;main.c: 184:                     SetaMeta();
   956  0073CA  ECBE  F034         	call	_SetaMeta	;wreg free
   957  0073CE                     l2735:
   958                           
   959                           ;main.c: 186:                 slot = 0;
   960  0073CE  0E00               	movlw	0
   961  0073D0  6E3E               	movwf	main@slot^0,c
   962                           
   963                           ;main.c: 187:                 break;
   964  0073D2  EF08  F03A         	goto	l2743
   965  0073D6                     l2741:
   966  0073D6  503E               	movf	main@slot^0,w,c
   967  0073D8  6E34               	movwf	??_main^0,c
   968  0073DA  6A35               	clrf	(??_main+1)^0,c
   969                           
   970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   971                           ; Switch size 1, requested type "simple"
   972                           ; Number of cases is 1, Range of values is 0 to 0
   973                           ; switch strategies available:
   974                           ; Name         Instructions Cycles
   975                           ; simple_byte            4     3 (average)
   976                           ;	Chosen strategy is simple_byte
   977  0073DC  5035               	movf	(??_main+1)^0,w,c
   978  0073DE  0A00               	xorlw	0	; case 0
   979  0073E0  B4D8               	btfsc	status,2,c
   980  0073E2  EFF5  F039         	goto	l2833
   981  0073E6  EFE7  F039         	goto	l2735
   982  0073EA                     l2833:
   983                           
   984                           ; Switch size 1, requested type "simple"
   985                           ; Number of cases is 4, Range of values is 0 to 3
   986                           ; switch strategies available:
   987                           ; Name         Instructions Cycles
   988                           ; simple_byte           13     7 (average)
   989                           ;	Chosen strategy is simple_byte
   990  0073EA  5034               	movf	??_main^0,w,c
   991  0073EC  0A00               	xorlw	0	; case 0
   992  0073EE  B4D8               	btfsc	status,2,c
   993  0073F0  EFD1  F039         	goto	l2721
   994  0073F4  0A01               	xorlw	1	; case 1
   995  0073F6  B4D8               	btfsc	status,2,c
   996  0073F8  EFD3  F039         	goto	l2723
   997  0073FC  0A03               	xorlw	3	; case 2
   998  0073FE  B4D8               	btfsc	status,2,c
   999  007400  EFD7  F039         	goto	l2727
  1000  007404  0A01               	xorlw	1	; case 3
  1001  007406  B4D8               	btfsc	status,2,c
  1002  007408  EFDD  F039         	goto	l2731
  1003  00740C  EFE7  F039         	goto	l2735
  1004  007410                     l2743:
  1005                           
  1006                           ;main.c: 192:         ssdDigit(((time / 3600) % 24) / 10, 0);
  1007  007410  0E18               	movlw	24
  1008  007412  6E1F               	movwf	___almod@divisor^0,c
  1009  007414  0E00               	movlw	0
  1010  007416  6E20               	movwf	(___almod@divisor+1)^0,c
  1011  007418  0E00               	movlw	0
  1012  00741A  6E21               	movwf	(___almod@divisor+2)^0,c
  1013  00741C  0E00               	movlw	0
  1014  00741E  6E22               	movwf	(___almod@divisor+3)^0,c
  1015  007420  0E10               	movlw	16
  1016  007422  6E11               	movwf	___aldiv@divisor^0,c
  1017  007424  0E0E               	movlw	14
  1018  007426  6E12               	movwf	(___aldiv@divisor+1)^0,c
  1019  007428  0E00               	movlw	0
  1020  00742A  6E13               	movwf	(___aldiv@divisor+2)^0,c
  1021  00742C  0E00               	movlw	0
  1022  00742E  6E14               	movwf	(___aldiv@divisor+3)^0,c
  1023  007430  C04F  F00D         	movff	_time,___aldiv@dividend
  1024  007434  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  1025  007438  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  1026  00743C  C052  F010         	movff	_time+3,___aldiv@dividend+3
  1027  007440  EC49  F036         	call	___aldiv	;wreg free
  1028  007444  C00D  F01B         	movff	?___aldiv,___almod@dividend
  1029  007448  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  1030  00744C  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  1031  007450  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  1032  007454  ECD3  F035         	call	___almod	;wreg free
  1033  007458  C01B  F036         	movff	?___almod,_main$1188
  1034  00745C  C01C  F037         	movff	?___almod+1,_main$1188+1
  1035  007460  C01D  F038         	movff	?___almod+2,_main$1188+2
  1036  007464  C01E  F039         	movff	?___almod+3,_main$1188+3
  1037                           
  1038                           ;main.c: 192:         ssdDigit(((time / 3600) % 24) / 10, 0);
  1039  007468  0E00               	movlw	0
  1040  00746A  6E25               	movwf	ssdDigit@pos^0,c
  1041  00746C  C036  F00D         	movff	_main$1188,___aldiv@dividend
  1042  007470  C037  F00E         	movff	_main$1188+1,___aldiv@dividend+1
  1043  007474  C038  F00F         	movff	_main$1188+2,___aldiv@dividend+2
  1044  007478  C039  F010         	movff	_main$1188+3,___aldiv@dividend+3
  1045  00747C  0E0A               	movlw	10
  1046  00747E  6E11               	movwf	___aldiv@divisor^0,c
  1047  007480  0E00               	movlw	0
  1048  007482  6E12               	movwf	(___aldiv@divisor+1)^0,c
  1049  007484  0E00               	movlw	0
  1050  007486  6E13               	movwf	(___aldiv@divisor+2)^0,c
  1051  007488  0E00               	movlw	0
  1052  00748A  6E14               	movwf	(___aldiv@divisor+3)^0,c
  1053  00748C  EC49  F036         	call	___aldiv	;wreg free
  1054  007490  500D               	movf	?___aldiv^0,w,c
  1055  007492  EC10  F033         	call	_ssdDigit
  1056                           
  1057                           ;main.c: 193:         ssdDigit(((time / 3600) % 24) % 10, 1);
  1058  007496  0E18               	movlw	24
  1059  007498  6E1F               	movwf	___almod@divisor^0,c
  1060  00749A  0E00               	movlw	0
  1061  00749C  6E20               	movwf	(___almod@divisor+1)^0,c
  1062  00749E  0E00               	movlw	0
  1063  0074A0  6E21               	movwf	(___almod@divisor+2)^0,c
  1064  0074A2  0E00               	movlw	0
  1065  0074A4  6E22               	movwf	(___almod@divisor+3)^0,c
  1066  0074A6  0E10               	movlw	16
  1067  0074A8  6E11               	movwf	___aldiv@divisor^0,c
  1068  0074AA  0E0E               	movlw	14
  1069  0074AC  6E12               	movwf	(___aldiv@divisor+1)^0,c
  1070  0074AE  0E00               	movlw	0
  1071  0074B0  6E13               	movwf	(___aldiv@divisor+2)^0,c
  1072  0074B2  0E00               	movlw	0
  1073  0074B4  6E14               	movwf	(___aldiv@divisor+3)^0,c
  1074  0074B6  C04F  F00D         	movff	_time,___aldiv@dividend
  1075  0074BA  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  1076  0074BE  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  1077  0074C2  C052  F010         	movff	_time+3,___aldiv@dividend+3
  1078  0074C6  EC49  F036         	call	___aldiv	;wreg free
  1079  0074CA  C00D  F01B         	movff	?___aldiv,___almod@dividend
  1080  0074CE  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  1081  0074D2  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  1082  0074D6  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  1083  0074DA  ECD3  F035         	call	___almod	;wreg free
  1084  0074DE  C01B  F03A         	movff	?___almod,_main$1189
  1085  0074E2  C01C  F03B         	movff	?___almod+1,_main$1189+1
  1086  0074E6  C01D  F03C         	movff	?___almod+2,_main$1189+2
  1087  0074EA  C01E  F03D         	movff	?___almod+3,_main$1189+3
  1088                           
  1089                           ;main.c: 193:         ssdDigit(((time / 3600) % 24) % 10, 1);
  1090  0074EE  0E01               	movlw	1
  1091  0074F0  6E25               	movwf	ssdDigit@pos^0,c
  1092  0074F2  C03A  F01B         	movff	_main$1189,___almod@dividend
  1093  0074F6  C03B  F01C         	movff	_main$1189+1,___almod@dividend+1
  1094  0074FA  C03C  F01D         	movff	_main$1189+2,___almod@dividend+2
  1095  0074FE  C03D  F01E         	movff	_main$1189+3,___almod@dividend+3
  1096  007502  0E0A               	movlw	10
  1097  007504  6E1F               	movwf	___almod@divisor^0,c
  1098  007506  0E00               	movlw	0
  1099  007508  6E20               	movwf	(___almod@divisor+1)^0,c
  1100  00750A  0E00               	movlw	0
  1101  00750C  6E21               	movwf	(___almod@divisor+2)^0,c
  1102  00750E  0E00               	movlw	0
  1103  007510  6E22               	movwf	(___almod@divisor+3)^0,c
  1104  007512  ECD3  F035         	call	___almod	;wreg free
  1105  007516  501B               	movf	?___almod^0,w,c
  1106  007518  EC10  F033         	call	_ssdDigit
  1107                           
  1108                           ;main.c: 194:         ssdDigit((time / 600) % 6, 2);
  1109  00751C  0E02               	movlw	2
  1110  00751E  6E25               	movwf	ssdDigit@pos^0,c
  1111  007520  0E58               	movlw	88
  1112  007522  6E11               	movwf	___aldiv@divisor^0,c
  1113  007524  0E02               	movlw	2
  1114  007526  6E12               	movwf	(___aldiv@divisor+1)^0,c
  1115  007528  0E00               	movlw	0
  1116  00752A  6E13               	movwf	(___aldiv@divisor+2)^0,c
  1117  00752C  0E00               	movlw	0
  1118  00752E  6E14               	movwf	(___aldiv@divisor+3)^0,c
  1119  007530  C04F  F00D         	movff	_time,___aldiv@dividend
  1120  007534  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  1121  007538  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  1122  00753C  C052  F010         	movff	_time+3,___aldiv@dividend+3
  1123  007540  EC49  F036         	call	___aldiv	;wreg free
  1124  007544  C00D  F01B         	movff	?___aldiv,___almod@dividend
  1125  007548  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  1126  00754C  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  1127  007550  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  1128  007554  0E06               	movlw	6
  1129  007556  6E1F               	movwf	___almod@divisor^0,c
  1130  007558  0E00               	movlw	0
  1131  00755A  6E20               	movwf	(___almod@divisor+1)^0,c
  1132  00755C  0E00               	movlw	0
  1133  00755E  6E21               	movwf	(___almod@divisor+2)^0,c
  1134  007560  0E00               	movlw	0
  1135  007562  6E22               	movwf	(___almod@divisor+3)^0,c
  1136  007564  ECD3  F035         	call	___almod	;wreg free
  1137  007568  501B               	movf	?___almod^0,w,c
  1138  00756A  EC10  F033         	call	_ssdDigit
  1139                           
  1140                           ;main.c: 195:         ssdDigit((time / 60) % 10, 3);
  1141  00756E  0E03               	movlw	3
  1142  007570  6E25               	movwf	ssdDigit@pos^0,c
  1143  007572  0E3C               	movlw	60
  1144  007574  6E11               	movwf	___aldiv@divisor^0,c
  1145  007576  0E00               	movlw	0
  1146  007578  6E12               	movwf	(___aldiv@divisor+1)^0,c
  1147  00757A  0E00               	movlw	0
  1148  00757C  6E13               	movwf	(___aldiv@divisor+2)^0,c
  1149  00757E  0E00               	movlw	0
  1150  007580  6E14               	movwf	(___aldiv@divisor+3)^0,c
  1151  007582  C04F  F00D         	movff	_time,___aldiv@dividend
  1152  007586  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  1153  00758A  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  1154  00758E  C052  F010         	movff	_time+3,___aldiv@dividend+3
  1155  007592  EC49  F036         	call	___aldiv	;wreg free
  1156  007596  C00D  F01B         	movff	?___aldiv,___almod@dividend
  1157  00759A  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  1158  00759E  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  1159  0075A2  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  1160  0075A6  0E0A               	movlw	10
  1161  0075A8  6E1F               	movwf	___almod@divisor^0,c
  1162  0075AA  0E00               	movlw	0
  1163  0075AC  6E20               	movwf	(___almod@divisor+1)^0,c
  1164  0075AE  0E00               	movlw	0
  1165  0075B0  6E21               	movwf	(___almod@divisor+2)^0,c
  1166  0075B2  0E00               	movlw	0
  1167  0075B4  6E22               	movwf	(___almod@divisor+3)^0,c
  1168  0075B6  ECD3  F035         	call	___almod	;wreg free
  1169  0075BA  501B               	movf	?___almod^0,w,c
  1170  0075BC  EC10  F033         	call	_ssdDigit
  1171  0075C0                     
  1172                           ;main.c: 196:         ssdUpdate();
  1173  0075C0  EC1F  F038         	call	_ssdUpdate	;wreg free
  1174                           
  1175                           ;main.c: 197:     }
  1176  0075C4  EFEB  F039         	goto	l2741
  1177  0075C8  EF00  F000         	goto	start
  1178  0075CC                     __end_of_main:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _ssdInit *****************
  1182 ;; Defined at:
  1183 ;;		line 94 in file "ssd.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1197 ;;      Params:         0       0       0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0
  1200 ;;      Totals:         0       0       0       0       0       0       0
  1201 ;;Total ram usage:        0 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; Hardware stack levels required when called: 2
  1204 ;; This function calls:
  1205 ;;		_pinMode
  1206 ;;		_soInit
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           	psect	text1
  1213  0065CA                     __ptext1:
  1214                           	callstack 0
  1215  0065CA                     _ssdInit:
  1216                           	callstack 28
  1217  0065CA                     
  1218                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1219  0065CA  0E00               	movlw	0
  1220  0065CC  6E02               	movwf	(pinMode@pin+1)^0,c
  1221  0065CE  0E18               	movlw	24
  1222  0065D0  6E01               	movwf	pinMode@pin^0,c
  1223  0065D2  0E00               	movlw	0
  1224  0065D4  6E04               	movwf	(pinMode@type+1)^0,c
  1225  0065D6  0E00               	movlw	0
  1226  0065D8  6E03               	movwf	pinMode@type^0,c
  1227  0065DA  EC0D  F03C         	call	_pinMode	;wreg free
  1228                           
  1229                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1230  0065DE  0E00               	movlw	0
  1231  0065E0  6E02               	movwf	(pinMode@pin+1)^0,c
  1232  0065E2  0E19               	movlw	25
  1233  0065E4  6E01               	movwf	pinMode@pin^0,c
  1234  0065E6  0E00               	movlw	0
  1235  0065E8  6E04               	movwf	(pinMode@type+1)^0,c
  1236  0065EA  0E00               	movlw	0
  1237  0065EC  6E03               	movwf	pinMode@type^0,c
  1238  0065EE  EC0D  F03C         	call	_pinMode	;wreg free
  1239                           
  1240                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1241  0065F2  0E00               	movlw	0
  1242  0065F4  6E02               	movwf	(pinMode@pin+1)^0,c
  1243  0065F6  0E1A               	movlw	26
  1244  0065F8  6E01               	movwf	pinMode@pin^0,c
  1245  0065FA  0E00               	movlw	0
  1246  0065FC  6E04               	movwf	(pinMode@type+1)^0,c
  1247  0065FE  0E00               	movlw	0
  1248  006600  6E03               	movwf	pinMode@type^0,c
  1249  006602  EC0D  F03C         	call	_pinMode	;wreg free
  1250                           
  1251                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1252  006606  0E00               	movlw	0
  1253  006608  6E02               	movwf	(pinMode@pin+1)^0,c
  1254  00660A  0E1B               	movlw	27
  1255  00660C  6E01               	movwf	pinMode@pin^0,c
  1256  00660E  0E00               	movlw	0
  1257  006610  6E04               	movwf	(pinMode@type+1)^0,c
  1258  006612  0E00               	movlw	0
  1259  006614  6E03               	movwf	pinMode@type^0,c
  1260  006616  EC0D  F03C         	call	_pinMode	;wreg free
  1261                           
  1262                           ;ssd.c: 102:     soInit();
  1263  00661A  EC07  F032         	call	_soInit	;wreg free
  1264  00661E  0012               	return		;funcret
  1265  006620                     __end_of_ssdInit:
  1266                           	callstack 0
  1267                           
  1268 ;; *************** function _lcdInit *****************
  1269 ;; Defined at:
  1270 ;;		line 72 in file "lcd.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1284 ;;      Params:         0       0       0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0
  1287 ;;      Totals:         0       0       0       0       0       0       0
  1288 ;;Total ram usage:        0 bytes
  1289 ;; Hardware stack levels used: 1
  1290 ;; Hardware stack levels required when called: 5
  1291 ;; This function calls:
  1292 ;;		_delayMicro
  1293 ;;		_delayMili
  1294 ;;		_lcdCommand
  1295 ;;		_pinMode
  1296 ;;		_pushNibble
  1297 ;;		_soInit
  1298 ;; This function is called by:
  1299 ;;		_main
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text2
  1304  006A2E                     __ptext2:
  1305                           	callstack 0
  1306  006A2E                     _lcdInit:
  1307                           	callstack 25
  1308  006A2E                     
  1309                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  1310  006A2E  0E00               	movlw	0
  1311  006A30  6E02               	movwf	(pinMode@pin+1)^0,c
  1312  006A32  0E1C               	movlw	28
  1313  006A34  6E01               	movwf	pinMode@pin^0,c
  1314  006A36  0E00               	movlw	0
  1315  006A38  6E04               	movwf	(pinMode@type+1)^0,c
  1316  006A3A  0E00               	movlw	0
  1317  006A3C  6E03               	movwf	pinMode@type^0,c
  1318  006A3E  EC0D  F03C         	call	_pinMode	;wreg free
  1319                           
  1320                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  1321  006A42  0E00               	movlw	0
  1322  006A44  6E02               	movwf	(pinMode@pin+1)^0,c
  1323  006A46  0E1D               	movlw	29
  1324  006A48  6E01               	movwf	pinMode@pin^0,c
  1325  006A4A  0E00               	movlw	0
  1326  006A4C  6E04               	movwf	(pinMode@type+1)^0,c
  1327  006A4E  0E00               	movlw	0
  1328  006A50  6E03               	movwf	pinMode@type^0,c
  1329  006A52  EC0D  F03C         	call	_pinMode	;wreg free
  1330                           
  1331                           ;lcd.c: 75:  soInit();
  1332  006A56  EC07  F032         	call	_soInit	;wreg free
  1333                           
  1334                           ;lcd.c: 76:  delayMili(15);
  1335  006A5A  0E00               	movlw	0
  1336  006A5C  6E02               	movwf	(delayMili@a+1)^0,c
  1337  006A5E  0E0F               	movlw	15
  1338  006A60  6E01               	movwf	delayMili@a^0,c
  1339  006A62  ECBB  F031         	call	_delayMili	;wreg free
  1340                           
  1341                           ;lcd.c: 78:  pushNibble(0x03, 0);
  1342  006A66  0E00               	movlw	0
  1343  006A68  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1344  006A6A  0E00               	movlw	0
  1345  006A6C  6E0A               	movwf	pushNibble@rs^0,c
  1346  006A6E  0E03               	movlw	3
  1347  006A70  EC7E  F031         	call	_pushNibble
  1348                           
  1349                           ;lcd.c: 79:  delayMili(5);
  1350  006A74  0E00               	movlw	0
  1351  006A76  6E02               	movwf	(delayMili@a+1)^0,c
  1352  006A78  0E05               	movlw	5
  1353  006A7A  6E01               	movwf	delayMili@a^0,c
  1354  006A7C  ECBB  F031         	call	_delayMili	;wreg free
  1355                           
  1356                           ;lcd.c: 80:  pushNibble(0x03, 0);
  1357  006A80  0E00               	movlw	0
  1358  006A82  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1359  006A84  0E00               	movlw	0
  1360  006A86  6E0A               	movwf	pushNibble@rs^0,c
  1361  006A88  0E03               	movlw	3
  1362  006A8A  EC7E  F031         	call	_pushNibble
  1363  006A8E                     
  1364                           ;lcd.c: 81:  delayMicro(160);
  1365  006A8E  0E00               	movlw	0
  1366  006A90  6E02               	movwf	(delayMicro@a+1)^0,c
  1367  006A92  0EA0               	movlw	160
  1368  006A94  6E01               	movwf	delayMicro@a^0,c
  1369  006A96  EC34  F031         	call	_delayMicro	;wreg free
  1370  006A9A                     
  1371                           ;lcd.c: 82:  pushNibble(0x03, 0);
  1372  006A9A  0E00               	movlw	0
  1373  006A9C  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1374  006A9E  0E00               	movlw	0
  1375  006AA0  6E0A               	movwf	pushNibble@rs^0,c
  1376  006AA2  0E03               	movlw	3
  1377  006AA4  EC7E  F031         	call	_pushNibble
  1378                           
  1379                           ;lcd.c: 83:  delayMicro(160);
  1380  006AA8  0E00               	movlw	0
  1381  006AAA  6E02               	movwf	(delayMicro@a+1)^0,c
  1382  006AAC  0EA0               	movlw	160
  1383  006AAE  6E01               	movwf	delayMicro@a^0,c
  1384  006AB0  EC34  F031         	call	_delayMicro	;wreg free
  1385  006AB4                     
  1386                           ;lcd.c: 85:  pushNibble(0x02, 0);
  1387  006AB4  0E00               	movlw	0
  1388  006AB6  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1389  006AB8  0E00               	movlw	0
  1390  006ABA  6E0A               	movwf	pushNibble@rs^0,c
  1391  006ABC  0E02               	movlw	2
  1392  006ABE  EC7E  F031         	call	_pushNibble
  1393  006AC2                     
  1394                           ;lcd.c: 86:  delayMili(10);
  1395  006AC2  0E00               	movlw	0
  1396  006AC4  6E02               	movwf	(delayMili@a+1)^0,c
  1397  006AC6  0E0A               	movlw	10
  1398  006AC8  6E01               	movwf	delayMili@a^0,c
  1399  006ACA  ECBB  F031         	call	_delayMili	;wreg free
  1400  006ACE                     
  1401                           ;lcd.c: 88:  lcdCommand(0x28);
  1402  006ACE  0E28               	movlw	40
  1403  006AD0  EC60  F031         	call	_lcdCommand
  1404  006AD4                     
  1405                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  1406  006AD4  0E0C               	movlw	12
  1407  006AD6  EC60  F031         	call	_lcdCommand
  1408  006ADA                     
  1409                           ;lcd.c: 90:  lcdCommand(0x01);
  1410  006ADA  0E01               	movlw	1
  1411  006ADC  EC60  F031         	call	_lcdCommand
  1412  006AE0  0012               	return		;funcret
  1413  006AE2                     __end_of_lcdInit:
  1414                           	callstack 0
  1415                           
  1416 ;; *************** function _pushNibble *****************
  1417 ;; Defined at:
  1418 ;;		line 25 in file "lcd.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  value           1    wreg     unsigned char 
  1421 ;;  rs              2    9[COMRAM] int 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  value           1   11[COMRAM] unsigned char 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1433 ;;      Params:         2       0       0       0       0       0       0
  1434 ;;      Locals:         1       0       0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0
  1436 ;;      Totals:         3       0       0       0       0       0       0
  1437 ;;Total ram usage:        3 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 3
  1440 ;; This function calls:
  1441 ;;		_digitalWrite
  1442 ;;		_pulseEnablePin
  1443 ;;		_soWrite
  1444 ;; This function is called by:
  1445 ;;		_lcdInit
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text3
  1450  0062FC                     __ptext3:
  1451                           	callstack 0
  1452  0062FC                     _pushNibble:
  1453                           	callstack 26
  1454                           
  1455                           ;incstack = 0
  1456                           ;pushNibble@value stored from wreg
  1457  0062FC  6E0C               	movwf	pushNibble@value^0,c
  1458  0062FE                     
  1459                           ;lcd.c: 26:  soWrite(value);
  1460  0062FE  C00C  F007         	movff	pushNibble@value,soWrite@value
  1461  006302  6A08               	clrf	(soWrite@value+1)^0,c
  1462  006304  EC6B  F032         	call	_soWrite	;wreg free
  1463                           
  1464                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  1465  006308  0E00               	movlw	0
  1466  00630A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1467  00630C  0E1D               	movlw	29
  1468  00630E  6E01               	movwf	digitalWrite@pin^0,c
  1469  006310  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  1470  006314  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  1471  006318  ECE6  F03A         	call	_digitalWrite	;wreg free
  1472                           
  1473                           ;lcd.c: 28:  pulseEnablePin();
  1474  00631C  EC26  F032         	call	_pulseEnablePin	;wreg free
  1475  006320  0012               	return		;funcret
  1476  006322                     __end_of_pushNibble:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _kpInit *****************
  1480 ;; Defined at:
  1481 ;;		line 54 in file "keypad.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1495 ;;      Params:         0       0       0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0
  1498 ;;      Totals:         0       0       0       0       0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 2
  1502 ;; This function calls:
  1503 ;;		_pinMode
  1504 ;;		_soInit
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text4
  1511  0063A6                     __ptext4:
  1512                           	callstack 0
  1513  0063A6                     _kpInit:
  1514                           	callstack 28
  1515  0063A6                     
  1516                           ;keypad.c: 55:   soInit();
  1517  0063A6  EC07  F032         	call	_soInit	;wreg free
  1518                           
  1519                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  1520  0063AA  0E00               	movlw	0
  1521  0063AC  6E02               	movwf	(pinMode@pin+1)^0,c
  1522  0063AE  0E0A               	movlw	10
  1523  0063B0  6E01               	movwf	pinMode@pin^0,c
  1524  0063B2  0E00               	movlw	0
  1525  0063B4  6E04               	movwf	(pinMode@type+1)^0,c
  1526  0063B6  0E01               	movlw	1
  1527  0063B8  6E03               	movwf	pinMode@type^0,c
  1528  0063BA  EC0D  F03C         	call	_pinMode	;wreg free
  1529                           
  1530                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  1531  0063BE  0E00               	movlw	0
  1532  0063C0  6E02               	movwf	(pinMode@pin+1)^0,c
  1533  0063C2  0E09               	movlw	9
  1534  0063C4  6E01               	movwf	pinMode@pin^0,c
  1535  0063C6  0E00               	movlw	0
  1536  0063C8  6E04               	movwf	(pinMode@type+1)^0,c
  1537  0063CA  0E01               	movlw	1
  1538  0063CC  6E03               	movwf	pinMode@type^0,c
  1539  0063CE  EC0D  F03C         	call	_pinMode	;wreg free
  1540  0063D2                     
  1541                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  1542  0063D2  0E0C               	movlw	12
  1543  0063D4  6EC1               	movwf	193,c	;volatile
  1544  0063D6  0012               	return		;funcret
  1545  0063D8                     __end_of_kpInit:
  1546                           	callstack 0
  1547                           
  1548 ;; *************** function _soInit *****************
  1549 ;; Defined at:
  1550 ;;		line 3 in file "so.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1564 ;;      Params:         0       0       0       0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0
  1567 ;;      Totals:         0       0       0       0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 1
  1571 ;; This function calls:
  1572 ;;		_pinMode
  1573 ;; This function is called by:
  1574 ;;		_kpInit
  1575 ;;		_lcdInit
  1576 ;;		_ssdInit
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text5
  1581  00640E                     __ptext5:
  1582                           	callstack 0
  1583  00640E                     _soInit:
  1584                           	callstack 28
  1585  00640E                     
  1586                           ;so.c: 4:  pinMode(PIN_D7, 0);
  1587  00640E  0E00               	movlw	0
  1588  006410  6E02               	movwf	(pinMode@pin+1)^0,c
  1589  006412  0E1F               	movlw	31
  1590  006414  6E01               	movwf	pinMode@pin^0,c
  1591  006416  0E00               	movlw	0
  1592  006418  6E04               	movwf	(pinMode@type+1)^0,c
  1593  00641A  0E00               	movlw	0
  1594  00641C  6E03               	movwf	pinMode@type^0,c
  1595  00641E  EC0D  F03C         	call	_pinMode	;wreg free
  1596                           
  1597                           ;so.c: 5:  pinMode(PIN_B0, 0);
  1598  006422  0E00               	movlw	0
  1599  006424  6E02               	movwf	(pinMode@pin+1)^0,c
  1600  006426  0E08               	movlw	8
  1601  006428  6E01               	movwf	pinMode@pin^0,c
  1602  00642A  0E00               	movlw	0
  1603  00642C  6E04               	movwf	(pinMode@type+1)^0,c
  1604  00642E  0E00               	movlw	0
  1605  006430  6E03               	movwf	pinMode@type^0,c
  1606  006432  EC0D  F03C         	call	_pinMode	;wreg free
  1607                           
  1608                           ;so.c: 6:  pinMode(PIN_D6, 0);
  1609  006436  0E00               	movlw	0
  1610  006438  6E02               	movwf	(pinMode@pin+1)^0,c
  1611  00643A  0E1E               	movlw	30
  1612  00643C  6E01               	movwf	pinMode@pin^0,c
  1613  00643E  0E00               	movlw	0
  1614  006440  6E04               	movwf	(pinMode@type+1)^0,c
  1615  006442  0E00               	movlw	0
  1616  006444  6E03               	movwf	pinMode@type^0,c
  1617  006446  EC0D  F03C         	call	_pinMode	;wreg free
  1618  00644A  0012               	return		;funcret
  1619  00644C                     __end_of_soInit:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _kpDebounce *****************
  1623 ;; Defined at:
  1624 ;;		line 27 in file "keypad.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  i               2   12[COMRAM] int 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1638 ;;      Params:         0       0       0       0       0       0       0
  1639 ;;      Locals:         2       0       0       0       0       0       0
  1640 ;;      Temps:          3       0       0       0       0       0       0
  1641 ;;      Totals:         5       0       0       0       0       0       0
  1642 ;;Total ram usage:        5 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; Hardware stack levels required when called: 3
  1645 ;; This function calls:
  1646 ;;		_digitalRead
  1647 ;;		_soWrite
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text6
  1654  006D9E                     __ptext6:
  1655                           	callstack 0
  1656  006D9E                     _kpDebounce:
  1657                           	callstack 27
  1658  006D9E                     
  1659                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  1660  006D9E  0E00               	movlw	0
  1661  006DA0  6E56               	movwf	(kpDebounce@newRead+1)^0,c
  1662  006DA2  0E00               	movlw	0
  1663  006DA4  6E55               	movwf	kpDebounce@newRead^0,c
  1664                           
  1665                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  1666  006DA6  0E00               	movlw	0
  1667  006DA8  6E0E               	movwf	(kpDebounce@i+1)^0,c
  1668  006DAA  0E00               	movlw	0
  1669  006DAC  6E0D               	movwf	kpDebounce@i^0,c
  1670  006DAE                     l2689:
  1671  006DAE  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  1672  006DB0  EFE3  F036         	goto	u2431
  1673  006DB4  500E               	movf	(kpDebounce@i+1)^0,w,c
  1674  006DB6  E109               	bnz	u2430
  1675  006DB8  0E05               	movlw	5
  1676  006DBA  5C0D               	subwf	kpDebounce@i^0,w,c
  1677  006DBC  A0D8               	btfss	status,0,c
  1678  006DBE  EFE3  F036         	goto	u2431
  1679  006DC2  EFE5  F036         	goto	u2430
  1680  006DC6                     u2431:
  1681  006DC6  EFE7  F036         	goto	l2693
  1682  006DCA                     u2430:
  1683  006DCA  EF48  F037         	goto	l2705
  1684  006DCE                     l2693:
  1685                           
  1686                           ;keypad.c: 35:       soWrite(1<<(i+3));
  1687  006DCE  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  1688  006DD2  0E03               	movlw	3
  1689  006DD4  260A               	addwf	??_kpDebounce^0,f,c
  1690  006DD6  0E01               	movlw	1
  1691  006DD8  6E0B               	movwf	(??_kpDebounce+1)^0,c
  1692  006DDA  0E00               	movlw	0
  1693  006DDC  6E0C               	movwf	(??_kpDebounce+2)^0,c
  1694  006DDE  2A0A               	incf	??_kpDebounce^0,f,c
  1695  006DE0  EFF5  F036         	goto	u2444
  1696  006DE4                     u2445:
  1697  006DE4  90D8               	bcf	status,0,c
  1698  006DE6  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  1699  006DE8  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  1700  006DEA                     u2444:
  1701  006DEA  2E0A               	decfsz	??_kpDebounce^0,f,c
  1702  006DEC  EFF2  F036         	goto	u2445
  1703  006DF0  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  1704  006DF4  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  1705  006DF8  EC6B  F032         	call	_soWrite	;wreg free
  1706                           
  1707                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  1708  006DFC  0E00               	movlw	0
  1709  006DFE  6E02               	movwf	(digitalRead@pin+1)^0,c
  1710  006E00  0E0A               	movlw	10
  1711  006E02  6E01               	movwf	digitalRead@pin^0,c
  1712  006E04  EC6A  F037         	call	_digitalRead	;wreg free
  1713  006E08  5001               	movf	?_digitalRead^0,w,c
  1714  006E0A  1002               	iorwf	(?_digitalRead+1)^0,w,c
  1715  006E0C  B4D8               	btfsc	status,2,c
  1716  006E0E  EF0B  F037         	goto	u2451
  1717  006E12  EF0D  F037         	goto	u2450
  1718  006E16                     u2451:
  1719  006E16  EF20  F037         	goto	l2697
  1720  006E1A                     u2450:
  1721  006E1A                     
  1722                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  1723  006E1A  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  1724  006E1E  0E01               	movlw	1
  1725  006E20  6E0B               	movwf	(??_kpDebounce+1)^0,c
  1726  006E22  0E00               	movlw	0
  1727  006E24  6E0C               	movwf	(??_kpDebounce+2)^0,c
  1728  006E26  2A0A               	incf	??_kpDebounce^0,f,c
  1729  006E28  EF19  F037         	goto	u2464
  1730  006E2C                     u2465:
  1731  006E2C  90D8               	bcf	status,0,c
  1732  006E2E  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  1733  006E30  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  1734  006E32                     u2464:
  1735  006E32  2E0A               	decfsz	??_kpDebounce^0,f,c
  1736  006E34  EF16  F037         	goto	u2465
  1737  006E38  500B               	movf	(??_kpDebounce+1)^0,w,c
  1738  006E3A  1255               	iorwf	kpDebounce@newRead^0,f,c
  1739  006E3C  500C               	movf	(??_kpDebounce+2)^0,w,c
  1740  006E3E  1256               	iorwf	(kpDebounce@newRead+1)^0,f,c
  1741  006E40                     l2697:
  1742                           
  1743                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  1744  006E40  0E00               	movlw	0
  1745  006E42  6E02               	movwf	(digitalRead@pin+1)^0,c
  1746  006E44  0E09               	movlw	9
  1747  006E46  6E01               	movwf	digitalRead@pin^0,c
  1748  006E48  EC6A  F037         	call	_digitalRead	;wreg free
  1749  006E4C  5001               	movf	?_digitalRead^0,w,c
  1750  006E4E  1002               	iorwf	(?_digitalRead+1)^0,w,c
  1751  006E50  B4D8               	btfsc	status,2,c
  1752  006E52  EF2D  F037         	goto	u2471
  1753  006E56  EF2F  F037         	goto	u2470
  1754  006E5A                     u2471:
  1755  006E5A  EF44  F037         	goto	l2701
  1756  006E5E                     u2470:
  1757  006E5E                     
  1758                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  1759  006E5E  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  1760  006E62  0E05               	movlw	5
  1761  006E64  260A               	addwf	??_kpDebounce^0,f,c
  1762  006E66  0E01               	movlw	1
  1763  006E68  6E0B               	movwf	(??_kpDebounce+1)^0,c
  1764  006E6A  0E00               	movlw	0
  1765  006E6C  6E0C               	movwf	(??_kpDebounce+2)^0,c
  1766  006E6E  2A0A               	incf	??_kpDebounce^0,f,c
  1767  006E70  EF3D  F037         	goto	u2484
  1768  006E74                     u2485:
  1769  006E74  90D8               	bcf	status,0,c
  1770  006E76  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  1771  006E78  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  1772  006E7A                     u2484:
  1773  006E7A  2E0A               	decfsz	??_kpDebounce^0,f,c
  1774  006E7C  EF3A  F037         	goto	u2485
  1775  006E80  500B               	movf	(??_kpDebounce+1)^0,w,c
  1776  006E82  1255               	iorwf	kpDebounce@newRead^0,f,c
  1777  006E84  500C               	movf	(??_kpDebounce+2)^0,w,c
  1778  006E86  1256               	iorwf	(kpDebounce@newRead+1)^0,f,c
  1779  006E88                     l2701:
  1780                           
  1781                           ;keypad.c: 42:     }
  1782  006E88  4A0D               	infsnz	kpDebounce@i^0,f,c
  1783  006E8A  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  1784  006E8C  EFD7  F036         	goto	l2689
  1785  006E90                     l2705:
  1786                           
  1787                           ;keypad.c: 43:     if (oldRead == newRead) {
  1788  006E90  5055               	movf	kpDebounce@newRead^0,w,c
  1789  006E92  1853               	xorwf	kpDebounce@oldRead^0,w,c
  1790  006E94  E107               	bnz	u2491
  1791  006E96  5056               	movf	(kpDebounce@newRead+1)^0,w,c
  1792  006E98  1854               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  1793  006E9A  A4D8               	btfss	status,2,c
  1794  006E9C  EF52  F037         	goto	u2491
  1795  006EA0  EF54  F037         	goto	u2490
  1796  006EA4                     u2491:
  1797  006EA4  EF57  F037         	goto	l2709
  1798  006EA8                     u2490:
  1799  006EA8                     
  1800                           ;keypad.c: 44:         tempo--;
  1801  006EA8  0660               	decf	kpDebounce@tempo^0,f,c
  1802                           
  1803                           ;keypad.c: 45:     } else {
  1804  006EAA  EF5D  F037         	goto	l200
  1805  006EAE                     l2709:
  1806                           
  1807                           ;keypad.c: 46:         tempo = 1;
  1808  006EAE  0E01               	movlw	1
  1809  006EB0  6E60               	movwf	kpDebounce@tempo^0,c
  1810  006EB2                     
  1811                           ;keypad.c: 47:         oldRead = newRead;
  1812  006EB2  C055  F053         	movff	kpDebounce@newRead,kpDebounce@oldRead
  1813  006EB6  C056  F054         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  1814  006EBA                     l200:
  1815                           
  1816                           ;keypad.c: 49:     if (tempo == 0) {
  1817  006EBA  5060               	movf	kpDebounce@tempo^0,w,c
  1818  006EBC  A4D8               	btfss	status,2,c
  1819  006EBE  EF63  F037         	goto	u2501
  1820  006EC2  EF65  F037         	goto	u2500
  1821  006EC6                     u2501:
  1822  006EC6  EF69  F037         	goto	l202
  1823  006ECA                     u2500:
  1824  006ECA                     
  1825                           ;keypad.c: 50:         keys = oldRead;
  1826  006ECA  C053  F057         	movff	kpDebounce@oldRead,_keys
  1827  006ECE  C054  F058         	movff	kpDebounce@oldRead+1,_keys+1
  1828  006ED2                     l202:
  1829  006ED2  0012               	return		;funcret
  1830  006ED4                     __end_of_kpDebounce:
  1831                           	callstack 0
  1832                           
  1833 ;; *************** function _digitalRead *****************
  1834 ;; Defined at:
  1835 ;;		line 39 in file "io.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;  pin             2    0[COMRAM] int 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  2    0[COMRAM] int 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1849 ;;      Params:         2       0       0       0       0       0       0
  1850 ;;      Locals:         0       0       0       0       0       0       0
  1851 ;;      Temps:          3       0       0       0       0       0       0
  1852 ;;      Totals:         5       0       0       0       0       0       0
  1853 ;;Total ram usage:        5 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_kpDebounce
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text7
  1863  006ED4                     __ptext7:
  1864                           	callstack 0
  1865  006ED4                     _digitalRead:
  1866                           	callstack 29
  1867  006ED4                     
  1868                           ;io.c: 40:     if(pin <8){
  1869  006ED4  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  1870  006ED6  EF78  F037         	goto	u2280
  1871  006EDA  5002               	movf	(digitalRead@pin+1)^0,w,c
  1872  006EDC  E107               	bnz	u2281
  1873  006EDE  0E08               	movlw	8
  1874  006EE0  5C01               	subwf	digitalRead@pin^0,w,c
  1875  006EE2  B0D8               	btfsc	status,0,c
  1876  006EE4  EF76  F037         	goto	u2281
  1877  006EE8  EF78  F037         	goto	u2280
  1878  006EEC                     u2281:
  1879  006EEC  EF8C  F037         	goto	l2575
  1880  006EF0                     u2280:
  1881  006EF0                     
  1882                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  1883  006EF0  C001  F003         	movff	digitalRead@pin,??_digitalRead
  1884  006EF4  0E01               	movlw	1
  1885  006EF6  6E04               	movwf	(??_digitalRead+1)^0,c
  1886  006EF8  2A03               	incf	??_digitalRead^0,f,c
  1887  006EFA  EF81  F037         	goto	u2294
  1888  006EFE                     u2295:
  1889  006EFE  90D8               	bcf	status,0,c
  1890  006F00  3604               	rlcf	(??_digitalRead+1)^0,f,c
  1891  006F02                     u2294:
  1892  006F02  2E03               	decfsz	??_digitalRead^0,f,c
  1893  006F04  EF7F  F037         	goto	u2295
  1894  006F08  5004               	movf	(??_digitalRead+1)^0,w,c
  1895  006F0A  1480               	andwf	128,w,c	;volatile
  1896  006F0C  6E05               	movwf	(??_digitalRead+2)^0,c
  1897  006F0E  5005               	movf	(??_digitalRead+2)^0,w,c
  1898  006F10  6E01               	movwf	?_digitalRead^0,c
  1899  006F12  6A02               	clrf	(?_digitalRead+1)^0,c
  1900  006F14  EF1E  F038         	goto	l366
  1901  006F18                     l2575:
  1902  006F18  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  1903  006F1A  EF9A  F037         	goto	u2300
  1904  006F1E  5002               	movf	(digitalRead@pin+1)^0,w,c
  1905  006F20  E107               	bnz	u2301
  1906  006F22  0E10               	movlw	16
  1907  006F24  5C01               	subwf	digitalRead@pin^0,w,c
  1908  006F26  B0D8               	btfsc	status,0,c
  1909  006F28  EF98  F037         	goto	u2301
  1910  006F2C  EF9A  F037         	goto	u2300
  1911  006F30                     u2301:
  1912  006F30  EFB0  F037         	goto	l2583
  1913  006F34                     u2300:
  1914  006F34                     
  1915                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  1916  006F34  C001  F003         	movff	digitalRead@pin,??_digitalRead
  1917  006F38  0EF8               	movlw	-8
  1918  006F3A  2603               	addwf	??_digitalRead^0,f,c
  1919  006F3C  0E01               	movlw	1
  1920  006F3E  6E04               	movwf	(??_digitalRead+1)^0,c
  1921  006F40  2A03               	incf	??_digitalRead^0,f,c
  1922  006F42  EFA5  F037         	goto	u2314
  1923  006F46                     u2315:
  1924  006F46  90D8               	bcf	status,0,c
  1925  006F48  3604               	rlcf	(??_digitalRead+1)^0,f,c
  1926  006F4A                     u2314:
  1927  006F4A  2E03               	decfsz	??_digitalRead^0,f,c
  1928  006F4C  EFA3  F037         	goto	u2315
  1929  006F50  5004               	movf	(??_digitalRead+1)^0,w,c
  1930  006F52  1481               	andwf	129,w,c	;volatile
  1931  006F54  6E05               	movwf	(??_digitalRead+2)^0,c
  1932  006F56  5005               	movf	(??_digitalRead+2)^0,w,c
  1933  006F58  6E01               	movwf	?_digitalRead^0,c
  1934  006F5A  6A02               	clrf	(?_digitalRead+1)^0,c
  1935  006F5C  EF1E  F038         	goto	l366
  1936  006F60                     l2583:
  1937  006F60  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  1938  006F62  EFBE  F037         	goto	u2320
  1939  006F66  5002               	movf	(digitalRead@pin+1)^0,w,c
  1940  006F68  E107               	bnz	u2321
  1941  006F6A  0E18               	movlw	24
  1942  006F6C  5C01               	subwf	digitalRead@pin^0,w,c
  1943  006F6E  B0D8               	btfsc	status,0,c
  1944  006F70  EFBC  F037         	goto	u2321
  1945  006F74  EFBE  F037         	goto	u2320
  1946  006F78                     u2321:
  1947  006F78  EFD4  F037         	goto	l2591
  1948  006F7C                     u2320:
  1949  006F7C                     
  1950                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  1951  006F7C  C001  F003         	movff	digitalRead@pin,??_digitalRead
  1952  006F80  0EF0               	movlw	-16
  1953  006F82  2603               	addwf	??_digitalRead^0,f,c
  1954  006F84  0E01               	movlw	1
  1955  006F86  6E04               	movwf	(??_digitalRead+1)^0,c
  1956  006F88  2A03               	incf	??_digitalRead^0,f,c
  1957  006F8A  EFC9  F037         	goto	u2334
  1958  006F8E                     u2335:
  1959  006F8E  90D8               	bcf	status,0,c
  1960  006F90  3604               	rlcf	(??_digitalRead+1)^0,f,c
  1961  006F92                     u2334:
  1962  006F92  2E03               	decfsz	??_digitalRead^0,f,c
  1963  006F94  EFC7  F037         	goto	u2335
  1964  006F98  5004               	movf	(??_digitalRead+1)^0,w,c
  1965  006F9A  1482               	andwf	130,w,c	;volatile
  1966  006F9C  6E05               	movwf	(??_digitalRead+2)^0,c
  1967  006F9E  5005               	movf	(??_digitalRead+2)^0,w,c
  1968  006FA0  6E01               	movwf	?_digitalRead^0,c
  1969  006FA2  6A02               	clrf	(?_digitalRead+1)^0,c
  1970  006FA4  EF1E  F038         	goto	l366
  1971  006FA8                     l2591:
  1972  006FA8  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  1973  006FAA  EFE2  F037         	goto	u2340
  1974  006FAE  5002               	movf	(digitalRead@pin+1)^0,w,c
  1975  006FB0  E107               	bnz	u2341
  1976  006FB2  0E20               	movlw	32
  1977  006FB4  5C01               	subwf	digitalRead@pin^0,w,c
  1978  006FB6  B0D8               	btfsc	status,0,c
  1979  006FB8  EFE0  F037         	goto	u2341
  1980  006FBC  EFE2  F037         	goto	u2340
  1981  006FC0                     u2341:
  1982  006FC0  EFF8  F037         	goto	l2599
  1983  006FC4                     u2340:
  1984  006FC4                     
  1985                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  1986  006FC4  C001  F003         	movff	digitalRead@pin,??_digitalRead
  1987  006FC8  0EE8               	movlw	-24
  1988  006FCA  2603               	addwf	??_digitalRead^0,f,c
  1989  006FCC  0E01               	movlw	1
  1990  006FCE  6E04               	movwf	(??_digitalRead+1)^0,c
  1991  006FD0  2A03               	incf	??_digitalRead^0,f,c
  1992  006FD2  EFED  F037         	goto	u2354
  1993  006FD6                     u2355:
  1994  006FD6  90D8               	bcf	status,0,c
  1995  006FD8  3604               	rlcf	(??_digitalRead+1)^0,f,c
  1996  006FDA                     u2354:
  1997  006FDA  2E03               	decfsz	??_digitalRead^0,f,c
  1998  006FDC  EFEB  F037         	goto	u2355
  1999  006FE0  5004               	movf	(??_digitalRead+1)^0,w,c
  2000  006FE2  1483               	andwf	131,w,c	;volatile
  2001  006FE4  6E05               	movwf	(??_digitalRead+2)^0,c
  2002  006FE6  5005               	movf	(??_digitalRead+2)^0,w,c
  2003  006FE8  6E01               	movwf	?_digitalRead^0,c
  2004  006FEA  6A02               	clrf	(?_digitalRead+1)^0,c
  2005  006FEC  EF1E  F038         	goto	l366
  2006  006FF0                     l2599:
  2007  006FF0  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2008  006FF2  EF06  F038         	goto	u2360
  2009  006FF6  5002               	movf	(digitalRead@pin+1)^0,w,c
  2010  006FF8  E107               	bnz	u2361
  2011  006FFA  0E28               	movlw	40
  2012  006FFC  5C01               	subwf	digitalRead@pin^0,w,c
  2013  006FFE  B0D8               	btfsc	status,0,c
  2014  007000  EF04  F038         	goto	u2361
  2015  007004  EF06  F038         	goto	u2360
  2016  007008                     u2361:
  2017  007008  EF1C  F038         	goto	l371
  2018  00700C                     u2360:
  2019  00700C                     
  2020                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  2021  00700C  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2022  007010  0EE0               	movlw	-32
  2023  007012  2603               	addwf	??_digitalRead^0,f,c
  2024  007014  0E01               	movlw	1
  2025  007016  6E04               	movwf	(??_digitalRead+1)^0,c
  2026  007018  2A03               	incf	??_digitalRead^0,f,c
  2027  00701A  EF11  F038         	goto	u2374
  2028  00701E                     u2375:
  2029  00701E  90D8               	bcf	status,0,c
  2030  007020  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2031  007022                     u2374:
  2032  007022  2E03               	decfsz	??_digitalRead^0,f,c
  2033  007024  EF0F  F038         	goto	u2375
  2034  007028  5004               	movf	(??_digitalRead+1)^0,w,c
  2035  00702A  1484               	andwf	132,w,c	;volatile
  2036  00702C  6E05               	movwf	(??_digitalRead+2)^0,c
  2037  00702E  5005               	movf	(??_digitalRead+2)^0,w,c
  2038  007030  6E01               	movwf	?_digitalRead^0,c
  2039  007032  6A02               	clrf	(?_digitalRead+1)^0,c
  2040  007034  EF1E  F038         	goto	l366
  2041  007038                     l371:
  2042  007038                     
  2043                           ;io.c: 51:     return -1;
  2044  007038  6801               	setf	?_digitalRead^0,c
  2045  00703A  6802               	setf	(?_digitalRead+1)^0,c
  2046  00703C                     l366:
  2047  00703C  0012               	return		;funcret
  2048  00703E                     __end_of_digitalRead:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function _adcInit *****************
  2052 ;; Defined at:
  2053 ;;		line 25 in file "adc.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2067 ;;      Params:         0       0       0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0       0       0
  2070 ;;      Totals:         0       0       0       0       0       0       0
  2071 ;;Total ram usage:        0 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 1
  2074 ;; This function calls:
  2075 ;;		_pinMode
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text8
  2082  00648E                     __ptext8:
  2083                           	callstack 0
  2084  00648E                     _adcInit:
  2085                           	callstack 29
  2086  00648E                     
  2087                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  2088  00648E  0E00               	movlw	0
  2089  006490  6E02               	movwf	(pinMode@pin+1)^0,c
  2090  006492  0E00               	movlw	0
  2091  006494  6E01               	movwf	pinMode@pin^0,c
  2092  006496  0E00               	movlw	0
  2093  006498  6E04               	movwf	(pinMode@type+1)^0,c
  2094  00649A  0E01               	movlw	1
  2095  00649C  6E03               	movwf	pinMode@type^0,c
  2096  00649E  EC0D  F03C         	call	_pinMode	;wreg free
  2097                           
  2098                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  2099  0064A2  0E00               	movlw	0
  2100  0064A4  6E02               	movwf	(pinMode@pin+1)^0,c
  2101  0064A6  0E01               	movlw	1
  2102  0064A8  6E01               	movwf	pinMode@pin^0,c
  2103  0064AA  0E00               	movlw	0
  2104  0064AC  6E04               	movwf	(pinMode@type+1)^0,c
  2105  0064AE  0E01               	movlw	1
  2106  0064B0  6E03               	movwf	pinMode@type^0,c
  2107  0064B2  EC0D  F03C         	call	_pinMode	;wreg free
  2108                           
  2109                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  2110  0064B6  0E00               	movlw	0
  2111  0064B8  6E02               	movwf	(pinMode@pin+1)^0,c
  2112  0064BA  0E02               	movlw	2
  2113  0064BC  6E01               	movwf	pinMode@pin^0,c
  2114  0064BE  0E00               	movlw	0
  2115  0064C0  6E04               	movwf	(pinMode@type+1)^0,c
  2116  0064C2  0E01               	movlw	1
  2117  0064C4  6E03               	movwf	pinMode@type^0,c
  2118  0064C6  EC0D  F03C         	call	_pinMode	;wreg free
  2119  0064CA                     
  2120                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  2121  0064CA  80C2               	bsf	194,0,c	;volatile
  2122  0064CC                     
  2123                           ;adc.c: 33:     ADCON1 = 0b00001100;
  2124  0064CC  0E0C               	movlw	12
  2125  0064CE  6EC1               	movwf	193,c	;volatile
  2126  0064D0                     
  2127                           ;adc.c: 34:     ADCON2 = 0b10101010;
  2128  0064D0  0EAA               	movlw	170
  2129  0064D2  6EC0               	movwf	192,c	;volatile
  2130  0064D4  0012               	return		;funcret
  2131  0064D6                     __end_of_adcInit:
  2132                           	callstack 0
  2133                           
  2134 ;; *************** function _pinMode *****************
  2135 ;; Defined at:
  2136 ;;		line 54 in file "io.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  pin             2    0[COMRAM] int 
  2139 ;;  type            2    2[COMRAM] int 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, status,2, status,0
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2151 ;;      Params:         4       0       0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0       0       0
  2153 ;;      Temps:          2       0       0       0       0       0       0
  2154 ;;      Totals:         6       0       0       0       0       0       0
  2155 ;;Total ram usage:        6 bytes
  2156 ;; Hardware stack levels used: 1
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_adcInit
  2161 ;;		_kpInit
  2162 ;;		_lcdInit
  2163 ;;		_ssdInit
  2164 ;;		_soInit
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text9
  2169  00781A                     __ptext9:
  2170                           	callstack 0
  2171  00781A                     _pinMode:
  2172                           	callstack 28
  2173  00781A                     
  2174                           ;io.c: 56:     if(pin <8){
  2175  00781A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2176  00781C  EF1B  F03C         	goto	u1880
  2177  007820  5002               	movf	(pinMode@pin+1)^0,w,c
  2178  007822  E107               	bnz	u1881
  2179  007824  0E08               	movlw	8
  2180  007826  5C01               	subwf	pinMode@pin^0,w,c
  2181  007828  B0D8               	btfsc	status,0,c
  2182  00782A  EF19  F03C         	goto	u1881
  2183  00782E  EF1B  F03C         	goto	u1880
  2184  007832                     u1881:
  2185  007832  EF45  F03C         	goto	l2363
  2186  007836                     u1880:
  2187  007836                     
  2188                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2189  007836  5003               	movf	pinMode@type^0,w,c
  2190  007838  1004               	iorwf	(pinMode@type+1)^0,w,c
  2191  00783A  B4D8               	btfsc	status,2,c
  2192  00783C  EF22  F03C         	goto	u1891
  2193  007840  EF24  F03C         	goto	u1890
  2194  007844                     u1891:
  2195  007844  EF34  F03C         	goto	l2361
  2196  007848                     u1890:
  2197  007848  C001  F005         	movff	pinMode@pin,??_pinMode
  2198  00784C  0E01               	movlw	1
  2199  00784E  6E06               	movwf	(??_pinMode+1)^0,c
  2200  007850  2A05               	incf	??_pinMode^0,f,c
  2201  007852  EF2D  F03C         	goto	u1904
  2202  007856                     u1905:
  2203  007856  90D8               	bcf	status,0,c
  2204  007858  3606               	rlcf	(??_pinMode+1)^0,f,c
  2205  00785A                     u1904:
  2206  00785A  2E05               	decfsz	??_pinMode^0,f,c
  2207  00785C  EF2B  F03C         	goto	u1905
  2208  007860  5006               	movf	(??_pinMode+1)^0,w,c
  2209  007862  1292               	iorwf	146,f,c	;volatile
  2210  007864  EF33  F03D         	goto	l396
  2211  007868                     l2361:
  2212  007868  C001  F005         	movff	pinMode@pin,??_pinMode
  2213  00786C  0E01               	movlw	1
  2214  00786E  6E06               	movwf	(??_pinMode+1)^0,c
  2215  007870  2A05               	incf	??_pinMode^0,f,c
  2216  007872  EF3D  F03C         	goto	u1914
  2217  007876                     u1915:
  2218  007876  90D8               	bcf	status,0,c
  2219  007878  3606               	rlcf	(??_pinMode+1)^0,f,c
  2220  00787A                     u1914:
  2221  00787A  2E05               	decfsz	??_pinMode^0,f,c
  2222  00787C  EF3B  F03C         	goto	u1915
  2223  007880  5006               	movf	(??_pinMode+1)^0,w,c
  2224  007882  0AFF               	xorlw	255
  2225  007884  1692               	andwf	146,f,c	;volatile
  2226  007886  EF33  F03D         	goto	l396
  2227  00788A                     l2363:
  2228  00788A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2229  00788C  EF53  F03C         	goto	u1920
  2230  007890  5002               	movf	(pinMode@pin+1)^0,w,c
  2231  007892  E107               	bnz	u1921
  2232  007894  0E10               	movlw	16
  2233  007896  5C01               	subwf	pinMode@pin^0,w,c
  2234  007898  B0D8               	btfsc	status,0,c
  2235  00789A  EF51  F03C         	goto	u1921
  2236  00789E  EF53  F03C         	goto	u1920
  2237  0078A2                     u1921:
  2238  0078A2  EF81  F03C         	goto	l2371
  2239  0078A6                     u1920:
  2240  0078A6                     
  2241                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2242  0078A6  5003               	movf	pinMode@type^0,w,c
  2243  0078A8  1004               	iorwf	(pinMode@type+1)^0,w,c
  2244  0078AA  B4D8               	btfsc	status,2,c
  2245  0078AC  EF5A  F03C         	goto	u1931
  2246  0078B0  EF5C  F03C         	goto	u1930
  2247  0078B4                     u1931:
  2248  0078B4  EF6E  F03C         	goto	l2369
  2249  0078B8                     u1930:
  2250  0078B8  C001  F005         	movff	pinMode@pin,??_pinMode
  2251  0078BC  0EF8               	movlw	-8
  2252  0078BE  2605               	addwf	??_pinMode^0,f,c
  2253  0078C0  0E01               	movlw	1
  2254  0078C2  6E06               	movwf	(??_pinMode+1)^0,c
  2255  0078C4  2A05               	incf	??_pinMode^0,f,c
  2256  0078C6  EF67  F03C         	goto	u1944
  2257  0078CA                     u1945:
  2258  0078CA  90D8               	bcf	status,0,c
  2259  0078CC  3606               	rlcf	(??_pinMode+1)^0,f,c
  2260  0078CE                     u1944:
  2261  0078CE  2E05               	decfsz	??_pinMode^0,f,c
  2262  0078D0  EF65  F03C         	goto	u1945
  2263  0078D4  5006               	movf	(??_pinMode+1)^0,w,c
  2264  0078D6  1293               	iorwf	147,f,c	;volatile
  2265  0078D8  EF33  F03D         	goto	l396
  2266  0078DC                     l2369:
  2267  0078DC  C001  F005         	movff	pinMode@pin,??_pinMode
  2268  0078E0  0EF8               	movlw	-8
  2269  0078E2  2605               	addwf	??_pinMode^0,f,c
  2270  0078E4  0E01               	movlw	1
  2271  0078E6  6E06               	movwf	(??_pinMode+1)^0,c
  2272  0078E8  2A05               	incf	??_pinMode^0,f,c
  2273  0078EA  EF79  F03C         	goto	u1954
  2274  0078EE                     u1955:
  2275  0078EE  90D8               	bcf	status,0,c
  2276  0078F0  3606               	rlcf	(??_pinMode+1)^0,f,c
  2277  0078F2                     u1954:
  2278  0078F2  2E05               	decfsz	??_pinMode^0,f,c
  2279  0078F4  EF77  F03C         	goto	u1955
  2280  0078F8  5006               	movf	(??_pinMode+1)^0,w,c
  2281  0078FA  0AFF               	xorlw	255
  2282  0078FC  1693               	andwf	147,f,c	;volatile
  2283  0078FE  EF33  F03D         	goto	l396
  2284  007902                     l2371:
  2285  007902  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2286  007904  EF8F  F03C         	goto	u1960
  2287  007908  5002               	movf	(pinMode@pin+1)^0,w,c
  2288  00790A  E107               	bnz	u1961
  2289  00790C  0E18               	movlw	24
  2290  00790E  5C01               	subwf	pinMode@pin^0,w,c
  2291  007910  B0D8               	btfsc	status,0,c
  2292  007912  EF8D  F03C         	goto	u1961
  2293  007916  EF8F  F03C         	goto	u1960
  2294  00791A                     u1961:
  2295  00791A  EFBD  F03C         	goto	l2379
  2296  00791E                     u1960:
  2297  00791E                     
  2298                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  2299  00791E  5003               	movf	pinMode@type^0,w,c
  2300  007920  1004               	iorwf	(pinMode@type+1)^0,w,c
  2301  007922  B4D8               	btfsc	status,2,c
  2302  007924  EF96  F03C         	goto	u1971
  2303  007928  EF98  F03C         	goto	u1970
  2304  00792C                     u1971:
  2305  00792C  EFAA  F03C         	goto	l2377
  2306  007930                     u1970:
  2307  007930  C001  F005         	movff	pinMode@pin,??_pinMode
  2308  007934  0EF0               	movlw	-16
  2309  007936  2605               	addwf	??_pinMode^0,f,c
  2310  007938  0E01               	movlw	1
  2311  00793A  6E06               	movwf	(??_pinMode+1)^0,c
  2312  00793C  2A05               	incf	??_pinMode^0,f,c
  2313  00793E  EFA3  F03C         	goto	u1984
  2314  007942                     u1985:
  2315  007942  90D8               	bcf	status,0,c
  2316  007944  3606               	rlcf	(??_pinMode+1)^0,f,c
  2317  007946                     u1984:
  2318  007946  2E05               	decfsz	??_pinMode^0,f,c
  2319  007948  EFA1  F03C         	goto	u1985
  2320  00794C  5006               	movf	(??_pinMode+1)^0,w,c
  2321  00794E  1294               	iorwf	148,f,c	;volatile
  2322  007950  EF33  F03D         	goto	l396
  2323  007954                     l2377:
  2324  007954  C001  F005         	movff	pinMode@pin,??_pinMode
  2325  007958  0EF0               	movlw	-16
  2326  00795A  2605               	addwf	??_pinMode^0,f,c
  2327  00795C  0E01               	movlw	1
  2328  00795E  6E06               	movwf	(??_pinMode+1)^0,c
  2329  007960  2A05               	incf	??_pinMode^0,f,c
  2330  007962  EFB5  F03C         	goto	u1994
  2331  007966                     u1995:
  2332  007966  90D8               	bcf	status,0,c
  2333  007968  3606               	rlcf	(??_pinMode+1)^0,f,c
  2334  00796A                     u1994:
  2335  00796A  2E05               	decfsz	??_pinMode^0,f,c
  2336  00796C  EFB3  F03C         	goto	u1995
  2337  007970  5006               	movf	(??_pinMode+1)^0,w,c
  2338  007972  0AFF               	xorlw	255
  2339  007974  1694               	andwf	148,f,c	;volatile
  2340  007976  EF33  F03D         	goto	l396
  2341  00797A                     l2379:
  2342  00797A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2343  00797C  EFCB  F03C         	goto	u2000
  2344  007980  5002               	movf	(pinMode@pin+1)^0,w,c
  2345  007982  E107               	bnz	u2001
  2346  007984  0E20               	movlw	32
  2347  007986  5C01               	subwf	pinMode@pin^0,w,c
  2348  007988  B0D8               	btfsc	status,0,c
  2349  00798A  EFC9  F03C         	goto	u2001
  2350  00798E  EFCB  F03C         	goto	u2000
  2351  007992                     u2001:
  2352  007992  EFF9  F03C         	goto	l2387
  2353  007996                     u2000:
  2354  007996                     
  2355                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  2356  007996  5003               	movf	pinMode@type^0,w,c
  2357  007998  1004               	iorwf	(pinMode@type+1)^0,w,c
  2358  00799A  B4D8               	btfsc	status,2,c
  2359  00799C  EFD2  F03C         	goto	u2011
  2360  0079A0  EFD4  F03C         	goto	u2010
  2361  0079A4                     u2011:
  2362  0079A4  EFE6  F03C         	goto	l2385
  2363  0079A8                     u2010:
  2364  0079A8  C001  F005         	movff	pinMode@pin,??_pinMode
  2365  0079AC  0EE8               	movlw	-24
  2366  0079AE  2605               	addwf	??_pinMode^0,f,c
  2367  0079B0  0E01               	movlw	1
  2368  0079B2  6E06               	movwf	(??_pinMode+1)^0,c
  2369  0079B4  2A05               	incf	??_pinMode^0,f,c
  2370  0079B6  EFDF  F03C         	goto	u2024
  2371  0079BA                     u2025:
  2372  0079BA  90D8               	bcf	status,0,c
  2373  0079BC  3606               	rlcf	(??_pinMode+1)^0,f,c
  2374  0079BE                     u2024:
  2375  0079BE  2E05               	decfsz	??_pinMode^0,f,c
  2376  0079C0  EFDD  F03C         	goto	u2025
  2377  0079C4  5006               	movf	(??_pinMode+1)^0,w,c
  2378  0079C6  1295               	iorwf	149,f,c	;volatile
  2379  0079C8  EF33  F03D         	goto	l396
  2380  0079CC                     l2385:
  2381  0079CC  C001  F005         	movff	pinMode@pin,??_pinMode
  2382  0079D0  0EE8               	movlw	-24
  2383  0079D2  2605               	addwf	??_pinMode^0,f,c
  2384  0079D4  0E01               	movlw	1
  2385  0079D6  6E06               	movwf	(??_pinMode+1)^0,c
  2386  0079D8  2A05               	incf	??_pinMode^0,f,c
  2387  0079DA  EFF1  F03C         	goto	u2034
  2388  0079DE                     u2035:
  2389  0079DE  90D8               	bcf	status,0,c
  2390  0079E0  3606               	rlcf	(??_pinMode+1)^0,f,c
  2391  0079E2                     u2034:
  2392  0079E2  2E05               	decfsz	??_pinMode^0,f,c
  2393  0079E4  EFEF  F03C         	goto	u2035
  2394  0079E8  5006               	movf	(??_pinMode+1)^0,w,c
  2395  0079EA  0AFF               	xorlw	255
  2396  0079EC  1695               	andwf	149,f,c	;volatile
  2397  0079EE  EF33  F03D         	goto	l396
  2398  0079F2                     l2387:
  2399  0079F2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2400  0079F4  EF07  F03D         	goto	u2040
  2401  0079F8  5002               	movf	(pinMode@pin+1)^0,w,c
  2402  0079FA  E107               	bnz	u2041
  2403  0079FC  0E28               	movlw	40
  2404  0079FE  5C01               	subwf	pinMode@pin^0,w,c
  2405  007A00  B0D8               	btfsc	status,0,c
  2406  007A02  EF05  F03D         	goto	u2041
  2407  007A06  EF07  F03D         	goto	u2040
  2408  007A0A                     u2041:
  2409  007A0A  EF33  F03D         	goto	l396
  2410  007A0E                     u2040:
  2411  007A0E                     
  2412                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  2413  007A0E  5003               	movf	pinMode@type^0,w,c
  2414  007A10  1004               	iorwf	(pinMode@type+1)^0,w,c
  2415  007A12  B4D8               	btfsc	status,2,c
  2416  007A14  EF0E  F03D         	goto	u2051
  2417  007A18  EF10  F03D         	goto	u2050
  2418  007A1C                     u2051:
  2419  007A1C  EF22  F03D         	goto	l2393
  2420  007A20                     u2050:
  2421  007A20  C001  F005         	movff	pinMode@pin,??_pinMode
  2422  007A24  0EE0               	movlw	-32
  2423  007A26  2605               	addwf	??_pinMode^0,f,c
  2424  007A28  0E01               	movlw	1
  2425  007A2A  6E06               	movwf	(??_pinMode+1)^0,c
  2426  007A2C  2A05               	incf	??_pinMode^0,f,c
  2427  007A2E  EF1B  F03D         	goto	u2064
  2428  007A32                     u2065:
  2429  007A32  90D8               	bcf	status,0,c
  2430  007A34  3606               	rlcf	(??_pinMode+1)^0,f,c
  2431  007A36                     u2064:
  2432  007A36  2E05               	decfsz	??_pinMode^0,f,c
  2433  007A38  EF19  F03D         	goto	u2065
  2434  007A3C  5006               	movf	(??_pinMode+1)^0,w,c
  2435  007A3E  1296               	iorwf	150,f,c	;volatile
  2436  007A40  EF33  F03D         	goto	l396
  2437  007A44                     l2393:
  2438  007A44  C001  F005         	movff	pinMode@pin,??_pinMode
  2439  007A48  0EE0               	movlw	-32
  2440  007A4A  2605               	addwf	??_pinMode^0,f,c
  2441  007A4C  0E01               	movlw	1
  2442  007A4E  6E06               	movwf	(??_pinMode+1)^0,c
  2443  007A50  2A05               	incf	??_pinMode^0,f,c
  2444  007A52  EF2D  F03D         	goto	u2074
  2445  007A56                     u2075:
  2446  007A56  90D8               	bcf	status,0,c
  2447  007A58  3606               	rlcf	(??_pinMode+1)^0,f,c
  2448  007A5A                     u2074:
  2449  007A5A  2E05               	decfsz	??_pinMode^0,f,c
  2450  007A5C  EF2B  F03D         	goto	u2075
  2451  007A60  5006               	movf	(??_pinMode+1)^0,w,c
  2452  007A62  0AFF               	xorlw	255
  2453  007A64  1696               	andwf	150,f,c	;volatile
  2454  007A66                     l396:
  2455  007A66  0012               	return		;funcret
  2456  007A68                     __end_of_pinMode:
  2457                           	callstack 0
  2458                           
  2459 ;; *************** function _SetaMeta *****************
  2460 ;; Defined at:
  2461 ;;		line 111 in file "main.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  i               2   30[COMRAM] int 
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2475 ;;      Params:         0       0       0       0       0       0       0
  2476 ;;      Locals:         2       0       0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0
  2478 ;;      Totals:         2       0       0       0       0       0       0
  2479 ;;Total ram usage:        2 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; Hardware stack levels required when called: 6
  2482 ;; This function calls:
  2483 ;;		_DesligarLed
  2484 ;;		_adcRead
  2485 ;;		_lcdCommand
  2486 ;;		_lcdNumber
  2487 ;;		_lcdString
  2488 ;; This function is called by:
  2489 ;;		_main
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text10
  2494  00697C                     __ptext10:
  2495                           	callstack 0
  2496  00697C                     _SetaMeta:
  2497                           	callstack 24
  2498  00697C                     
  2499                           ;main.c: 112:     studyGoal = adcRead(0);
  2500  00697C  0E00               	movlw	0
  2501  00697E  6E02               	movwf	(adcRead@channel+1)^0,c
  2502  006980  0E00               	movlw	0
  2503  006982  6E01               	movwf	adcRead@channel^0,c
  2504  006984  EC92  F032         	call	_adcRead	;wreg free
  2505  006988  C001  F043         	movff	?_adcRead,_studyGoal
  2506  00698C  C002  F044         	movff	?_adcRead+1,_studyGoal+1
  2507  006990  0E00               	movlw	0
  2508  006992  BE44               	btfsc	(_studyGoal+1)^0,7,c
  2509  006994  0EFF               	movlw	-1
  2510  006996  6E45               	movwf	(_studyGoal+2)^0,c
  2511  006998  6E46               	movwf	(_studyGoal+3)^0,c
  2512  00699A                     
  2513                           ;main.c: 113:     if (studyGoal != oldStudyGoal) {
  2514  00699A  503F               	movf	_oldStudyGoal^0,w,c
  2515  00699C  1843               	xorwf	_studyGoal^0,w,c
  2516  00699E  E10F               	bnz	u2410
  2517  0069A0  5040               	movf	(_oldStudyGoal+1)^0,w,c
  2518  0069A2  1844               	xorwf	(_studyGoal+1)^0,w,c
  2519  0069A4  E10C               	bnz	u2410
  2520  0069A6  5041               	movf	(_oldStudyGoal+2)^0,w,c
  2521  0069A8  1845               	xorwf	(_studyGoal+2)^0,w,c
  2522  0069AA  E109               	bnz	u2410
  2523  0069AC  5042               	movf	(_oldStudyGoal+3)^0,w,c
  2524  0069AE  1846               	xorwf	(_studyGoal+3)^0,w,c
  2525  0069B0  B4D8               	btfsc	status,2,c
  2526  0069B2  EFDD  F034         	goto	u2411
  2527  0069B6  EFDF  F034         	goto	u2410
  2528  0069BA                     u2411:
  2529  0069BA  EF16  F035         	goto	l102
  2530  0069BE                     u2410:
  2531  0069BE                     
  2532                           ;main.c: 114:         oldStudyGoal = studyGoal;
  2533  0069BE  C043  F03F         	movff	_studyGoal,_oldStudyGoal
  2534  0069C2  C044  F040         	movff	_studyGoal+1,_oldStudyGoal+1
  2535  0069C6  C045  F041         	movff	_studyGoal+2,_oldStudyGoal+2
  2536  0069CA  C046  F042         	movff	_studyGoal+3,_oldStudyGoal+3
  2537  0069CE                     
  2538                           ;main.c: 115:         lcdCommand(0x80);
  2539  0069CE  0E80               	movlw	128
  2540  0069D0  EC60  F031         	call	_lcdCommand
  2541  0069D4                     
  2542                           ;main.c: 116:         lcdString("Atual meta:");
  2543  0069D4  0EDE               	movlw	low STR_2
  2544  0069D6  6E0F               	movwf	lcdString@msg^0,c
  2545  0069D8  0E7F               	movlw	high STR_2
  2546  0069DA  6E10               	movwf	(lcdString@msg+1)^0,c
  2547  0069DC  ECBA  F032         	call	_lcdString	;wreg free
  2548  0069E0                     
  2549                           ;main.c: 117:         lcdCommand(0xC0);
  2550  0069E0  0EC0               	movlw	192
  2551  0069E2  EC60  F031         	call	_lcdCommand
  2552  0069E6                     
  2553                           ;main.c: 118:         lcdNumber(studyGoal);
  2554  0069E6  C043  F01B         	movff	_studyGoal,lcdNumber@value
  2555  0069EA  C044  F01C         	movff	_studyGoal+1,lcdNumber@value+1
  2556  0069EE  EC9E  F033         	call	_lcdNumber	;wreg free
  2557  0069F2                     
  2558                           ;main.c: 119:         lcdString(" minutos");
  2559  0069F2  0EF6               	movlw	low STR_3
  2560  0069F4  6E0F               	movwf	lcdString@msg^0,c
  2561  0069F6  0E7F               	movlw	high STR_3
  2562  0069F8  6E10               	movwf	(lcdString@msg+1)^0,c
  2563  0069FA  ECBA  F032         	call	_lcdString	;wreg free
  2564  0069FE                     
  2565                           ;main.c: 120:         for (int i = 0; i < 8; i++) {
  2566  0069FE  0E00               	movlw	0
  2567  006A00  6E20               	movwf	(SetaMeta@i+1)^0,c
  2568  006A02  0E00               	movlw	0
  2569  006A04  6E1F               	movwf	SetaMeta@i^0,c
  2570  006A06                     l2649:
  2571                           
  2572                           ;main.c: 121:             DesligarLed(i);
  2573  006A06  501F               	movf	SetaMeta@i^0,w,c
  2574  006A08  EC49  F031         	call	_DesligarLed
  2575  006A0C                     
  2576                           ;main.c: 122:         }
  2577  006A0C  4A1F               	infsnz	SetaMeta@i^0,f,c
  2578  006A0E  2A20               	incf	(SetaMeta@i+1)^0,f,c
  2579  006A10  BE20               	btfsc	(SetaMeta@i+1)^0,7,c
  2580  006A12  EF14  F035         	goto	u2421
  2581  006A16  5020               	movf	(SetaMeta@i+1)^0,w,c
  2582  006A18  E109               	bnz	u2420
  2583  006A1A  0E08               	movlw	8
  2584  006A1C  5C1F               	subwf	SetaMeta@i^0,w,c
  2585  006A1E  A0D8               	btfss	status,0,c
  2586  006A20  EF14  F035         	goto	u2421
  2587  006A24  EF16  F035         	goto	u2420
  2588  006A28                     u2421:
  2589  006A28  EF03  F035         	goto	l2649
  2590  006A2C                     u2420:
  2591  006A2C                     l102:
  2592  006A2C  0012               	return		;funcret
  2593  006A2E                     __end_of_SetaMeta:
  2594                           	callstack 0
  2595                           
  2596 ;; *************** function _adcRead *****************
  2597 ;; Defined at:
  2598 ;;		line 38 in file "adc.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;  channel         2    0[COMRAM] unsigned int 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  ADvalor         2    2[COMRAM] unsigned int 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  2    0[COMRAM] int 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2612 ;;      Params:         2       0       0       0       0       0       0
  2613 ;;      Locals:         2       0       0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0
  2615 ;;      Totals:         4       0       0       0       0       0       0
  2616 ;;Total ram usage:        4 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_SetaMeta
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text11
  2626  006524                     __ptext11:
  2627                           	callstack 0
  2628  006524                     _adcRead:
  2629                           	callstack 29
  2630  006524                     
  2631                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  2632  006524  0EC3               	movlw	195
  2633  006526  16C2               	andwf	194,f,c	;volatile
  2634                           
  2635                           ;adc.c: 41:     if (channel < 3) {
  2636  006528  5002               	movf	(adcRead@channel+1)^0,w,c
  2637  00652A  E107               	bnz	u2261
  2638  00652C  0E03               	movlw	3
  2639  00652E  5C01               	subwf	adcRead@channel^0,w,c
  2640  006530  B0D8               	btfsc	status,0,c
  2641  006532  EF9D  F032         	goto	u2261
  2642  006536  EF9F  F032         	goto	u2260
  2643  00653A                     u2261:
  2644  00653A  EFA3  F032         	goto	l2555
  2645  00653E                     u2260:
  2646  00653E                     
  2647                           ;adc.c: 42:         ADCON0 |= channel << 2;
  2648  00653E  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  2649  006540  46E8               	rlncf	wreg,f,c
  2650  006542  0BFC               	andlw	252
  2651  006544  12C2               	iorwf	194,f,c	;volatile
  2652  006546                     l2555:
  2653                           
  2654                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  2655  006546  82C2               	bsf	194,1,c	;volatile
  2656  006548                     l160:
  2657  006548  B2C2               	btfsc	194,1,c	;volatile
  2658  00654A  EFA9  F032         	goto	u2271
  2659  00654E  EFAB  F032         	goto	u2270
  2660  006552                     u2271:
  2661  006552  EFA4  F032         	goto	l160
  2662  006556                     u2270:
  2663  006556                     
  2664                           ;adc.c: 49:     ADvalor = ADRESH;
  2665  006556  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  2666  00655A  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  2667  00655C                     
  2668                           ;adc.c: 50:     ADvalor <<= 8;
  2669  00655C  5003               	movf	adcRead@ADvalor^0,w,c
  2670  00655E  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  2671  006560  6A03               	clrf	adcRead@ADvalor^0,c
  2672  006562                     
  2673                           ;adc.c: 51:     ADvalor += ADRESL;
  2674  006562  50C3               	movf	195,w,c	;volatile
  2675  006564  2603               	addwf	adcRead@ADvalor^0,f,c
  2676  006566  0E00               	movlw	0
  2677  006568  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  2678  00656A                     
  2679                           ;adc.c: 52:     return ADvalor;
  2680  00656A  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  2681  00656E  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  2682  006572  0012               	return		;funcret
  2683  006574                     __end_of_adcRead:
  2684                           	callstack 0
  2685                           
  2686 ;; *************** function _DesligarLed *****************
  2687 ;; Defined at:
  2688 ;;		line 19 in file "led.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  num             1    wreg     unsigned char 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  num             1    0[COMRAM] unsigned char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2702 ;;      Params:         0       0       0       0       0       0       0
  2703 ;;      Locals:         1       0       0       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0       0       0
  2705 ;;      Totals:         1       0       0       0       0       0       0
  2706 ;;Total ram usage:        1 bytes
  2707 ;; Hardware stack levels used: 1
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_SetaMeta
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text12
  2716  006292                     __ptext12:
  2717                           	callstack 0
  2718  006292                     _DesligarLed:
  2719                           	callstack 29
  2720                           
  2721                           ;incstack = 0
  2722                           ;DesligarLed@num stored from wreg
  2723  006292  6E01               	movwf	DesligarLed@num^0,c
  2724  006294                     
  2725                           ;led.c: 20:     (*(volatile __near unsigned char*) 0xF83) &= ~led[num];
  2726  006294  0E63               	movlw	low _led
  2727  006296  2401               	addwf	DesligarLed@num^0,w,c
  2728  006298  6ED9               	movwf	fsr2l,c
  2729  00629A  6ADA               	clrf	fsr2h,c
  2730  00629C  0E00               	movlw	high _led
  2731  00629E  22DA               	addwfc	fsr2h,f,c
  2732  0062A0  50DF               	movf	indf2,w,c
  2733  0062A2  0AFF               	xorlw	255
  2734  0062A4  1683               	andwf	131,f,c	;volatile
  2735  0062A6  0012               	return		;funcret
  2736  0062A8                     __end_of_DesligarLed:
  2737                           	callstack 0
  2738                           
  2739 ;; *************** function _LeTeclado *****************
  2740 ;; Defined at:
  2741 ;;		line 95 in file "main.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2755 ;;      Params:         0       0       0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 7
  2762 ;; This function calls:
  2763 ;;		_kpRead
  2764 ;;		_kpReadKey
  2765 ;;		_operate
  2766 ;; This function is called by:
  2767 ;;		_main
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	text13
  2772  006828                     __ptext13:
  2773                           	callstack 0
  2774  006828                     _LeTeclado:
  2775                           	callstack 23
  2776  006828                     
  2777                           ;main.c: 96:     if (kpRead() != oldValue) {
  2778  006828  EC3A  F031         	call	_kpRead	;wreg free
  2779  00682C  5059               	movf	_oldValue^0,w,c
  2780  00682E  1801               	xorwf	?_kpRead^0,w,c
  2781  006830  E109               	bnz	u2380
  2782  006832  505A               	movf	(_oldValue+1)^0,w,c
  2783  006834  1802               	xorwf	(?_kpRead+1)^0,w,c
  2784  006836  B4D8               	btfsc	status,2,c
  2785  006838  EF20  F034         	goto	u2381
  2786  00683C  EF22  F034         	goto	u2380
  2787  006840                     u2381:
  2788  006840  EF65  F034         	goto	l96
  2789  006844                     u2380:
  2790  006844                     
  2791                           ;main.c: 97:         oldValue = kpRead();
  2792  006844  EC3A  F031         	call	_kpRead	;wreg free
  2793  006848  C001  F059         	movff	?_kpRead,_oldValue
  2794  00684C  C002  F05A         	movff	?_kpRead+1,_oldValue+1
  2795  006850                     
  2796                           ;main.c: 98:         tecla = kpReadKey();
  2797  006850  ECD8  F033         	call	_kpReadKey	;wreg free
  2798  006854  6E62               	movwf	_tecla^0,c
  2799  006856                     
  2800                           ;main.c: 99:         if (reset % 2 == 0) {
  2801  006856  B06B               	btfsc	_reset^0,0,c
  2802  006858  EF30  F034         	goto	u2391
  2803  00685C  EF32  F034         	goto	u2390
  2804  006860                     u2391:
  2805  006860  EF3C  F034         	goto	l2619
  2806  006864                     u2390:
  2807  006864                     
  2808                           ;main.c: 100:             time = breakTime;
  2809  006864  C073  F04F         	movff	_breakTime,_time
  2810  006868  C074  F050         	movff	_breakTime+1,_time+1
  2811  00686C  C075  F051         	movff	_breakTime+2,_time+2
  2812  006870  C076  F052         	movff	_breakTime+3,_time+3
  2813                           
  2814                           ;main.c: 101:         } else if (reset == 8) {
  2815  006874  EF62  F034         	goto	l2625
  2816  006878                     l2619:
  2817  006878  0E08               	movlw	8
  2818  00687A  186B               	xorwf	_reset^0,w,c
  2819  00687C  106C               	iorwf	(_reset+1)^0,w,c
  2820  00687E  106D               	iorwf	(_reset+2)^0,w,c
  2821  006880  106E               	iorwf	(_reset+3)^0,w,c
  2822  006882  A4D8               	btfss	status,2,c
  2823  006884  EF46  F034         	goto	u2401
  2824  006888  EF48  F034         	goto	u2400
  2825  00688C                     u2401:
  2826  00688C  EF5A  F034         	goto	l94
  2827  006890                     u2400:
  2828  006890                     
  2829                           ;main.c: 102:             time = bigBreak;
  2830  006890  C06F  F04F         	movff	_bigBreak,_time
  2831  006894  C070  F050         	movff	_bigBreak+1,_time+1
  2832  006898  C071  F051         	movff	_bigBreak+2,_time+2
  2833  00689C  C072  F052         	movff	_bigBreak+3,_time+3
  2834  0068A0                     
  2835                           ;main.c: 103:             reset = 0;
  2836  0068A0  0E00               	movlw	0
  2837  0068A2  6E6B               	movwf	_reset^0,c
  2838  0068A4  0E00               	movlw	0
  2839  0068A6  6E6C               	movwf	(_reset+1)^0,c
  2840  0068A8  0E00               	movlw	0
  2841  0068AA  6E6D               	movwf	(_reset+2)^0,c
  2842  0068AC  0E00               	movlw	0
  2843  0068AE  6E6E               	movwf	(_reset+3)^0,c
  2844                           
  2845                           ;main.c: 104:         } else {
  2846  0068B0  EF62  F034         	goto	l2625
  2847  0068B4                     l94:
  2848                           
  2849                           ;main.c: 105:             time = studyTime;
  2850  0068B4  C077  F04F         	movff	_studyTime,_time
  2851  0068B8  C078  F050         	movff	_studyTime+1,_time+1
  2852  0068BC  C079  F051         	movff	_studyTime+2,_time+2
  2853  0068C0  C07A  F052         	movff	_studyTime+3,_time+3
  2854  0068C4                     l2625:
  2855                           
  2856                           ;main.c: 107:         operate(tecla);
  2857  0068C4  5062               	movf	_tecla^0,w,c
  2858  0068C6  EC34  F03D         	call	_operate
  2859  0068CA                     l96:
  2860  0068CA  0012               	return		;funcret
  2861  0068CC                     __end_of_LeTeclado:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function _operate *****************
  2865 ;; Defined at:
  2866 ;;		line 22 in file "main.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  op              1    wreg     unsigned char 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  op              1   48[COMRAM] unsigned char 
  2871 ;;  tempo           2   49[COMRAM] int 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2881 ;;      Params:         0       0       0       0       0       0       0
  2882 ;;      Locals:        11       0       0       0       0       0       0
  2883 ;;      Temps:          2       0       0       0       0       0       0
  2884 ;;      Totals:        13       0       0       0       0       0       0
  2885 ;;Total ram usage:       13 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 6
  2888 ;; This function calls:
  2889 ;;		___aldiv
  2890 ;;		___almod
  2891 ;;		_lcdCommand
  2892 ;;		_lcdNumber
  2893 ;;		_lcdString
  2894 ;;		_ssdDigit
  2895 ;;		_ssdUpdate
  2896 ;;		_verifyGoal
  2897 ;; This function is called by:
  2898 ;;		_LeTeclado
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text14
  2903  007A68                     __ptext14:
  2904                           	callstack 0
  2905  007A68                     _operate:
  2906                           	callstack 23
  2907                           
  2908                           ;incstack = 0
  2909                           ;operate@op stored from wreg
  2910  007A68  6E31               	movwf	operate@op^0,c
  2911  007A6A                     
  2912                           ;main.c: 23:     switch (op) {
  2913  007A6A  EF41  F03F         	goto	l2523
  2914  007A6E                     l64:
  2915                           
  2916                           ;main.c: 25:             if (reset % 2 == 0) {
  2917  007A6E  B06B               	btfsc	_reset^0,0,c
  2918  007A70  EF3C  F03D         	goto	u2141
  2919  007A74  EF3E  F03D         	goto	u2140
  2920  007A78                     u2141:
  2921  007A78  EF4E  F03D         	goto	l2437
  2922  007A7C                     u2140:
  2923  007A7C                     
  2924                           ;main.c: 26:                 breakTime += 60;
  2925  007A7C  0E3C               	movlw	60
  2926  007A7E  2673               	addwf	_breakTime^0,f,c
  2927  007A80  0E00               	movlw	0
  2928  007A82  2274               	addwfc	(_breakTime+1)^0,f,c
  2929  007A84  2275               	addwfc	(_breakTime+2)^0,f,c
  2930  007A86  2276               	addwfc	(_breakTime+3)^0,f,c
  2931  007A88                     l2435:
  2932                           
  2933                           ;main.c: 27:                 time = breakTime;
  2934  007A88  C073  F04F         	movff	_breakTime,_time
  2935  007A8C  C074  F050         	movff	_breakTime+1,_time+1
  2936  007A90  C075  F051         	movff	_breakTime+2,_time+2
  2937  007A94  C076  F052         	movff	_breakTime+3,_time+3
  2938                           
  2939                           ;main.c: 28:             } else if (reset == 8) {
  2940  007A98  EF62  F03F         	goto	l88
  2941  007A9C                     l2437:
  2942  007A9C  0E08               	movlw	8
  2943  007A9E  186B               	xorwf	_reset^0,w,c
  2944  007AA0  106C               	iorwf	(_reset+1)^0,w,c
  2945  007AA2  106D               	iorwf	(_reset+2)^0,w,c
  2946  007AA4  106E               	iorwf	(_reset+3)^0,w,c
  2947  007AA6  A4D8               	btfss	status,2,c
  2948  007AA8  EF58  F03D         	goto	u2151
  2949  007AAC  EF5A  F03D         	goto	u2150
  2950  007AB0                     u2151:
  2951  007AB0  EF6A  F03D         	goto	l2443
  2952  007AB4                     u2150:
  2953  007AB4                     
  2954                           ;main.c: 29:                 bigBreak += 60;
  2955  007AB4  0E3C               	movlw	60
  2956  007AB6  266F               	addwf	_bigBreak^0,f,c
  2957  007AB8  0E00               	movlw	0
  2958  007ABA  2270               	addwfc	(_bigBreak+1)^0,f,c
  2959  007ABC  2271               	addwfc	(_bigBreak+2)^0,f,c
  2960  007ABE  2272               	addwfc	(_bigBreak+3)^0,f,c
  2961  007AC0                     l2441:
  2962                           
  2963                           ;main.c: 30:                 time = bigBreak;
  2964  007AC0  C06F  F04F         	movff	_bigBreak,_time
  2965  007AC4  C070  F050         	movff	_bigBreak+1,_time+1
  2966  007AC8  C071  F051         	movff	_bigBreak+2,_time+2
  2967  007ACC  C072  F052         	movff	_bigBreak+3,_time+3
  2968                           
  2969                           ;main.c: 31:             } else {
  2970  007AD0  EF62  F03F         	goto	l88
  2971  007AD4                     l2443:
  2972                           
  2973                           ;main.c: 32:                 studyTime += 60;
  2974  007AD4  0E3C               	movlw	60
  2975  007AD6  2677               	addwf	_studyTime^0,f,c
  2976  007AD8  0E00               	movlw	0
  2977  007ADA  2278               	addwfc	(_studyTime+1)^0,f,c
  2978  007ADC  2279               	addwfc	(_studyTime+2)^0,f,c
  2979  007ADE  227A               	addwfc	(_studyTime+3)^0,f,c
  2980  007AE0                     l2445:
  2981                           
  2982                           ;main.c: 33:                 time = studyTime;
  2983  007AE0  C077  F04F         	movff	_studyTime,_time
  2984  007AE4  C078  F050         	movff	_studyTime+1,_time+1
  2985  007AE8  C079  F051         	movff	_studyTime+2,_time+2
  2986  007AEC  C07A  F052         	movff	_studyTime+3,_time+3
  2987  007AF0  EF62  F03F         	goto	l88
  2988  007AF4                     l70:
  2989                           
  2990                           ;main.c: 38:             if (reset % 2 == 0) {
  2991  007AF4  B06B               	btfsc	_reset^0,0,c
  2992  007AF6  EF7F  F03D         	goto	u2161
  2993  007AFA  EF81  F03D         	goto	u2160
  2994  007AFE                     u2161:
  2995  007AFE  EF8B  F03D         	goto	l2451
  2996  007B02                     u2160:
  2997  007B02                     
  2998                           ;main.c: 39:                 breakTime -= 60;
  2999  007B02  0EC4               	movlw	196
  3000  007B04  2673               	addwf	_breakTime^0,f,c
  3001  007B06  0EFF               	movlw	255
  3002  007B08  2274               	addwfc	(_breakTime+1)^0,f,c
  3003  007B0A  0EFF               	movlw	255
  3004  007B0C  2275               	addwfc	(_breakTime+2)^0,f,c
  3005  007B0E  0EFF               	movlw	255
  3006  007B10  2276               	addwfc	(_breakTime+3)^0,f,c
  3007  007B12  EF44  F03D         	goto	l2435
  3008  007B16                     l2451:
  3009  007B16  0E08               	movlw	8
  3010  007B18  186B               	xorwf	_reset^0,w,c
  3011  007B1A  106C               	iorwf	(_reset+1)^0,w,c
  3012  007B1C  106D               	iorwf	(_reset+2)^0,w,c
  3013  007B1E  106E               	iorwf	(_reset+3)^0,w,c
  3014  007B20  A4D8               	btfss	status,2,c
  3015  007B22  EF95  F03D         	goto	u2171
  3016  007B26  EF97  F03D         	goto	u2170
  3017  007B2A                     u2171:
  3018  007B2A  EFA1  F03D         	goto	l2457
  3019  007B2E                     u2170:
  3020  007B2E                     
  3021                           ;main.c: 42:                 bigBreak -= 60;
  3022  007B2E  0EC4               	movlw	196
  3023  007B30  266F               	addwf	_bigBreak^0,f,c
  3024  007B32  0EFF               	movlw	255
  3025  007B34  2270               	addwfc	(_bigBreak+1)^0,f,c
  3026  007B36  0EFF               	movlw	255
  3027  007B38  2271               	addwfc	(_bigBreak+2)^0,f,c
  3028  007B3A  0EFF               	movlw	255
  3029  007B3C  2272               	addwfc	(_bigBreak+3)^0,f,c
  3030  007B3E  EF60  F03D         	goto	l2441
  3031  007B42                     l2457:
  3032                           
  3033                           ;main.c: 45:                 studyTime -= 60;
  3034  007B42  0EC4               	movlw	196
  3035  007B44  2677               	addwf	_studyTime^0,f,c
  3036  007B46  0EFF               	movlw	255
  3037  007B48  2278               	addwfc	(_studyTime+1)^0,f,c
  3038  007B4A  0EFF               	movlw	255
  3039  007B4C  2279               	addwfc	(_studyTime+2)^0,f,c
  3040  007B4E  0EFF               	movlw	255
  3041  007B50  227A               	addwfc	(_studyTime+3)^0,f,c
  3042  007B52  EF70  F03D         	goto	l2445
  3043  007B56                     l75:
  3044                           
  3045                           ;main.c: 51:             if (reset % 2 == 0) {
  3046  007B56  B06B               	btfsc	_reset^0,0,c
  3047  007B58  EFB0  F03D         	goto	u2181
  3048  007B5C  EFB2  F03D         	goto	u2180
  3049  007B60                     u2181:
  3050  007B60  EFBD  F03D         	goto	l2465
  3051  007B64                     u2180:
  3052  007B64                     
  3053                           ;main.c: 52:                 lcdCommand(0x01);
  3054  007B64  0E01               	movlw	1
  3055  007B66  EC60  F031         	call	_lcdCommand
  3056  007B6A                     
  3057                           ;main.c: 53:                 lcdString("Hora do descanso!");
  3058  007B6A  0EE1               	movlw	low STR_1
  3059  007B6C  6E0F               	movwf	lcdString@msg^0,c
  3060  007B6E  0E7E               	movlw	high STR_1
  3061  007B70  6E10               	movwf	(lcdString@msg+1)^0,c
  3062  007B72  ECBA  F032         	call	_lcdString	;wreg free
  3063                           
  3064                           ;main.c: 54:             } else if (studyGoal != 0) {
  3065  007B76  EFEF  F03E         	goto	l79
  3066  007B7A                     l2465:
  3067  007B7A  5043               	movf	_studyGoal^0,w,c
  3068  007B7C  1044               	iorwf	(_studyGoal+1)^0,w,c
  3069  007B7E  1045               	iorwf	(_studyGoal+2)^0,w,c
  3070  007B80  1046               	iorwf	(_studyGoal+3)^0,w,c
  3071  007B82  B4D8               	btfsc	status,2,c
  3072  007B84  EFC6  F03D         	goto	u2191
  3073  007B88  EFC8  F03D         	goto	u2190
  3074  007B8C                     u2191:
  3075  007B8C  EFEF  F03E         	goto	l79
  3076  007B90                     u2190:
  3077  007B90                     
  3078                           ;main.c: 55:                 lcdCommand(0x01);
  3079  007B90  0E01               	movlw	1
  3080  007B92  EC60  F031         	call	_lcdCommand
  3081  007B96                     
  3082                           ;main.c: 56:                 lcdString("Atual meta:");
  3083  007B96  0EDE               	movlw	low STR_2
  3084  007B98  6E0F               	movwf	lcdString@msg^0,c
  3085  007B9A  0E7F               	movlw	high STR_2
  3086  007B9C  6E10               	movwf	(lcdString@msg+1)^0,c
  3087  007B9E  ECBA  F032         	call	_lcdString	;wreg free
  3088  007BA2                     
  3089                           ;main.c: 57:                 lcdCommand(0xC0);
  3090  007BA2  0EC0               	movlw	192
  3091  007BA4  EC60  F031         	call	_lcdCommand
  3092  007BA8                     
  3093                           ;main.c: 58:                 lcdNumber(studyGoal);
  3094  007BA8  C043  F01B         	movff	_studyGoal,lcdNumber@value
  3095  007BAC  C044  F01C         	movff	_studyGoal+1,lcdNumber@value+1
  3096  007BB0  EC9E  F033         	call	_lcdNumber	;wreg free
  3097  007BB4                     
  3098                           ;main.c: 59:                 lcdString(" minutos");
  3099  007BB4  0EF6               	movlw	low STR_3
  3100  007BB6  6E0F               	movwf	lcdString@msg^0,c
  3101  007BB8  0E7F               	movlw	high STR_3
  3102  007BBA  6E10               	movwf	(lcdString@msg+1)^0,c
  3103  007BBC  ECBA  F032         	call	_lcdString	;wreg free
  3104  007BC0                     
  3105                           ;main.c: 60:                 enable = 0;
  3106  007BC0  0E00               	movlw	0
  3107  007BC2  6E61               	movwf	_enable^0,c
  3108  007BC4  EFEF  F03E         	goto	l79
  3109  007BC8                     l2479:
  3110                           
  3111                           ;main.c: 63:                 ssdDigit(((time / 3600) % 24) / 10, 0);
  3112  007BC8  0E18               	movlw	24
  3113  007BCA  6E1F               	movwf	___almod@divisor^0,c
  3114  007BCC  0E00               	movlw	0
  3115  007BCE  6E20               	movwf	(___almod@divisor+1)^0,c
  3116  007BD0  0E00               	movlw	0
  3117  007BD2  6E21               	movwf	(___almod@divisor+2)^0,c
  3118  007BD4  0E00               	movlw	0
  3119  007BD6  6E22               	movwf	(___almod@divisor+3)^0,c
  3120  007BD8  0E10               	movlw	16
  3121  007BDA  6E11               	movwf	___aldiv@divisor^0,c
  3122  007BDC  0E0E               	movlw	14
  3123  007BDE  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3124  007BE0  0E00               	movlw	0
  3125  007BE2  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3126  007BE4  0E00               	movlw	0
  3127  007BE6  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3128  007BE8  C04F  F00D         	movff	_time,___aldiv@dividend
  3129  007BEC  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  3130  007BF0  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  3131  007BF4  C052  F010         	movff	_time+3,___aldiv@dividend+3
  3132  007BF8  EC49  F036         	call	___aldiv	;wreg free
  3133  007BFC  C00D  F01B         	movff	?___aldiv,___almod@dividend
  3134  007C00  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  3135  007C04  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  3136  007C08  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  3137  007C0C  ECD3  F035         	call	___almod	;wreg free
  3138  007C10  C01B  F029         	movff	?___almod,_operate$1186
  3139  007C14  C01C  F02A         	movff	?___almod+1,_operate$1186+1
  3140  007C18  C01D  F02B         	movff	?___almod+2,_operate$1186+2
  3141  007C1C  C01E  F02C         	movff	?___almod+3,_operate$1186+3
  3142                           
  3143                           ;main.c: 63:                 ssdDigit(((time / 3600) % 24) / 10, 0);
  3144  007C20  0E00               	movlw	0
  3145  007C22  6E25               	movwf	ssdDigit@pos^0,c
  3146  007C24  C029  F00D         	movff	_operate$1186,___aldiv@dividend
  3147  007C28  C02A  F00E         	movff	_operate$1186+1,___aldiv@dividend+1
  3148  007C2C  C02B  F00F         	movff	_operate$1186+2,___aldiv@dividend+2
  3149  007C30  C02C  F010         	movff	_operate$1186+3,___aldiv@dividend+3
  3150  007C34  0E0A               	movlw	10
  3151  007C36  6E11               	movwf	___aldiv@divisor^0,c
  3152  007C38  0E00               	movlw	0
  3153  007C3A  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3154  007C3C  0E00               	movlw	0
  3155  007C3E  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3156  007C40  0E00               	movlw	0
  3157  007C42  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3158  007C44  EC49  F036         	call	___aldiv	;wreg free
  3159  007C48  500D               	movf	?___aldiv^0,w,c
  3160  007C4A  EC10  F033         	call	_ssdDigit
  3161                           
  3162                           ;main.c: 64:                 ssdDigit(((time / 3600) % 24) % 10, 1);
  3163  007C4E  0E18               	movlw	24
  3164  007C50  6E1F               	movwf	___almod@divisor^0,c
  3165  007C52  0E00               	movlw	0
  3166  007C54  6E20               	movwf	(___almod@divisor+1)^0,c
  3167  007C56  0E00               	movlw	0
  3168  007C58  6E21               	movwf	(___almod@divisor+2)^0,c
  3169  007C5A  0E00               	movlw	0
  3170  007C5C  6E22               	movwf	(___almod@divisor+3)^0,c
  3171  007C5E  0E10               	movlw	16
  3172  007C60  6E11               	movwf	___aldiv@divisor^0,c
  3173  007C62  0E0E               	movlw	14
  3174  007C64  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3175  007C66  0E00               	movlw	0
  3176  007C68  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3177  007C6A  0E00               	movlw	0
  3178  007C6C  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3179  007C6E  C04F  F00D         	movff	_time,___aldiv@dividend
  3180  007C72  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  3181  007C76  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  3182  007C7A  C052  F010         	movff	_time+3,___aldiv@dividend+3
  3183  007C7E  EC49  F036         	call	___aldiv	;wreg free
  3184  007C82  C00D  F01B         	movff	?___aldiv,___almod@dividend
  3185  007C86  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  3186  007C8A  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  3187  007C8E  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  3188  007C92  ECD3  F035         	call	___almod	;wreg free
  3189  007C96  C01B  F02D         	movff	?___almod,_operate$1187
  3190  007C9A  C01C  F02E         	movff	?___almod+1,_operate$1187+1
  3191  007C9E  C01D  F02F         	movff	?___almod+2,_operate$1187+2
  3192  007CA2  C01E  F030         	movff	?___almod+3,_operate$1187+3
  3193                           
  3194                           ;main.c: 64:                 ssdDigit(((time / 3600) % 24) % 10, 1);
  3195  007CA6  0E01               	movlw	1
  3196  007CA8  6E25               	movwf	ssdDigit@pos^0,c
  3197  007CAA  C02D  F01B         	movff	_operate$1187,___almod@dividend
  3198  007CAE  C02E  F01C         	movff	_operate$1187+1,___almod@dividend+1
  3199  007CB2  C02F  F01D         	movff	_operate$1187+2,___almod@dividend+2
  3200  007CB6  C030  F01E         	movff	_operate$1187+3,___almod@dividend+3
  3201  007CBA  0E0A               	movlw	10
  3202  007CBC  6E1F               	movwf	___almod@divisor^0,c
  3203  007CBE  0E00               	movlw	0
  3204  007CC0  6E20               	movwf	(___almod@divisor+1)^0,c
  3205  007CC2  0E00               	movlw	0
  3206  007CC4  6E21               	movwf	(___almod@divisor+2)^0,c
  3207  007CC6  0E00               	movlw	0
  3208  007CC8  6E22               	movwf	(___almod@divisor+3)^0,c
  3209  007CCA  ECD3  F035         	call	___almod	;wreg free
  3210  007CCE  501B               	movf	?___almod^0,w,c
  3211  007CD0  EC10  F033         	call	_ssdDigit
  3212                           
  3213                           ;main.c: 65:                 ssdDigit((time / 600) % 6, 2);
  3214  007CD4  0E02               	movlw	2
  3215  007CD6  6E25               	movwf	ssdDigit@pos^0,c
  3216  007CD8  0E58               	movlw	88
  3217  007CDA  6E11               	movwf	___aldiv@divisor^0,c
  3218  007CDC  0E02               	movlw	2
  3219  007CDE  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3220  007CE0  0E00               	movlw	0
  3221  007CE2  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3222  007CE4  0E00               	movlw	0
  3223  007CE6  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3224  007CE8  C04F  F00D         	movff	_time,___aldiv@dividend
  3225  007CEC  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  3226  007CF0  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  3227  007CF4  C052  F010         	movff	_time+3,___aldiv@dividend+3
  3228  007CF8  EC49  F036         	call	___aldiv	;wreg free
  3229  007CFC  C00D  F01B         	movff	?___aldiv,___almod@dividend
  3230  007D00  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  3231  007D04  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  3232  007D08  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  3233  007D0C  0E06               	movlw	6
  3234  007D0E  6E1F               	movwf	___almod@divisor^0,c
  3235  007D10  0E00               	movlw	0
  3236  007D12  6E20               	movwf	(___almod@divisor+1)^0,c
  3237  007D14  0E00               	movlw	0
  3238  007D16  6E21               	movwf	(___almod@divisor+2)^0,c
  3239  007D18  0E00               	movlw	0
  3240  007D1A  6E22               	movwf	(___almod@divisor+3)^0,c
  3241  007D1C  ECD3  F035         	call	___almod	;wreg free
  3242  007D20  501B               	movf	?___almod^0,w,c
  3243  007D22  EC10  F033         	call	_ssdDigit
  3244                           
  3245                           ;main.c: 66:                 ssdDigit((time / 60) % 10, 3);
  3246  007D26  0E03               	movlw	3
  3247  007D28  6E25               	movwf	ssdDigit@pos^0,c
  3248  007D2A  0E3C               	movlw	60
  3249  007D2C  6E11               	movwf	___aldiv@divisor^0,c
  3250  007D2E  0E00               	movlw	0
  3251  007D30  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3252  007D32  0E00               	movlw	0
  3253  007D34  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3254  007D36  0E00               	movlw	0
  3255  007D38  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3256  007D3A  C04F  F00D         	movff	_time,___aldiv@dividend
  3257  007D3E  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  3258  007D42  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  3259  007D46  C052  F010         	movff	_time+3,___aldiv@dividend+3
  3260  007D4A  EC49  F036         	call	___aldiv	;wreg free
  3261  007D4E  C00D  F01B         	movff	?___aldiv,___almod@dividend
  3262  007D52  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  3263  007D56  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  3264  007D5A  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  3265  007D5E  0E0A               	movlw	10
  3266  007D60  6E1F               	movwf	___almod@divisor^0,c
  3267  007D62  0E00               	movlw	0
  3268  007D64  6E20               	movwf	(___almod@divisor+1)^0,c
  3269  007D66  0E00               	movlw	0
  3270  007D68  6E21               	movwf	(___almod@divisor+2)^0,c
  3271  007D6A  0E00               	movlw	0
  3272  007D6C  6E22               	movwf	(___almod@divisor+3)^0,c
  3273  007D6E  ECD3  F035         	call	___almod	;wreg free
  3274  007D72  501B               	movf	?___almod^0,w,c
  3275  007D74  EC10  F033         	call	_ssdDigit
  3276  007D78                     
  3277                           ;main.c: 67:                 if (reset % 2 != 0) {
  3278  007D78  A06B               	btfss	_reset^0,0,c
  3279  007D7A  EFC1  F03E         	goto	u2201
  3280  007D7E  EFC3  F03E         	goto	u2200
  3281  007D82                     u2201:
  3282  007D82  EFCB  F03E         	goto	l2485
  3283  007D86                     u2200:
  3284  007D86                     
  3285                           ;main.c: 68:                     totalStudied++;
  3286  007D86  0E01               	movlw	1
  3287  007D88  264B               	addwf	_totalStudied^0,f,c
  3288  007D8A  0E00               	movlw	0
  3289  007D8C  224C               	addwfc	(_totalStudied+1)^0,f,c
  3290  007D8E  224D               	addwfc	(_totalStudied+2)^0,f,c
  3291  007D90  224E               	addwfc	(_totalStudied+3)^0,f,c
  3292                           
  3293                           ;main.c: 69:                 } else {
  3294  007D92  EFD1  F03E         	goto	l2487
  3295  007D96                     l2485:
  3296                           
  3297                           ;main.c: 70:                     totalBreak++;
  3298  007D96  0E01               	movlw	1
  3299  007D98  2647               	addwf	_totalBreak^0,f,c
  3300  007D9A  0E00               	movlw	0
  3301  007D9C  2248               	addwfc	(_totalBreak+1)^0,f,c
  3302  007D9E  2249               	addwfc	(_totalBreak+2)^0,f,c
  3303  007DA0  224A               	addwfc	(_totalBreak+3)^0,f,c
  3304  007DA2                     l2487:
  3305                           
  3306                           ;main.c: 72:                 ssdUpdate();
  3307  007DA2  EC1F  F038         	call	_ssdUpdate	;wreg free
  3308  007DA6                     
  3309                           ;main.c: 73:                 for (int tempo = 0; tempo < 500; tempo++);
  3310  007DA6  0E00               	movlw	0
  3311  007DA8  6E33               	movwf	(operate@tempo+1)^0,c
  3312  007DAA  0E00               	movlw	0
  3313  007DAC  6E32               	movwf	operate@tempo^0,c
  3314  007DAE                     l2495:
  3315  007DAE  4A32               	infsnz	operate@tempo^0,f,c
  3316  007DB0  2A33               	incf	(operate@tempo+1)^0,f,c
  3317  007DB2  BE33               	btfsc	(operate@tempo+1)^0,7,c
  3318  007DB4  EFE5  F03E         	goto	u2211
  3319  007DB8  0EF4               	movlw	244
  3320  007DBA  5C32               	subwf	operate@tempo^0,w,c
  3321  007DBC  0E01               	movlw	1
  3322  007DBE  5833               	subwfb	(operate@tempo+1)^0,w,c
  3323  007DC0  A0D8               	btfss	status,0,c
  3324  007DC2  EFE5  F03E         	goto	u2211
  3325  007DC6  EFE7  F03E         	goto	u2210
  3326  007DCA                     u2211:
  3327  007DCA  EFD7  F03E         	goto	l2495
  3328  007DCE                     u2210:
  3329  007DCE                     
  3330                           ;main.c: 74:             }
  3331  007DCE  0EFF               	movlw	255
  3332  007DD0  264F               	addwf	_time^0,f,c
  3333  007DD2  0EFF               	movlw	255
  3334  007DD4  2250               	addwfc	(_time+1)^0,f,c
  3335  007DD6  0EFF               	movlw	255
  3336  007DD8  2251               	addwfc	(_time+2)^0,f,c
  3337  007DDA  0EFF               	movlw	255
  3338  007DDC  2252               	addwfc	(_time+3)^0,f,c
  3339  007DDE                     l79:
  3340  007DDE  BE52               	btfsc	(_time+3)^0,7,c
  3341  007DE0  EFFE  F03E         	goto	u2220
  3342  007DE4  5052               	movf	(_time+3)^0,w,c
  3343  007DE6  1051               	iorwf	(_time+2)^0,w,c
  3344  007DE8  1050               	iorwf	(_time+1)^0,w,c
  3345  007DEA  E106               	bnz	u2221
  3346  007DEC  044F               	decf	_time^0,w,c
  3347  007DEE  B0D8               	btfsc	status,0,c
  3348  007DF0  EFFC  F03E         	goto	u2221
  3349  007DF4  EFFE  F03E         	goto	u2220
  3350  007DF8                     u2221:
  3351  007DF8  EFE4  F03D         	goto	l2479
  3352  007DFC                     u2220:
  3353  007DFC                     
  3354                           ;main.c: 75:             reset++;
  3355  007DFC  0E01               	movlw	1
  3356  007DFE  266B               	addwf	_reset^0,f,c
  3357  007E00  0E00               	movlw	0
  3358  007E02  226C               	addwfc	(_reset+1)^0,f,c
  3359  007E04  226D               	addwfc	(_reset+2)^0,f,c
  3360  007E06  226E               	addwfc	(_reset+3)^0,f,c
  3361  007E08                     
  3362                           ;main.c: 76:             verifyGoal();
  3363  007E08  ECD5  F038         	call	_verifyGoal	;wreg free
  3364  007E0C                     
  3365                           ;main.c: 77:             lcdCommand(0x01);
  3366  007E0C  0E01               	movlw	1
  3367  007E0E  EC60  F031         	call	_lcdCommand
  3368  007E12                     
  3369                           ;main.c: 78:             lcdString("Tempo de estudo:");
  3370  007E12  0E05               	movlw	low STR_4
  3371  007E14  6E0F               	movwf	lcdString@msg^0,c
  3372  007E16  0E7F               	movlw	high STR_4
  3373  007E18  6E10               	movwf	(lcdString@msg+1)^0,c
  3374  007E1A  ECBA  F032         	call	_lcdString	;wreg free
  3375  007E1E                     
  3376                           ;main.c: 79:             lcdCommand(0xC0);
  3377  007E1E  0EC0               	movlw	192
  3378  007E20  EC60  F031         	call	_lcdCommand
  3379  007E24                     
  3380                           ;main.c: 80:             lcdNumber(totalStudied / 3600);
  3381  007E24  C04B  F00D         	movff	_totalStudied,___aldiv@dividend
  3382  007E28  C04C  F00E         	movff	_totalStudied+1,___aldiv@dividend+1
  3383  007E2C  C04D  F00F         	movff	_totalStudied+2,___aldiv@dividend+2
  3384  007E30  C04E  F010         	movff	_totalStudied+3,___aldiv@dividend+3
  3385  007E34  0E10               	movlw	16
  3386  007E36  6E11               	movwf	___aldiv@divisor^0,c
  3387  007E38  0E0E               	movlw	14
  3388  007E3A  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3389  007E3C  0E00               	movlw	0
  3390  007E3E  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3391  007E40  0E00               	movlw	0
  3392  007E42  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3393  007E44  EC49  F036         	call	___aldiv	;wreg free
  3394  007E48  C00D  F01B         	movff	?___aldiv,lcdNumber@value
  3395  007E4C  C00E  F01C         	movff	?___aldiv+1,lcdNumber@value+1
  3396  007E50  EC9E  F033         	call	_lcdNumber	;wreg free
  3397  007E54                     
  3398                           ;main.c: 81:             lcdString(" minutos");
  3399  007E54  0EF6               	movlw	low STR_3
  3400  007E56  6E0F               	movwf	lcdString@msg^0,c
  3401  007E58  0E7F               	movlw	high STR_3
  3402  007E5A  6E10               	movwf	(lcdString@msg+1)^0,c
  3403  007E5C  ECBA  F032         	call	_lcdString	;wreg free
  3404                           
  3405                           ;main.c: 82:             break;
  3406  007E60  EF62  F03F         	goto	l88
  3407  007E64                     l2515:
  3408                           
  3409                           ;main.c: 85:             lcdCommand(0x01);
  3410  007E64  0E01               	movlw	1
  3411  007E66  EC60  F031         	call	_lcdCommand
  3412  007E6A                     
  3413                           ;main.c: 86:             enable = 1;
  3414  007E6A  0E01               	movlw	1
  3415  007E6C  6E61               	movwf	_enable^0,c
  3416                           
  3417                           ;main.c: 87:             break;
  3418  007E6E  EF62  F03F         	goto	l88
  3419  007E72                     l2519:
  3420                           
  3421                           ;main.c: 90:             reset++;
  3422  007E72  0E01               	movlw	1
  3423  007E74  266B               	addwf	_reset^0,f,c
  3424  007E76  0E00               	movlw	0
  3425  007E78  226C               	addwfc	(_reset+1)^0,f,c
  3426  007E7A  226D               	addwfc	(_reset+2)^0,f,c
  3427  007E7C  226E               	addwfc	(_reset+3)^0,f,c
  3428                           
  3429                           ;main.c: 91:             break;
  3430  007E7E  EF62  F03F         	goto	l88
  3431  007E82                     l2523:
  3432  007E82  5031               	movf	operate@op^0,w,c
  3433  007E84  6E27               	movwf	??_operate^0,c
  3434  007E86  6A28               	clrf	(??_operate+1)^0,c
  3435                           
  3436                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3437                           ; Switch size 1, requested type "simple"
  3438                           ; Number of cases is 1, Range of values is 0 to 0
  3439                           ; switch strategies available:
  3440                           ; Name         Instructions Cycles
  3441                           ; simple_byte            4     3 (average)
  3442                           ;	Chosen strategy is simple_byte
  3443  007E88  5028               	movf	(??_operate+1)^0,w,c
  3444  007E8A  0A00               	xorlw	0	; case 0
  3445  007E8C  B4D8               	btfsc	status,2,c
  3446  007E8E  EF4B  F03F         	goto	l2835
  3447  007E92  EF62  F03F         	goto	l88
  3448  007E96                     l2835:
  3449                           
  3450                           ; Switch size 1, requested type "simple"
  3451                           ; Number of cases is 5, Range of values is 68 to 115
  3452                           ; switch strategies available:
  3453                           ; Name         Instructions Cycles
  3454                           ; simple_byte           16     9 (average)
  3455                           ;	Chosen strategy is simple_byte
  3456  007E96  5027               	movf	??_operate^0,w,c
  3457  007E98  0A44               	xorlw	68	; case 68
  3458  007E9A  B4D8               	btfsc	status,2,c
  3459  007E9C  EF7A  F03D         	goto	l70
  3460  007EA0  0A08               	xorlw	8	; case 76
  3461  007EA2  B4D8               	btfsc	status,2,c
  3462  007EA4  EF32  F03F         	goto	l2515
  3463  007EA8  0A1F               	xorlw	31	; case 83
  3464  007EAA  B4D8               	btfsc	status,2,c
  3465  007EAC  EFAB  F03D         	goto	l75
  3466  007EB0  0A06               	xorlw	6	; case 85
  3467  007EB2  B4D8               	btfsc	status,2,c
  3468  007EB4  EF37  F03D         	goto	l64
  3469  007EB8  0A26               	xorlw	38	; case 115
  3470  007EBA  B4D8               	btfsc	status,2,c
  3471  007EBC  EF39  F03F         	goto	l2519
  3472  007EC0  EF62  F03F         	goto	l88
  3473  007EC4                     l88:
  3474  007EC4  0012               	return		;funcret
  3475  007EC6                     __end_of_operate:
  3476                           	callstack 0
  3477                           
  3478 ;; *************** function _verifyGoal *****************
  3479 ;; Defined at:
  3480 ;;		line 126 in file "main.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  i               2   27[COMRAM] int 
  3485 ;;  test            2   31[COMRAM] int 
  3486 ;;  j               2   29[COMRAM] int 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3496 ;;      Params:         0       0       0       0       0       0       0
  3497 ;;      Locals:         6       0       0       0       0       0       0
  3498 ;;      Temps:          1       0       0       0       0       0       0
  3499 ;;      Totals:         7       0       0       0       0       0       0
  3500 ;;Total ram usage:        7 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; Hardware stack levels required when called: 1
  3503 ;; This function calls:
  3504 ;;		_LigarLed
  3505 ;;		___aldiv
  3506 ;;		___lmul
  3507 ;; This function is called by:
  3508 ;;		_operate
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text15
  3513  0071AA                     __ptext15:
  3514                           	callstack 0
  3515  0071AA                     _verifyGoal:
  3516                           	callstack 27
  3517  0071AA                     
  3518                           ;main.c: 127:     if (studyGoal != 0) {
  3519  0071AA  5043               	movf	_studyGoal^0,w,c
  3520  0071AC  1044               	iorwf	(_studyGoal+1)^0,w,c
  3521  0071AE  1045               	iorwf	(_studyGoal+2)^0,w,c
  3522  0071B0  1046               	iorwf	(_studyGoal+3)^0,w,c
  3523  0071B2  B4D8               	btfsc	status,2,c
  3524  0071B4  EFDE  F038         	goto	u1791
  3525  0071B8  EFE0  F038         	goto	u1790
  3526  0071BC                     u1791:
  3527  0071BC  EFC4  F039         	goto	l123
  3528  0071C0                     u1790:
  3529  0071C0                     
  3530                           ;main.c: 128:         int test = (totalStudied * 100) / (studyGoal * 3600);
  3531  0071C0  C04B  F001         	movff	_totalStudied,___lmul@multiplier
  3532  0071C4  C04C  F002         	movff	_totalStudied+1,___lmul@multiplier+1
  3533  0071C8  C04D  F003         	movff	_totalStudied+2,___lmul@multiplier+2
  3534  0071CC  C04E  F004         	movff	_totalStudied+3,___lmul@multiplier+3
  3535  0071D0  0E64               	movlw	100
  3536  0071D2  6E05               	movwf	___lmul@multiplicand^0,c
  3537  0071D4  0E00               	movlw	0
  3538  0071D6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3539  0071D8  0E00               	movlw	0
  3540  0071DA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3541  0071DC  0E00               	movlw	0
  3542  0071DE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3543  0071E0  EC69  F033         	call	___lmul	;wreg free
  3544  0071E4  C001  F00D         	movff	?___lmul,___aldiv@dividend
  3545  0071E8  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  3546  0071EC  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  3547  0071F0  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  3548  0071F4  C043  F001         	movff	_studyGoal,___lmul@multiplier
  3549  0071F8  C044  F002         	movff	_studyGoal+1,___lmul@multiplier+1
  3550  0071FC  C045  F003         	movff	_studyGoal+2,___lmul@multiplier+2
  3551  007200  C046  F004         	movff	_studyGoal+3,___lmul@multiplier+3
  3552  007204  0E10               	movlw	16
  3553  007206  6E05               	movwf	___lmul@multiplicand^0,c
  3554  007208  0E0E               	movlw	14
  3555  00720A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3556  00720C  0E00               	movlw	0
  3557  00720E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3558  007210  0E00               	movlw	0
  3559  007212  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3560  007214  EC69  F033         	call	___lmul	;wreg free
  3561  007218  C001  F011         	movff	?___lmul,___aldiv@divisor
  3562  00721C  C002  F012         	movff	?___lmul+1,___aldiv@divisor+1
  3563  007220  C003  F013         	movff	?___lmul+2,___aldiv@divisor+2
  3564  007224  C004  F014         	movff	?___lmul+3,___aldiv@divisor+3
  3565  007228  EC49  F036         	call	___aldiv	;wreg free
  3566  00722C  C00D  F020         	movff	?___aldiv,verifyGoal@test
  3567  007230  C00E  F021         	movff	?___aldiv+1,verifyGoal@test+1
  3568  007234                     
  3569                           ;main.c: 131:         if (test > 87) {
  3570  007234  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3571  007236  EF26  F039         	goto	u1801
  3572  00723A  5021               	movf	(verifyGoal@test+1)^0,w,c
  3573  00723C  E109               	bnz	u1800
  3574  00723E  0E58               	movlw	88
  3575  007240  5C20               	subwf	verifyGoal@test^0,w,c
  3576  007242  A0D8               	btfss	status,0,c
  3577  007244  EF26  F039         	goto	u1801
  3578  007248  EF28  F039         	goto	u1800
  3579  00724C                     u1801:
  3580  00724C  EF2E  F039         	goto	l2323
  3581  007250                     u1800:
  3582  007250                     
  3583                           ;main.c: 132:             j = 8;
  3584  007250  0E00               	movlw	0
  3585  007252  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3586  007254  0E08               	movlw	8
  3587  007256  6E1E               	movwf	verifyGoal@j^0,c
  3588                           
  3589                           ;main.c: 133:         } else if (test >= 75) {
  3590  007258  EFAA  F039         	goto	l107
  3591  00725C                     l2323:
  3592  00725C  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3593  00725E  EF3A  F039         	goto	u1811
  3594  007262  5021               	movf	(verifyGoal@test+1)^0,w,c
  3595  007264  E109               	bnz	u1810
  3596  007266  0E4B               	movlw	75
  3597  007268  5C20               	subwf	verifyGoal@test^0,w,c
  3598  00726A  A0D8               	btfss	status,0,c
  3599  00726C  EF3A  F039         	goto	u1811
  3600  007270  EF3C  F039         	goto	u1810
  3601  007274                     u1811:
  3602  007274  EF42  F039         	goto	l2327
  3603  007278                     u1810:
  3604  007278                     
  3605                           ;main.c: 134:             j = 7;
  3606  007278  0E00               	movlw	0
  3607  00727A  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3608  00727C  0E07               	movlw	7
  3609  00727E  6E1E               	movwf	verifyGoal@j^0,c
  3610                           
  3611                           ;main.c: 135:         } else if (test >= 62) {
  3612  007280  EFAA  F039         	goto	l107
  3613  007284                     l2327:
  3614  007284  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3615  007286  EF4E  F039         	goto	u1821
  3616  00728A  5021               	movf	(verifyGoal@test+1)^0,w,c
  3617  00728C  E109               	bnz	u1820
  3618  00728E  0E3E               	movlw	62
  3619  007290  5C20               	subwf	verifyGoal@test^0,w,c
  3620  007292  A0D8               	btfss	status,0,c
  3621  007294  EF4E  F039         	goto	u1821
  3622  007298  EF50  F039         	goto	u1820
  3623  00729C                     u1821:
  3624  00729C  EF56  F039         	goto	l2331
  3625  0072A0                     u1820:
  3626  0072A0                     
  3627                           ;main.c: 136:             j = 6;
  3628  0072A0  0E00               	movlw	0
  3629  0072A2  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3630  0072A4  0E06               	movlw	6
  3631  0072A6  6E1E               	movwf	verifyGoal@j^0,c
  3632                           
  3633                           ;main.c: 137:         } else if (test >= 50) {
  3634  0072A8  EFAA  F039         	goto	l107
  3635  0072AC                     l2331:
  3636  0072AC  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3637  0072AE  EF62  F039         	goto	u1831
  3638  0072B2  5021               	movf	(verifyGoal@test+1)^0,w,c
  3639  0072B4  E109               	bnz	u1830
  3640  0072B6  0E32               	movlw	50
  3641  0072B8  5C20               	subwf	verifyGoal@test^0,w,c
  3642  0072BA  A0D8               	btfss	status,0,c
  3643  0072BC  EF62  F039         	goto	u1831
  3644  0072C0  EF64  F039         	goto	u1830
  3645  0072C4                     u1831:
  3646  0072C4  EF6A  F039         	goto	l2335
  3647  0072C8                     u1830:
  3648  0072C8                     
  3649                           ;main.c: 138:             j = 5;
  3650  0072C8  0E00               	movlw	0
  3651  0072CA  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3652  0072CC  0E05               	movlw	5
  3653  0072CE  6E1E               	movwf	verifyGoal@j^0,c
  3654                           
  3655                           ;main.c: 139:         } else if (test >= 37) {
  3656  0072D0  EFAA  F039         	goto	l107
  3657  0072D4                     l2335:
  3658  0072D4  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3659  0072D6  EF76  F039         	goto	u1841
  3660  0072DA  5021               	movf	(verifyGoal@test+1)^0,w,c
  3661  0072DC  E109               	bnz	u1840
  3662  0072DE  0E25               	movlw	37
  3663  0072E0  5C20               	subwf	verifyGoal@test^0,w,c
  3664  0072E2  A0D8               	btfss	status,0,c
  3665  0072E4  EF76  F039         	goto	u1841
  3666  0072E8  EF78  F039         	goto	u1840
  3667  0072EC                     u1841:
  3668  0072EC  EF7E  F039         	goto	l2339
  3669  0072F0                     u1840:
  3670  0072F0                     
  3671                           ;main.c: 140:             j = 4;
  3672  0072F0  0E00               	movlw	0
  3673  0072F2  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3674  0072F4  0E04               	movlw	4
  3675  0072F6  6E1E               	movwf	verifyGoal@j^0,c
  3676                           
  3677                           ;main.c: 141:         } else if (test >= 25) {
  3678  0072F8  EFAA  F039         	goto	l107
  3679  0072FC                     l2339:
  3680  0072FC  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3681  0072FE  EF8A  F039         	goto	u1851
  3682  007302  5021               	movf	(verifyGoal@test+1)^0,w,c
  3683  007304  E109               	bnz	u1850
  3684  007306  0E19               	movlw	25
  3685  007308  5C20               	subwf	verifyGoal@test^0,w,c
  3686  00730A  A0D8               	btfss	status,0,c
  3687  00730C  EF8A  F039         	goto	u1851
  3688  007310  EF8C  F039         	goto	u1850
  3689  007314                     u1851:
  3690  007314  EF92  F039         	goto	l2343
  3691  007318                     u1850:
  3692  007318                     
  3693                           ;main.c: 142:             j = 3;
  3694  007318  0E00               	movlw	0
  3695  00731A  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3696  00731C  0E03               	movlw	3
  3697  00731E  6E1E               	movwf	verifyGoal@j^0,c
  3698                           
  3699                           ;main.c: 143:         } else if (test >= 12) {
  3700  007320  EFAA  F039         	goto	l107
  3701  007324                     l2343:
  3702  007324  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3703  007326  EF9E  F039         	goto	u1861
  3704  00732A  5021               	movf	(verifyGoal@test+1)^0,w,c
  3705  00732C  E109               	bnz	u1860
  3706  00732E  0E0C               	movlw	12
  3707  007330  5C20               	subwf	verifyGoal@test^0,w,c
  3708  007332  A0D8               	btfss	status,0,c
  3709  007334  EF9E  F039         	goto	u1861
  3710  007338  EFA0  F039         	goto	u1860
  3711  00733C                     u1861:
  3712  00733C  EFA6  F039         	goto	l2347
  3713  007340                     u1860:
  3714  007340                     
  3715                           ;main.c: 144:             j = 2;
  3716  007340  0E00               	movlw	0
  3717  007342  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3718  007344  0E02               	movlw	2
  3719  007346  6E1E               	movwf	verifyGoal@j^0,c
  3720                           
  3721                           ;main.c: 145:         } else {
  3722  007348  EFAA  F039         	goto	l107
  3723  00734C                     l2347:
  3724                           
  3725                           ;main.c: 146:             j = 1;
  3726  00734C  0E00               	movlw	0
  3727  00734E  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3728  007350  0E01               	movlw	1
  3729  007352  6E1E               	movwf	verifyGoal@j^0,c
  3730  007354                     l107:
  3731                           
  3732                           ;main.c: 149:         for (int i = 0; i < j; i++) {
  3733  007354  0E00               	movlw	0
  3734  007356  6E1D               	movwf	(verifyGoal@i+1)^0,c
  3735  007358  0E00               	movlw	0
  3736  00735A  6E1C               	movwf	verifyGoal@i^0,c
  3737  00735C  EFB5  F039         	goto	l2353
  3738  007360                     l2349:
  3739                           
  3740                           ;main.c: 150:             LigarLed(i);
  3741  007360  501C               	movf	verifyGoal@i^0,w,c
  3742  007362  EC3F  F031         	call	_LigarLed
  3743  007366                     
  3744                           ;main.c: 151:         }
  3745  007366  4A1C               	infsnz	verifyGoal@i^0,f,c
  3746  007368  2A1D               	incf	(verifyGoal@i+1)^0,f,c
  3747  00736A                     l2353:
  3748  00736A  501E               	movf	verifyGoal@j^0,w,c
  3749  00736C  5C1C               	subwf	verifyGoal@i^0,w,c
  3750  00736E  501D               	movf	(verifyGoal@i+1)^0,w,c
  3751  007370  0A80               	xorlw	128
  3752  007372  6E1B               	movwf	??_verifyGoal^0,c
  3753  007374  501F               	movf	(verifyGoal@j+1)^0,w,c
  3754  007376  0A80               	xorlw	128
  3755  007378  581B               	subwfb	??_verifyGoal^0,w,c
  3756  00737A  A0D8               	btfss	status,0,c
  3757  00737C  EFC2  F039         	goto	u1871
  3758  007380  EFC4  F039         	goto	u1870
  3759  007384                     u1871:
  3760  007384  EFB0  F039         	goto	l2349
  3761  007388                     u1870:
  3762  007388                     l123:
  3763  007388  0012               	return		;funcret
  3764  00738A                     __end_of_verifyGoal:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function ___lmul *****************
  3768 ;; Defined at:
  3769 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  multiplier      4    0[COMRAM] unsigned long 
  3772 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  product         4    8[COMRAM] unsigned long 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  4    0[COMRAM] unsigned long 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3784 ;;      Params:         8       0       0       0       0       0       0
  3785 ;;      Locals:         4       0       0       0       0       0       0
  3786 ;;      Temps:          0       0       0       0       0       0       0
  3787 ;;      Totals:        12       0       0       0       0       0       0
  3788 ;;Total ram usage:       12 bytes
  3789 ;; Hardware stack levels used: 1
  3790 ;; This function calls:
  3791 ;;		Nothing
  3792 ;; This function is called by:
  3793 ;;		_verifyGoal
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797                           	psect	text16
  3798  0066D2                     __ptext16:
  3799                           	callstack 0
  3800  0066D2                     ___lmul:
  3801                           	callstack 27
  3802  0066D2  0E00               	movlw	0
  3803  0066D4  6E09               	movwf	___lmul@product^0,c
  3804  0066D6  0E00               	movlw	0
  3805  0066D8  6E0A               	movwf	(___lmul@product+1)^0,c
  3806  0066DA  0E00               	movlw	0
  3807  0066DC  6E0B               	movwf	(___lmul@product+2)^0,c
  3808  0066DE  0E00               	movlw	0
  3809  0066E0  6E0C               	movwf	(___lmul@product+3)^0,c
  3810  0066E2                     l2113:
  3811  0066E2  A001               	btfss	___lmul@multiplier^0,0,c
  3812  0066E4  EF76  F033         	goto	u1531
  3813  0066E8  EF78  F033         	goto	u1530
  3814  0066EC                     u1531:
  3815  0066EC  EF80  F033         	goto	l2117
  3816  0066F0                     u1530:
  3817  0066F0  5005               	movf	___lmul@multiplicand^0,w,c
  3818  0066F2  2609               	addwf	___lmul@product^0,f,c
  3819  0066F4  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  3820  0066F6  220A               	addwfc	(___lmul@product+1)^0,f,c
  3821  0066F8  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  3822  0066FA  220B               	addwfc	(___lmul@product+2)^0,f,c
  3823  0066FC  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  3824  0066FE  220C               	addwfc	(___lmul@product+3)^0,f,c
  3825  006700                     l2117:
  3826  006700  90D8               	bcf	status,0,c
  3827  006702  3605               	rlcf	___lmul@multiplicand^0,f,c
  3828  006704  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  3829  006706  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  3830  006708  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  3831  00670A  90D8               	bcf	status,0,c
  3832  00670C  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  3833  00670E  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  3834  006710  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  3835  006712  3201               	rrcf	___lmul@multiplier^0,f,c
  3836  006714  5001               	movf	___lmul@multiplier^0,w,c
  3837  006716  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  3838  006718  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  3839  00671A  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  3840  00671C  A4D8               	btfss	status,2,c
  3841  00671E  EF93  F033         	goto	u1541
  3842  006722  EF95  F033         	goto	u1540
  3843  006726                     u1541:
  3844  006726  EF71  F033         	goto	l2113
  3845  00672A                     u1540:
  3846  00672A  C009  F001         	movff	___lmul@product,?___lmul
  3847  00672E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3848  006732  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3849  006736  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3850  00673A  0012               	return		;funcret
  3851  00673C                     __end_of___lmul:
  3852                           	callstack 0
  3853                           
  3854 ;; *************** function ___aldiv *****************
  3855 ;; Defined at:
  3856 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  dividend        4   12[COMRAM] long 
  3859 ;;  divisor         4   16[COMRAM] long 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  quotient        4   22[COMRAM] long 
  3862 ;;  sign            1   21[COMRAM] unsigned char 
  3863 ;;  counter         1   20[COMRAM] unsigned char 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  4   12[COMRAM] long 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3873 ;;      Params:         8       0       0       0       0       0       0
  3874 ;;      Locals:         6       0       0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0
  3876 ;;      Totals:        14       0       0       0       0       0       0
  3877 ;;Total ram usage:       14 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; This function calls:
  3880 ;;		Nothing
  3881 ;; This function is called by:
  3882 ;;		_operate
  3883 ;;		_verifyGoal
  3884 ;;		_main
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text17
  3889  006C92                     __ptext17:
  3890                           	callstack 0
  3891  006C92                     ___aldiv:
  3892                           	callstack 30
  3893  006C92  0E00               	movlw	0
  3894  006C94  6E16               	movwf	___aldiv@sign^0,c
  3895  006C96  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
  3896  006C98  EF52  F036         	goto	u1550
  3897  006C9C  EF50  F036         	goto	u1551
  3898  006CA0                     u1551:
  3899  006CA0  EF5C  F036         	goto	l2129
  3900  006CA4                     u1550:
  3901  006CA4  1E14               	comf	(___aldiv@divisor+3)^0,f,c
  3902  006CA6  1E13               	comf	(___aldiv@divisor+2)^0,f,c
  3903  006CA8  1E12               	comf	(___aldiv@divisor+1)^0,f,c
  3904  006CAA  6C11               	negf	___aldiv@divisor^0,c
  3905  006CAC  0E00               	movlw	0
  3906  006CAE  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
  3907  006CB0  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
  3908  006CB2  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
  3909  006CB4  0E01               	movlw	1
  3910  006CB6  6E16               	movwf	___aldiv@sign^0,c
  3911  006CB8                     l2129:
  3912  006CB8  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
  3913  006CBA  EF63  F036         	goto	u1560
  3914  006CBE  EF61  F036         	goto	u1561
  3915  006CC2                     u1561:
  3916  006CC2  EF6D  F036         	goto	l2135
  3917  006CC6                     u1560:
  3918  006CC6  1E10               	comf	(___aldiv@dividend+3)^0,f,c
  3919  006CC8  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
  3920  006CCA  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
  3921  006CCC  6C0D               	negf	___aldiv@dividend^0,c
  3922  006CCE  0E00               	movlw	0
  3923  006CD0  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
  3924  006CD2  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
  3925  006CD4  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
  3926  006CD6  0E01               	movlw	1
  3927  006CD8  1A16               	xorwf	___aldiv@sign^0,f,c
  3928  006CDA                     l2135:
  3929  006CDA  0E00               	movlw	0
  3930  006CDC  6E17               	movwf	___aldiv@quotient^0,c
  3931  006CDE  0E00               	movlw	0
  3932  006CE0  6E18               	movwf	(___aldiv@quotient+1)^0,c
  3933  006CE2  0E00               	movlw	0
  3934  006CE4  6E19               	movwf	(___aldiv@quotient+2)^0,c
  3935  006CE6  0E00               	movlw	0
  3936  006CE8  6E1A               	movwf	(___aldiv@quotient+3)^0,c
  3937  006CEA  5011               	movf	___aldiv@divisor^0,w,c
  3938  006CEC  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
  3939  006CEE  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
  3940  006CF0  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
  3941  006CF2  B4D8               	btfsc	status,2,c
  3942  006CF4  EF7E  F036         	goto	u1571
  3943  006CF8  EF80  F036         	goto	u1570
  3944  006CFC                     u1571:
  3945  006CFC  EFB6  F036         	goto	l2157
  3946  006D00                     u1570:
  3947  006D00  0E01               	movlw	1
  3948  006D02  6E15               	movwf	___aldiv@counter^0,c
  3949  006D04  EF8A  F036         	goto	l2143
  3950  006D08                     l2141:
  3951  006D08  90D8               	bcf	status,0,c
  3952  006D0A  3611               	rlcf	___aldiv@divisor^0,f,c
  3953  006D0C  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
  3954  006D0E  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
  3955  006D10  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
  3956  006D12  2A15               	incf	___aldiv@counter^0,f,c
  3957  006D14                     l2143:
  3958  006D14  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
  3959  006D16  EF8F  F036         	goto	u1581
  3960  006D1A  EF91  F036         	goto	u1580
  3961  006D1E                     u1581:
  3962  006D1E  EF84  F036         	goto	l2141
  3963  006D22                     u1580:
  3964  006D22                     l2145:
  3965  006D22  90D8               	bcf	status,0,c
  3966  006D24  3617               	rlcf	___aldiv@quotient^0,f,c
  3967  006D26  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
  3968  006D28  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
  3969  006D2A  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
  3970  006D2C  5011               	movf	___aldiv@divisor^0,w,c
  3971  006D2E  5C0D               	subwf	___aldiv@dividend^0,w,c
  3972  006D30  5012               	movf	(___aldiv@divisor+1)^0,w,c
  3973  006D32  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
  3974  006D34  5013               	movf	(___aldiv@divisor+2)^0,w,c
  3975  006D36  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
  3976  006D38  5014               	movf	(___aldiv@divisor+3)^0,w,c
  3977  006D3A  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
  3978  006D3C  A0D8               	btfss	status,0,c
  3979  006D3E  EFA3  F036         	goto	u1591
  3980  006D42  EFA5  F036         	goto	u1590
  3981  006D46                     u1591:
  3982  006D46  EFAE  F036         	goto	l2153
  3983  006D4A                     u1590:
  3984  006D4A  5011               	movf	___aldiv@divisor^0,w,c
  3985  006D4C  5E0D               	subwf	___aldiv@dividend^0,f,c
  3986  006D4E  5012               	movf	(___aldiv@divisor+1)^0,w,c
  3987  006D50  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
  3988  006D52  5013               	movf	(___aldiv@divisor+2)^0,w,c
  3989  006D54  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
  3990  006D56  5014               	movf	(___aldiv@divisor+3)^0,w,c
  3991  006D58  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
  3992  006D5A  8017               	bsf	___aldiv@quotient^0,0,c
  3993  006D5C                     l2153:
  3994  006D5C  90D8               	bcf	status,0,c
  3995  006D5E  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
  3996  006D60  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
  3997  006D62  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
  3998  006D64  3211               	rrcf	___aldiv@divisor^0,f,c
  3999  006D66  2E15               	decfsz	___aldiv@counter^0,f,c
  4000  006D68  EF91  F036         	goto	l2145
  4001  006D6C                     l2157:
  4002  006D6C  5016               	movf	___aldiv@sign^0,w,c
  4003  006D6E  B4D8               	btfsc	status,2,c
  4004  006D70  EFBC  F036         	goto	u1601
  4005  006D74  EFBE  F036         	goto	u1600
  4006  006D78                     u1601:
  4007  006D78  EFC6  F036         	goto	l2161
  4008  006D7C                     u1600:
  4009  006D7C  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
  4010  006D7E  1E19               	comf	(___aldiv@quotient+2)^0,f,c
  4011  006D80  1E18               	comf	(___aldiv@quotient+1)^0,f,c
  4012  006D82  6C17               	negf	___aldiv@quotient^0,c
  4013  006D84  0E00               	movlw	0
  4014  006D86  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
  4015  006D88  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
  4016  006D8A  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
  4017  006D8C                     l2161:
  4018  006D8C  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  4019  006D90  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  4020  006D94  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  4021  006D98  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  4022  006D9C  0012               	return		;funcret
  4023  006D9E                     __end_of___aldiv:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _LigarLed *****************
  4027 ;; Defined at:
  4028 ;;		line 15 in file "led.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  num             1    wreg     unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  num             1    0[COMRAM] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4042 ;;      Params:         0       0       0       0       0       0       0
  4043 ;;      Locals:         1       0       0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0
  4045 ;;      Totals:         1       0       0       0       0       0       0
  4046 ;;Total ram usage:        1 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_verifyGoal
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text18
  4056  00627E                     __ptext18:
  4057                           	callstack 0
  4058  00627E                     _LigarLed:
  4059                           	callstack 27
  4060                           
  4061                           ;incstack = 0
  4062                           ;LigarLed@num stored from wreg
  4063  00627E  6E01               	movwf	LigarLed@num^0,c
  4064  006280                     
  4065                           ;led.c: 16:     (*(volatile __near unsigned char*) 0xF83) |= led[num];
  4066  006280  0E63               	movlw	low _led
  4067  006282  2401               	addwf	LigarLed@num^0,w,c
  4068  006284  6ED9               	movwf	fsr2l,c
  4069  006286  6ADA               	clrf	fsr2h,c
  4070  006288  0E00               	movlw	high _led
  4071  00628A  22DA               	addwfc	fsr2h,f,c
  4072  00628C  50DF               	movf	indf2,w,c
  4073  00628E  1283               	iorwf	131,f,c	;volatile
  4074  006290  0012               	return		;funcret
  4075  006292                     __end_of_LigarLed:
  4076                           	callstack 0
  4077                           
  4078 ;; *************** function _ssdUpdate *****************
  4079 ;; Defined at:
  4080 ;;		line 50 in file "ssd.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4094 ;;      Params:         0       0       0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0
  4096 ;;      Temps:          2       0       0       0       0       0       0
  4097 ;;      Totals:         2       0       0       0       0       0       0
  4098 ;;Total ram usage:        2 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; Hardware stack levels required when called: 3
  4101 ;; This function calls:
  4102 ;;		_digitalWrite
  4103 ;;		_soWrite
  4104 ;; This function is called by:
  4105 ;;		_operate
  4106 ;;		_main
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text19
  4111  00703E                     __ptext19:
  4112                           	callstack 0
  4113  00703E                     _ssdUpdate:
  4114                           	callstack 27
  4115  00703E                     
  4116                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  4117  00703E  0E00               	movlw	0
  4118  007040  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4119  007042  0E18               	movlw	24
  4120  007044  6E01               	movwf	digitalWrite@pin^0,c
  4121  007046  0E00               	movlw	0
  4122  007048  6E04               	movwf	(digitalWrite@value+1)^0,c
  4123  00704A  0E00               	movlw	0
  4124  00704C  6E03               	movwf	digitalWrite@value^0,c
  4125  00704E  ECE6  F03A         	call	_digitalWrite	;wreg free
  4126                           
  4127                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  4128  007052  0E00               	movlw	0
  4129  007054  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4130  007056  0E19               	movlw	25
  4131  007058  6E01               	movwf	digitalWrite@pin^0,c
  4132  00705A  0E00               	movlw	0
  4133  00705C  6E04               	movwf	(digitalWrite@value+1)^0,c
  4134  00705E  0E00               	movlw	0
  4135  007060  6E03               	movwf	digitalWrite@value^0,c
  4136  007062  ECE6  F03A         	call	_digitalWrite	;wreg free
  4137                           
  4138                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  4139  007066  0E00               	movlw	0
  4140  007068  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4141  00706A  0E1A               	movlw	26
  4142  00706C  6E01               	movwf	digitalWrite@pin^0,c
  4143  00706E  0E00               	movlw	0
  4144  007070  6E04               	movwf	(digitalWrite@value+1)^0,c
  4145  007072  0E00               	movlw	0
  4146  007074  6E03               	movwf	digitalWrite@value^0,c
  4147  007076  ECE6  F03A         	call	_digitalWrite	;wreg free
  4148                           
  4149                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  4150  00707A  0E00               	movlw	0
  4151  00707C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4152  00707E  0E1B               	movlw	27
  4153  007080  6E01               	movwf	digitalWrite@pin^0,c
  4154  007082  0E00               	movlw	0
  4155  007084  6E04               	movwf	(digitalWrite@value+1)^0,c
  4156  007086  0E00               	movlw	0
  4157  007088  6E03               	movwf	digitalWrite@value^0,c
  4158  00708A  ECE6  F03A         	call	_digitalWrite	;wreg free
  4159                           
  4160                           ;ssd.c: 60:     soWrite(0x00);
  4161  00708E  0E00               	movlw	0
  4162  007090  6E08               	movwf	(soWrite@value+1)^0,c
  4163  007092  0E00               	movlw	0
  4164  007094  6E07               	movwf	soWrite@value^0,c
  4165  007096  EC6B  F032         	call	_soWrite	;wreg free
  4166                           
  4167                           ;ssd.c: 62:     switch (display)
  4168  00709A  EFB7  F038         	goto	l2307
  4169  00709E                     l2279:
  4170                           
  4171                           ;ssd.c: 65:             soWrite(valor[v0]);
  4172  00709E  0EC7               	movlw	low _valor
  4173  0070A0  245E               	addwf	_v0^0,w,c
  4174  0070A2  6EF6               	movwf	tblptrl,c
  4175  0070A4  6AF7               	clrf	tblptrh,c
  4176  0070A6  0E7E               	movlw	high _valor
  4177  0070A8  22F7               	addwfc	tblptrh,f,c
  4178  0070AA                     	if	0	;There are less than 3 active tblptr bytes
  4179  0070AA                     	endif
  4180  0070AA  0008               	tblrd		*
  4181  0070AC  50F5               	movf	tablat,w,c
  4182  0070AE  6E07               	movwf	soWrite@value^0,c
  4183  0070B0  6A08               	clrf	(soWrite@value+1)^0,c
  4184  0070B2  EC6B  F032         	call	_soWrite	;wreg free
  4185  0070B6                     
  4186                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  4187  0070B6  0E00               	movlw	0
  4188  0070B8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4189  0070BA  0E18               	movlw	24
  4190  0070BC  6E01               	movwf	digitalWrite@pin^0,c
  4191  0070BE  0E00               	movlw	0
  4192  0070C0  6E04               	movwf	(digitalWrite@value+1)^0,c
  4193  0070C2  0E01               	movlw	1
  4194  0070C4  6E03               	movwf	digitalWrite@value^0,c
  4195  0070C6  ECE6  F03A         	call	_digitalWrite	;wreg free
  4196  0070CA                     
  4197                           ;ssd.c: 67:             display = 1;
  4198  0070CA  0E01               	movlw	1
  4199  0070CC  6E5F               	movwf	_display^0,c
  4200                           
  4201                           ;ssd.c: 68:             break;
  4202  0070CE  EFD4  F038         	goto	l294
  4203  0070D2                     l2285:
  4204                           
  4205                           ;ssd.c: 71:             soWrite(valor[v1]);
  4206  0070D2  0EC7               	movlw	low _valor
  4207  0070D4  245D               	addwf	_v1^0,w,c
  4208  0070D6  6EF6               	movwf	tblptrl,c
  4209  0070D8  6AF7               	clrf	tblptrh,c
  4210  0070DA  0E7E               	movlw	high _valor
  4211  0070DC  22F7               	addwfc	tblptrh,f,c
  4212  0070DE                     	if	0	;There are less than 3 active tblptr bytes
  4213  0070DE                     	endif
  4214  0070DE  0008               	tblrd		*
  4215  0070E0  50F5               	movf	tablat,w,c
  4216  0070E2  6E07               	movwf	soWrite@value^0,c
  4217  0070E4  6A08               	clrf	(soWrite@value+1)^0,c
  4218  0070E6  EC6B  F032         	call	_soWrite	;wreg free
  4219  0070EA                     
  4220                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  4221  0070EA  0E00               	movlw	0
  4222  0070EC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4223  0070EE  0E19               	movlw	25
  4224  0070F0  6E01               	movwf	digitalWrite@pin^0,c
  4225  0070F2  0E00               	movlw	0
  4226  0070F4  6E04               	movwf	(digitalWrite@value+1)^0,c
  4227  0070F6  0E01               	movlw	1
  4228  0070F8  6E03               	movwf	digitalWrite@value^0,c
  4229  0070FA  ECE6  F03A         	call	_digitalWrite	;wreg free
  4230  0070FE                     
  4231                           ;ssd.c: 73:             display = 2;
  4232  0070FE  0E02               	movlw	2
  4233  007100  6E5F               	movwf	_display^0,c
  4234                           
  4235                           ;ssd.c: 74:             break;
  4236  007102  EFD4  F038         	goto	l294
  4237  007106                     l2291:
  4238                           
  4239                           ;ssd.c: 77:             soWrite(valor[v2]);
  4240  007106  0EC7               	movlw	low _valor
  4241  007108  245C               	addwf	_v2^0,w,c
  4242  00710A  6EF6               	movwf	tblptrl,c
  4243  00710C  6AF7               	clrf	tblptrh,c
  4244  00710E  0E7E               	movlw	high _valor
  4245  007110  22F7               	addwfc	tblptrh,f,c
  4246  007112                     	if	0	;There are less than 3 active tblptr bytes
  4247  007112                     	endif
  4248  007112  0008               	tblrd		*
  4249  007114  50F5               	movf	tablat,w,c
  4250  007116  6E07               	movwf	soWrite@value^0,c
  4251  007118  6A08               	clrf	(soWrite@value+1)^0,c
  4252  00711A  EC6B  F032         	call	_soWrite	;wreg free
  4253  00711E                     
  4254                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  4255  00711E  0E00               	movlw	0
  4256  007120  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4257  007122  0E1A               	movlw	26
  4258  007124  6E01               	movwf	digitalWrite@pin^0,c
  4259  007126  0E00               	movlw	0
  4260  007128  6E04               	movwf	(digitalWrite@value+1)^0,c
  4261  00712A  0E01               	movlw	1
  4262  00712C  6E03               	movwf	digitalWrite@value^0,c
  4263  00712E  ECE6  F03A         	call	_digitalWrite	;wreg free
  4264  007132                     
  4265                           ;ssd.c: 79:             display = 3;
  4266  007132  0E03               	movlw	3
  4267  007134  6E5F               	movwf	_display^0,c
  4268                           
  4269                           ;ssd.c: 80:             break;
  4270  007136  EFD4  F038         	goto	l294
  4271  00713A                     l2297:
  4272                           
  4273                           ;ssd.c: 83:             soWrite(valor[v3]);
  4274  00713A  0EC7               	movlw	low _valor
  4275  00713C  245B               	addwf	_v3^0,w,c
  4276  00713E  6EF6               	movwf	tblptrl,c
  4277  007140  6AF7               	clrf	tblptrh,c
  4278  007142  0E7E               	movlw	high _valor
  4279  007144  22F7               	addwfc	tblptrh,f,c
  4280  007146                     	if	0	;There are less than 3 active tblptr bytes
  4281  007146                     	endif
  4282  007146  0008               	tblrd		*
  4283  007148  50F5               	movf	tablat,w,c
  4284  00714A  6E07               	movwf	soWrite@value^0,c
  4285  00714C  6A08               	clrf	(soWrite@value+1)^0,c
  4286  00714E  EC6B  F032         	call	_soWrite	;wreg free
  4287  007152                     
  4288                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  4289  007152  0E00               	movlw	0
  4290  007154  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4291  007156  0E1B               	movlw	27
  4292  007158  6E01               	movwf	digitalWrite@pin^0,c
  4293  00715A  0E00               	movlw	0
  4294  00715C  6E04               	movwf	(digitalWrite@value+1)^0,c
  4295  00715E  0E01               	movlw	1
  4296  007160  6E03               	movwf	digitalWrite@value^0,c
  4297  007162  ECE6  F03A         	call	_digitalWrite	;wreg free
  4298  007166                     l2301:
  4299                           
  4300                           ;ssd.c: 85:             display = 0;
  4301  007166  0E00               	movlw	0
  4302  007168  6E5F               	movwf	_display^0,c
  4303                           
  4304                           ;ssd.c: 86:             break;
  4305  00716A  EFD4  F038         	goto	l294
  4306  00716E                     l2307:
  4307  00716E  505F               	movf	_display^0,w,c
  4308  007170  6E0A               	movwf	??_ssdUpdate^0,c
  4309  007172  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  4310                           
  4311                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4312                           ; Switch size 1, requested type "simple"
  4313                           ; Number of cases is 1, Range of values is 0 to 0
  4314                           ; switch strategies available:
  4315                           ; Name         Instructions Cycles
  4316                           ; simple_byte            4     3 (average)
  4317                           ;	Chosen strategy is simple_byte
  4318  007174  500B               	movf	(??_ssdUpdate+1)^0,w,c
  4319  007176  0A00               	xorlw	0	; case 0
  4320  007178  B4D8               	btfsc	status,2,c
  4321  00717A  EFC1  F038         	goto	l2837
  4322  00717E  EFB3  F038         	goto	l2301
  4323  007182                     l2837:
  4324                           
  4325                           ; Switch size 1, requested type "simple"
  4326                           ; Number of cases is 4, Range of values is 0 to 3
  4327                           ; switch strategies available:
  4328                           ; Name         Instructions Cycles
  4329                           ; simple_byte           13     7 (average)
  4330                           ;	Chosen strategy is simple_byte
  4331  007182  500A               	movf	??_ssdUpdate^0,w,c
  4332  007184  0A00               	xorlw	0	; case 0
  4333  007186  B4D8               	btfsc	status,2,c
  4334  007188  EF4F  F038         	goto	l2279
  4335  00718C  0A01               	xorlw	1	; case 1
  4336  00718E  B4D8               	btfsc	status,2,c
  4337  007190  EF69  F038         	goto	l2285
  4338  007194  0A03               	xorlw	3	; case 2
  4339  007196  B4D8               	btfsc	status,2,c
  4340  007198  EF83  F038         	goto	l2291
  4341  00719C  0A01               	xorlw	1	; case 3
  4342  00719E  B4D8               	btfsc	status,2,c
  4343  0071A0  EF9D  F038         	goto	l2297
  4344  0071A4  EFB3  F038         	goto	l2301
  4345  0071A8                     l294:
  4346  0071A8  0012               	return		;funcret
  4347  0071AA                     __end_of_ssdUpdate:
  4348                           	callstack 0
  4349                           
  4350 ;; *************** function _ssdDigit *****************
  4351 ;; Defined at:
  4352 ;;		line 34 in file "ssd.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  val             1    wreg     unsigned char 
  4355 ;;  pos             1   36[COMRAM] unsigned char 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  val             1   37[COMRAM] unsigned char 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4367 ;;      Params:         1       0       0       0       0       0       0
  4368 ;;      Locals:         1       0       0       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0       0       0
  4370 ;;      Totals:         2       0       0       0       0       0       0
  4371 ;;Total ram usage:        2 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; This function calls:
  4374 ;;		Nothing
  4375 ;; This function is called by:
  4376 ;;		_operate
  4377 ;;		_main
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text20
  4382  006620                     __ptext20:
  4383                           	callstack 0
  4384  006620                     _ssdDigit:
  4385                           	callstack 30
  4386                           
  4387                           ;incstack = 0
  4388                           ;ssdDigit@val stored from wreg
  4389  006620  6E26               	movwf	ssdDigit@val^0,c
  4390  006622                     
  4391                           ;ssd.c: 35:     if (pos == 0) {
  4392  006622  5025               	movf	ssdDigit@pos^0,w,c
  4393  006624  A4D8               	btfss	status,2,c
  4394  006626  EF17  F033         	goto	u1751
  4395  00662A  EF19  F033         	goto	u1750
  4396  00662E                     u1751:
  4397  00662E  EF1B  F033         	goto	l2265
  4398  006632                     u1750:
  4399  006632                     
  4400                           ;ssd.c: 36:         v0 = val;
  4401  006632  C026  F05E         	movff	ssdDigit@val,_v0
  4402  006636                     l2265:
  4403                           
  4404                           ;ssd.c: 38:     if (pos == 1) {
  4405  006636  0425               	decf	ssdDigit@pos^0,w,c
  4406  006638  A4D8               	btfss	status,2,c
  4407  00663A  EF21  F033         	goto	u1761
  4408  00663E  EF23  F033         	goto	u1760
  4409  006642                     u1761:
  4410  006642  EF25  F033         	goto	l2269
  4411  006646                     u1760:
  4412  006646                     
  4413                           ;ssd.c: 39:         v1 = val;
  4414  006646  C026  F05D         	movff	ssdDigit@val,_v1
  4415  00664A                     l2269:
  4416                           
  4417                           ;ssd.c: 41:     if (pos == 2) {
  4418  00664A  0E02               	movlw	2
  4419  00664C  1825               	xorwf	ssdDigit@pos^0,w,c
  4420  00664E  A4D8               	btfss	status,2,c
  4421  006650  EF2C  F033         	goto	u1771
  4422  006654  EF2E  F033         	goto	u1770
  4423  006658                     u1771:
  4424  006658  EF30  F033         	goto	l2273
  4425  00665C                     u1770:
  4426  00665C                     
  4427                           ;ssd.c: 42:         v2 = val;
  4428  00665C  C026  F05C         	movff	ssdDigit@val,_v2
  4429  006660                     l2273:
  4430                           
  4431                           ;ssd.c: 44:     if (pos == 3) {
  4432  006660  0E03               	movlw	3
  4433  006662  1825               	xorwf	ssdDigit@pos^0,w,c
  4434  006664  A4D8               	btfss	status,2,c
  4435  006666  EF37  F033         	goto	u1781
  4436  00666A  EF39  F033         	goto	u1780
  4437  00666E                     u1781:
  4438  00666E  EF3B  F033         	goto	l284
  4439  006672                     u1780:
  4440  006672                     
  4441                           ;ssd.c: 45:         v3 = val;
  4442  006672  C026  F05B         	movff	ssdDigit@val,_v3
  4443  006676                     l284:
  4444  006676  0012               	return		;funcret
  4445  006678                     __end_of_ssdDigit:
  4446                           	callstack 0
  4447                           
  4448 ;; *************** function _lcdString *****************
  4449 ;; Defined at:
  4450 ;;		line 57 in file "lcd.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  msg             2   14[COMRAM] PTR unsigned char 
  4453 ;;		 -> STR_22(14), STR_21(14), STR_20(16), STR_19(18), 
  4454 ;;		 -> STR_18(13), STR_17(16), STR_16(16), STR_15(16), 
  4455 ;;		 -> STR_14(17), STR_13(16), STR_12(17), STR_11(16), 
  4456 ;;		 -> STR_10(12), STR_9(16), STR_8(13), STR_7(9), 
  4457 ;;		 -> STR_6(12), STR_5(9), STR_4(17), STR_3(9), 
  4458 ;;		 -> STR_2(12), STR_1(18), 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  i               2   18[COMRAM] int 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4470 ;;      Params:         2       0       0       0       0       0       0
  4471 ;;      Locals:         2       0       0       0       0       0       0
  4472 ;;      Temps:          2       0       0       0       0       0       0
  4473 ;;      Totals:         6       0       0       0       0       0       0
  4474 ;;Total ram usage:        6 bytes
  4475 ;; Hardware stack levels used: 1
  4476 ;; Hardware stack levels required when called: 5
  4477 ;; This function calls:
  4478 ;;		_lcdChar
  4479 ;; This function is called by:
  4480 ;;		_operate
  4481 ;;		_SetaMeta
  4482 ;;		_instructions
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text21
  4487  006574                     __ptext21:
  4488                           	callstack 0
  4489  006574                     _lcdString:
  4490                           	callstack 24
  4491  006574                     
  4492                           ;lcd.c: 58:  int i = 0;
  4493  006574  0E00               	movlw	0
  4494  006576  6E14               	movwf	(lcdString@i+1)^0,c
  4495  006578  0E00               	movlw	0
  4496  00657A  6E13               	movwf	lcdString@i^0,c
  4497                           
  4498                           ;lcd.c: 59:  while (msg[i] != 0) {
  4499  00657C  EFD0  F032         	goto	l2253
  4500  006580                     l2249:
  4501                           
  4502                           ;lcd.c: 60:   lcdChar(msg[i]);
  4503  006580  5013               	movf	lcdString@i^0,w,c
  4504  006582  240F               	addwf	lcdString@msg^0,w,c
  4505  006584  6E11               	movwf	??_lcdString^0,c
  4506  006586  5014               	movf	(lcdString@i+1)^0,w,c
  4507  006588  2010               	addwfc	(lcdString@msg+1)^0,w,c
  4508  00658A  6E12               	movwf	(??_lcdString+1)^0,c
  4509  00658C  C011  FFF6         	movff	??_lcdString,tblptrl
  4510  006590  C012  FFF7         	movff	??_lcdString+1,tblptrh
  4511  006594                     	if	0	;tblptru may be non-zero
  4512  006594                     	endif
  4513  006594                     	if	0	;tblptru may be non-zero
  4514  006594                     	endif
  4515  006594  0008               	tblrd		*
  4516  006596  50F5               	movf	tablat,w,c
  4517  006598  EC6F  F031         	call	_lcdChar
  4518  00659C                     
  4519                           ;lcd.c: 61:   i++;
  4520  00659C  4A13               	infsnz	lcdString@i^0,f,c
  4521  00659E  2A14               	incf	(lcdString@i+1)^0,f,c
  4522  0065A0                     l2253:
  4523                           
  4524                           ;lcd.c: 59:  while (msg[i] != 0) {
  4525  0065A0  5013               	movf	lcdString@i^0,w,c
  4526  0065A2  240F               	addwf	lcdString@msg^0,w,c
  4527  0065A4  6E11               	movwf	??_lcdString^0,c
  4528  0065A6  5014               	movf	(lcdString@i+1)^0,w,c
  4529  0065A8  2010               	addwfc	(lcdString@msg+1)^0,w,c
  4530  0065AA  6E12               	movwf	(??_lcdString+1)^0,c
  4531  0065AC  C011  FFF6         	movff	??_lcdString,tblptrl
  4532  0065B0  C012  FFF7         	movff	??_lcdString+1,tblptrh
  4533  0065B4                     	if	0	;tblptru may be non-zero
  4534  0065B4                     	endif
  4535  0065B4                     	if	0	;tblptru may be non-zero
  4536  0065B4                     	endif
  4537  0065B4  0008               	tblrd		*
  4538  0065B6  50F5               	movf	tablat,w,c
  4539  0065B8  0900               	iorlw	0
  4540  0065BA  A4D8               	btfss	status,2,c
  4541  0065BC  EFE2  F032         	goto	u1731
  4542  0065C0  EFE4  F032         	goto	u1730
  4543  0065C4                     u1731:
  4544  0065C4  EFC0  F032         	goto	l2249
  4545  0065C8                     u1730:
  4546  0065C8  0012               	return		;funcret
  4547  0065CA                     __end_of_lcdString:
  4548                           	callstack 0
  4549                           
  4550 ;; *************** function _lcdNumber *****************
  4551 ;; Defined at:
  4552 ;;		line 64 in file "lcd.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  value           2   26[COMRAM] int 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  i               2   28[COMRAM] int 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4566 ;;      Params:         2       0       0       0       0       0       0
  4567 ;;      Locals:         2       0       0       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0
  4569 ;;      Totals:         4       0       0       0       0       0       0
  4570 ;;Total ram usage:        4 bytes
  4571 ;; Hardware stack levels used: 1
  4572 ;; Hardware stack levels required when called: 5
  4573 ;; This function calls:
  4574 ;;		___awdiv
  4575 ;;		___awmod
  4576 ;;		_lcdChar
  4577 ;; This function is called by:
  4578 ;;		_operate
  4579 ;;		_SetaMeta
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text22
  4584  00673C                     __ptext22:
  4585                           	callstack 0
  4586  00673C                     _lcdNumber:
  4587                           	callstack 24
  4588  00673C                     
  4589                           ;lcd.c: 65:  int i = 10000;
  4590  00673C  0E27               	movlw	39
  4591  00673E  6E1E               	movwf	(lcdNumber@i+1)^0,c
  4592  006740  0E10               	movlw	16
  4593  006742  6E1D               	movwf	lcdNumber@i^0,c
  4594                           
  4595                           ;lcd.c: 66:  while (i > 0) {
  4596  006744  EFCA  F033         	goto	l2259
  4597  006748                     l2257:
  4598                           
  4599                           ;lcd.c: 67:   lcdChar((value / i) % 10 + 48);
  4600  006748  C01D  F003         	movff	lcdNumber@i,___awdiv@divisor
  4601  00674C  C01E  F004         	movff	lcdNumber@i+1,___awdiv@divisor+1
  4602  006750  C01B  F001         	movff	lcdNumber@value,___awdiv@dividend
  4603  006754  C01C  F002         	movff	lcdNumber@value+1,___awdiv@dividend+1
  4604  006758  EC71  F035         	call	___awdiv	;wreg free
  4605  00675C  C001  F009         	movff	?___awdiv,___awmod@dividend
  4606  006760  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  4607  006764  0E00               	movlw	0
  4608  006766  6E0C               	movwf	(___awmod@divisor+1)^0,c
  4609  006768  0E0A               	movlw	10
  4610  00676A  6E0B               	movwf	___awmod@divisor^0,c
  4611  00676C  EC66  F034         	call	___awmod	;wreg free
  4612  006770  5009               	movf	?___awmod^0,w,c
  4613  006772  0F30               	addlw	48
  4614  006774  EC6F  F031         	call	_lcdChar
  4615                           
  4616                           ;lcd.c: 68:   i /= 10;
  4617  006778  C01D  F001         	movff	lcdNumber@i,___awdiv@dividend
  4618  00677C  C01E  F002         	movff	lcdNumber@i+1,___awdiv@dividend+1
  4619  006780  0E00               	movlw	0
  4620  006782  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4621  006784  0E0A               	movlw	10
  4622  006786  6E03               	movwf	___awdiv@divisor^0,c
  4623  006788  EC71  F035         	call	___awdiv	;wreg free
  4624  00678C  C001  F01D         	movff	?___awdiv,lcdNumber@i
  4625  006790  C002  F01E         	movff	?___awdiv+1,lcdNumber@i+1
  4626  006794                     l2259:
  4627                           
  4628                           ;lcd.c: 66:  while (i > 0) {
  4629  006794  BE1E               	btfsc	(lcdNumber@i+1)^0,7,c
  4630  006796  EFD7  F033         	goto	u1740
  4631  00679A  501E               	movf	(lcdNumber@i+1)^0,w,c
  4632  00679C  E106               	bnz	u1741
  4633  00679E  041D               	decf	lcdNumber@i^0,w,c
  4634  0067A0  B0D8               	btfsc	status,0,c
  4635  0067A2  EFD5  F033         	goto	u1741
  4636  0067A6  EFD7  F033         	goto	u1740
  4637  0067AA                     u1741:
  4638  0067AA  EFA4  F033         	goto	l2257
  4639  0067AE                     u1740:
  4640  0067AE  0012               	return		;funcret
  4641  0067B0                     __end_of_lcdNumber:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _lcdChar *****************
  4645 ;; Defined at:
  4646 ;;		line 52 in file "lcd.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  value           1    wreg     unsigned char 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  value           1   13[COMRAM] unsigned char 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4660 ;;      Params:         0       0       0       0       0       0       0
  4661 ;;      Locals:         1       0       0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0
  4663 ;;      Totals:         1       0       0       0       0       0       0
  4664 ;;Total ram usage:        1 bytes
  4665 ;; Hardware stack levels used: 1
  4666 ;; Hardware stack levels required when called: 4
  4667 ;; This function calls:
  4668 ;;		_delayMicro
  4669 ;;		_pushByte
  4670 ;; This function is called by:
  4671 ;;		_lcdString
  4672 ;;		_lcdNumber
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text23
  4677  0062DE                     __ptext23:
  4678                           	callstack 0
  4679  0062DE                     _lcdChar:
  4680                           	callstack 24
  4681                           
  4682                           ;incstack = 0
  4683                           ;lcdChar@value stored from wreg
  4684  0062DE  6E0E               	movwf	lcdChar@value^0,c
  4685  0062E0                     
  4686                           ;lcd.c: 53:  pushByte(value, 1);
  4687  0062E0  0E00               	movlw	0
  4688  0062E2  6E0B               	movwf	(pushByte@rs+1)^0,c
  4689  0062E4  0E01               	movlw	1
  4690  0062E6  6E0A               	movwf	pushByte@rs^0,c
  4691  0062E8  500E               	movf	lcdChar@value^0,w,c
  4692  0062EA  EC3C  F033         	call	_pushByte
  4693  0062EE                     
  4694                           ;lcd.c: 54:  delayMicro(80);
  4695  0062EE  0E00               	movlw	0
  4696  0062F0  6E02               	movwf	(delayMicro@a+1)^0,c
  4697  0062F2  0E50               	movlw	80
  4698  0062F4  6E01               	movwf	delayMicro@a^0,c
  4699  0062F6  EC34  F031         	call	_delayMicro	;wreg free
  4700  0062FA  0012               	return		;funcret
  4701  0062FC                     __end_of_lcdChar:
  4702                           	callstack 0
  4703                           
  4704 ;; *************** function ___awmod *****************
  4705 ;; Defined at:
  4706 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  dividend        2    8[COMRAM] int 
  4709 ;;  divisor         2   10[COMRAM] int 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  sign            1   13[COMRAM] unsigned char 
  4712 ;;  counter         1   12[COMRAM] unsigned char 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  2    8[COMRAM] int 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4722 ;;      Params:         4       0       0       0       0       0       0
  4723 ;;      Locals:         2       0       0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0
  4725 ;;      Totals:         6       0       0       0       0       0       0
  4726 ;;Total ram usage:        6 bytes
  4727 ;; Hardware stack levels used: 1
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_lcdNumber
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text24
  4736  0068CC                     __ptext24:
  4737                           	callstack 0
  4738  0068CC                     ___awmod:
  4739                           	callstack 28
  4740  0068CC  0E00               	movlw	0
  4741  0068CE  6E0E               	movwf	___awmod@sign^0,c
  4742  0068D0  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4743  0068D2  EF6F  F034         	goto	u1670
  4744  0068D6  EF6D  F034         	goto	u1671
  4745  0068DA                     u1671:
  4746  0068DA  EF75  F034         	goto	l2217
  4747  0068DE                     u1670:
  4748  0068DE  6C09               	negf	___awmod@dividend^0,c
  4749  0068E0  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4750  0068E2  B0D8               	btfsc	status,0,c
  4751  0068E4  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4752  0068E6  0E01               	movlw	1
  4753  0068E8  6E0E               	movwf	___awmod@sign^0,c
  4754  0068EA                     l2217:
  4755  0068EA  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4756  0068EC  EF7C  F034         	goto	u1680
  4757  0068F0  EF7A  F034         	goto	u1681
  4758  0068F4                     u1681:
  4759  0068F4  EF80  F034         	goto	l2221
  4760  0068F8                     u1680:
  4761  0068F8  6C0B               	negf	___awmod@divisor^0,c
  4762  0068FA  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4763  0068FC  B0D8               	btfsc	status,0,c
  4764  0068FE  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4765  006900                     l2221:
  4766  006900  500B               	movf	___awmod@divisor^0,w,c
  4767  006902  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4768  006904  B4D8               	btfsc	status,2,c
  4769  006906  EF87  F034         	goto	u1691
  4770  00690A  EF89  F034         	goto	u1690
  4771  00690E                     u1691:
  4772  00690E  EFAD  F034         	goto	l2237
  4773  006912                     u1690:
  4774  006912  0E01               	movlw	1
  4775  006914  6E0D               	movwf	___awmod@counter^0,c
  4776  006916  EF91  F034         	goto	l2227
  4777  00691A                     l2225:
  4778  00691A  90D8               	bcf	status,0,c
  4779  00691C  360B               	rlcf	___awmod@divisor^0,f,c
  4780  00691E  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4781  006920  2A0D               	incf	___awmod@counter^0,f,c
  4782  006922                     l2227:
  4783  006922  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4784  006924  EF96  F034         	goto	u1701
  4785  006928  EF98  F034         	goto	u1700
  4786  00692C                     u1701:
  4787  00692C  EF8D  F034         	goto	l2225
  4788  006930                     u1700:
  4789  006930                     l2229:
  4790  006930  500B               	movf	___awmod@divisor^0,w,c
  4791  006932  5C09               	subwf	___awmod@dividend^0,w,c
  4792  006934  500C               	movf	(___awmod@divisor+1)^0,w,c
  4793  006936  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4794  006938  A0D8               	btfss	status,0,c
  4795  00693A  EFA1  F034         	goto	u1711
  4796  00693E  EFA3  F034         	goto	u1710
  4797  006942                     u1711:
  4798  006942  EFA7  F034         	goto	l2233
  4799  006946                     u1710:
  4800  006946  500B               	movf	___awmod@divisor^0,w,c
  4801  006948  5E09               	subwf	___awmod@dividend^0,f,c
  4802  00694A  500C               	movf	(___awmod@divisor+1)^0,w,c
  4803  00694C  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4804  00694E                     l2233:
  4805  00694E  90D8               	bcf	status,0,c
  4806  006950  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4807  006952  320B               	rrcf	___awmod@divisor^0,f,c
  4808  006954  2E0D               	decfsz	___awmod@counter^0,f,c
  4809  006956  EF98  F034         	goto	l2229
  4810  00695A                     l2237:
  4811  00695A  500E               	movf	___awmod@sign^0,w,c
  4812  00695C  B4D8               	btfsc	status,2,c
  4813  00695E  EFB3  F034         	goto	u1721
  4814  006962  EFB5  F034         	goto	u1720
  4815  006966                     u1721:
  4816  006966  EFB9  F034         	goto	l2241
  4817  00696A                     u1720:
  4818  00696A  6C09               	negf	___awmod@dividend^0,c
  4819  00696C  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4820  00696E  B0D8               	btfsc	status,0,c
  4821  006970  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4822  006972                     l2241:
  4823  006972  C009  F009         	movff	___awmod@dividend,?___awmod
  4824  006976  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4825  00697A  0012               	return		;funcret
  4826  00697C                     __end_of___awmod:
  4827                           	callstack 0
  4828                           
  4829 ;; *************** function ___awdiv *****************
  4830 ;; Defined at:
  4831 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  dividend        2    0[COMRAM] int 
  4834 ;;  divisor         2    2[COMRAM] int 
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;  quotient        2    6[COMRAM] int 
  4837 ;;  sign            1    5[COMRAM] unsigned char 
  4838 ;;  counter         1    4[COMRAM] unsigned char 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  2    0[COMRAM] int 
  4841 ;; Registers used:
  4842 ;;		wreg, status,2, status,0
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4848 ;;      Params:         4       0       0       0       0       0       0
  4849 ;;      Locals:         4       0       0       0       0       0       0
  4850 ;;      Temps:          0       0       0       0       0       0       0
  4851 ;;      Totals:         8       0       0       0       0       0       0
  4852 ;;Total ram usage:        8 bytes
  4853 ;; Hardware stack levels used: 1
  4854 ;; This function calls:
  4855 ;;		Nothing
  4856 ;; This function is called by:
  4857 ;;		_lcdNumber
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text25
  4862  006AE2                     __ptext25:
  4863                           	callstack 0
  4864  006AE2                     ___awdiv:
  4865                           	callstack 28
  4866  006AE2  0E00               	movlw	0
  4867  006AE4  6E06               	movwf	___awdiv@sign^0,c
  4868  006AE6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4869  006AE8  EF7A  F035         	goto	u1610
  4870  006AEC  EF78  F035         	goto	u1611
  4871  006AF0                     u1611:
  4872  006AF0  EF80  F035         	goto	l2173
  4873  006AF4                     u1610:
  4874  006AF4  6C03               	negf	___awdiv@divisor^0,c
  4875  006AF6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4876  006AF8  B0D8               	btfsc	status,0,c
  4877  006AFA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4878  006AFC  0E01               	movlw	1
  4879  006AFE  6E06               	movwf	___awdiv@sign^0,c
  4880  006B00                     l2173:
  4881  006B00  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4882  006B02  EF87  F035         	goto	u1620
  4883  006B06  EF85  F035         	goto	u1621
  4884  006B0A                     u1621:
  4885  006B0A  EF8D  F035         	goto	l2179
  4886  006B0E                     u1620:
  4887  006B0E  6C01               	negf	___awdiv@dividend^0,c
  4888  006B10  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4889  006B12  B0D8               	btfsc	status,0,c
  4890  006B14  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4891  006B16  0E01               	movlw	1
  4892  006B18  1A06               	xorwf	___awdiv@sign^0,f,c
  4893  006B1A                     l2179:
  4894  006B1A  0E00               	movlw	0
  4895  006B1C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4896  006B1E  0E00               	movlw	0
  4897  006B20  6E07               	movwf	___awdiv@quotient^0,c
  4898  006B22  5003               	movf	___awdiv@divisor^0,w,c
  4899  006B24  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4900  006B26  B4D8               	btfsc	status,2,c
  4901  006B28  EF98  F035         	goto	u1631
  4902  006B2C  EF9A  F035         	goto	u1630
  4903  006B30                     u1631:
  4904  006B30  EFC2  F035         	goto	l2201
  4905  006B34                     u1630:
  4906  006B34  0E01               	movlw	1
  4907  006B36  6E05               	movwf	___awdiv@counter^0,c
  4908  006B38  EFA2  F035         	goto	l2187
  4909  006B3C                     l2185:
  4910  006B3C  90D8               	bcf	status,0,c
  4911  006B3E  3603               	rlcf	___awdiv@divisor^0,f,c
  4912  006B40  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4913  006B42  2A05               	incf	___awdiv@counter^0,f,c
  4914  006B44                     l2187:
  4915  006B44  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4916  006B46  EFA7  F035         	goto	u1641
  4917  006B4A  EFA9  F035         	goto	u1640
  4918  006B4E                     u1641:
  4919  006B4E  EF9E  F035         	goto	l2185
  4920  006B52                     u1640:
  4921  006B52                     l2189:
  4922  006B52  90D8               	bcf	status,0,c
  4923  006B54  3607               	rlcf	___awdiv@quotient^0,f,c
  4924  006B56  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4925  006B58  5003               	movf	___awdiv@divisor^0,w,c
  4926  006B5A  5C01               	subwf	___awdiv@dividend^0,w,c
  4927  006B5C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4928  006B5E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4929  006B60  A0D8               	btfss	status,0,c
  4930  006B62  EFB5  F035         	goto	u1651
  4931  006B66  EFB7  F035         	goto	u1650
  4932  006B6A                     u1651:
  4933  006B6A  EFBC  F035         	goto	l2197
  4934  006B6E                     u1650:
  4935  006B6E  5003               	movf	___awdiv@divisor^0,w,c
  4936  006B70  5E01               	subwf	___awdiv@dividend^0,f,c
  4937  006B72  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4938  006B74  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4939  006B76  8007               	bsf	___awdiv@quotient^0,0,c
  4940  006B78                     l2197:
  4941  006B78  90D8               	bcf	status,0,c
  4942  006B7A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4943  006B7C  3203               	rrcf	___awdiv@divisor^0,f,c
  4944  006B7E  2E05               	decfsz	___awdiv@counter^0,f,c
  4945  006B80  EFA9  F035         	goto	l2189
  4946  006B84                     l2201:
  4947  006B84  5006               	movf	___awdiv@sign^0,w,c
  4948  006B86  B4D8               	btfsc	status,2,c
  4949  006B88  EFC8  F035         	goto	u1661
  4950  006B8C  EFCA  F035         	goto	u1660
  4951  006B90                     u1661:
  4952  006B90  EFCE  F035         	goto	l2205
  4953  006B94                     u1660:
  4954  006B94  6C07               	negf	___awdiv@quotient^0,c
  4955  006B96  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4956  006B98  B0D8               	btfsc	status,0,c
  4957  006B9A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4958  006B9C                     l2205:
  4959  006B9C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4960  006BA0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4961  006BA4  0012               	return		;funcret
  4962  006BA6                     __end_of___awdiv:
  4963                           	callstack 0
  4964                           
  4965 ;; *************** function _lcdCommand *****************
  4966 ;; Defined at:
  4967 ;;		line 40 in file "lcd.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  value           1    wreg     unsigned char 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  value           1   13[COMRAM] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  1    wreg      void 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4981 ;;      Params:         0       0       0       0       0       0       0
  4982 ;;      Locals:         1       0       0       0       0       0       0
  4983 ;;      Temps:          0       0       0       0       0       0       0
  4984 ;;      Totals:         1       0       0       0       0       0       0
  4985 ;;Total ram usage:        1 bytes
  4986 ;; Hardware stack levels used: 1
  4987 ;; Hardware stack levels required when called: 4
  4988 ;; This function calls:
  4989 ;;		_delayMili
  4990 ;;		_pushByte
  4991 ;; This function is called by:
  4992 ;;		_operate
  4993 ;;		_SetaMeta
  4994 ;;		_lcdInit
  4995 ;;		_instructions
  4996 ;;		_lcdPosition
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text26
  5001  0062C0                     __ptext26:
  5002                           	callstack 0
  5003  0062C0                     _lcdCommand:
  5004                           	callstack 25
  5005                           
  5006                           ;incstack = 0
  5007                           ;lcdCommand@value stored from wreg
  5008  0062C0  6E0E               	movwf	lcdCommand@value^0,c
  5009  0062C2                     
  5010                           ;lcd.c: 41:  pushByte(value, 0);
  5011  0062C2  0E00               	movlw	0
  5012  0062C4  6E0B               	movwf	(pushByte@rs+1)^0,c
  5013  0062C6  0E00               	movlw	0
  5014  0062C8  6E0A               	movwf	pushByte@rs^0,c
  5015  0062CA  500E               	movf	lcdCommand@value^0,w,c
  5016  0062CC  EC3C  F033         	call	_pushByte
  5017                           
  5018                           ;lcd.c: 42:  delayMili(2);
  5019  0062D0  0E00               	movlw	0
  5020  0062D2  6E02               	movwf	(delayMili@a+1)^0,c
  5021  0062D4  0E02               	movlw	2
  5022  0062D6  6E01               	movwf	delayMili@a^0,c
  5023  0062D8  ECBB  F031         	call	_delayMili	;wreg free
  5024  0062DC  0012               	return		;funcret
  5025  0062DE                     __end_of_lcdCommand:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _pushByte *****************
  5029 ;; Defined at:
  5030 ;;		line 31 in file "lcd.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  value           1    wreg     unsigned char 
  5033 ;;  rs              2    9[COMRAM] int 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  value           1   12[COMRAM] unsigned char 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5045 ;;      Params:         2       0       0       0       0       0       0
  5046 ;;      Locals:         1       0       0       0       0       0       0
  5047 ;;      Temps:          1       0       0       0       0       0       0
  5048 ;;      Totals:         4       0       0       0       0       0       0
  5049 ;;Total ram usage:        4 bytes
  5050 ;; Hardware stack levels used: 1
  5051 ;; Hardware stack levels required when called: 3
  5052 ;; This function calls:
  5053 ;;		_digitalWrite
  5054 ;;		_pulseEnablePin
  5055 ;;		_soWrite
  5056 ;; This function is called by:
  5057 ;;		_lcdCommand
  5058 ;;		_lcdChar
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           	psect	text27
  5063  006678                     __ptext27:
  5064                           	callstack 0
  5065  006678                     _pushByte:
  5066                           	callstack 25
  5067                           
  5068                           ;incstack = 0
  5069                           ;pushByte@value stored from wreg
  5070  006678  6E0D               	movwf	pushByte@value^0,c
  5071  00667A                     
  5072                           ;lcd.c: 32:  soWrite(value >> 4);
  5073  00667A  C00D  F00C         	movff	pushByte@value,??_pushByte
  5074  00667E  3A0C               	swapf	??_pushByte^0,f,c
  5075  006680  0E0F               	movlw	15
  5076  006682  160C               	andwf	??_pushByte^0,f,c
  5077  006684  500C               	movf	??_pushByte^0,w,c
  5078  006686  6E07               	movwf	soWrite@value^0,c
  5079  006688  6A08               	clrf	(soWrite@value+1)^0,c
  5080  00668A  EC6B  F032         	call	_soWrite	;wreg free
  5081                           
  5082                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  5083  00668E  0E00               	movlw	0
  5084  006690  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5085  006692  0E1D               	movlw	29
  5086  006694  6E01               	movwf	digitalWrite@pin^0,c
  5087  006696  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  5088  00669A  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  5089  00669E  ECE6  F03A         	call	_digitalWrite	;wreg free
  5090                           
  5091                           ;lcd.c: 34:  pulseEnablePin();
  5092  0066A2  EC26  F032         	call	_pulseEnablePin	;wreg free
  5093                           
  5094                           ;lcd.c: 36:  soWrite(value & 0x0F);
  5095  0066A6  C00D  F00C         	movff	pushByte@value,??_pushByte
  5096  0066AA  0E0F               	movlw	15
  5097  0066AC  160C               	andwf	??_pushByte^0,f,c
  5098  0066AE  500C               	movf	??_pushByte^0,w,c
  5099  0066B0  6E07               	movwf	soWrite@value^0,c
  5100  0066B2  6A08               	clrf	(soWrite@value+1)^0,c
  5101  0066B4  EC6B  F032         	call	_soWrite	;wreg free
  5102                           
  5103                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  5104  0066B8  0E00               	movlw	0
  5105  0066BA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5106  0066BC  0E1D               	movlw	29
  5107  0066BE  6E01               	movwf	digitalWrite@pin^0,c
  5108  0066C0  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  5109  0066C4  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  5110  0066C8  ECE6  F03A         	call	_digitalWrite	;wreg free
  5111                           
  5112                           ;lcd.c: 38:  pulseEnablePin();
  5113  0066CC  EC26  F032         	call	_pulseEnablePin	;wreg free
  5114  0066D0  0012               	return		;funcret
  5115  0066D2                     __end_of_pushByte:
  5116                           	callstack 0
  5117                           
  5118 ;; *************** function _soWrite *****************
  5119 ;; Defined at:
  5120 ;;		line 18 in file "so.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  value           2    6[COMRAM] int 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  i               1    8[COMRAM] unsigned char 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5134 ;;      Params:         2       0       0       0       0       0       0
  5135 ;;      Locals:         1       0       0       0       0       0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0
  5137 ;;      Totals:         3       0       0       0       0       0       0
  5138 ;;Total ram usage:        3 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; Hardware stack levels required when called: 2
  5141 ;; This function calls:
  5142 ;;		_PulseClockData
  5143 ;;		_PulseEnClock
  5144 ;;		_digitalWrite
  5145 ;; This function is called by:
  5146 ;;		_kpDebounce
  5147 ;;		_pushNibble
  5148 ;;		_pushByte
  5149 ;;		_ssdUpdate
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text28
  5154  0064D6                     __ptext28:
  5155                           	callstack 0
  5156  0064D6                     _soWrite:
  5157                           	callstack 27
  5158  0064D6                     
  5159                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  5160  0064D6  0E00               	movlw	0
  5161  0064D8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5162  0064DA  0E08               	movlw	8
  5163  0064DC  6E01               	movwf	digitalWrite@pin^0,c
  5164  0064DE  0E00               	movlw	0
  5165  0064E0  6E04               	movwf	(digitalWrite@value+1)^0,c
  5166  0064E2  0E00               	movlw	0
  5167  0064E4  6E03               	movwf	digitalWrite@value^0,c
  5168  0064E6  ECE6  F03A         	call	_digitalWrite	;wreg free
  5169  0064EA                     
  5170                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  5171  0064EA  0E00               	movlw	0
  5172  0064EC  6E09               	movwf	soWrite@i^0,c
  5173  0064EE                     l2081:
  5174                           
  5175                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  5176  0064EE  0E00               	movlw	0
  5177  0064F0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5178  0064F2  0E1E               	movlw	30
  5179  0064F4  6E01               	movwf	digitalWrite@pin^0,c
  5180  0064F6  0E80               	movlw	128
  5181  0064F8  1407               	andwf	soWrite@value^0,w,c
  5182  0064FA  6E03               	movwf	digitalWrite@value^0,c
  5183  0064FC  6A04               	clrf	(digitalWrite@value+1)^0,c
  5184  0064FE  ECE6  F03A         	call	_digitalWrite	;wreg free
  5185                           
  5186                           ;so.c: 23:   PulseClockData();
  5187  006502  EC91  F031         	call	_PulseClockData	;wreg free
  5188  006506                     
  5189                           ;so.c: 24:   value <<= 1;
  5190  006506  90D8               	bcf	status,0,c
  5191  006508  3607               	rlcf	soWrite@value^0,f,c
  5192  00650A  3608               	rlcf	(soWrite@value+1)^0,f,c
  5193  00650C                     
  5194                           ;so.c: 25:  }
  5195  00650C  2A09               	incf	soWrite@i^0,f,c
  5196  00650E  0E07               	movlw	7
  5197  006510  6409               	cpfsgt	soWrite@i^0,c
  5198  006512  EF8D  F032         	goto	u1511
  5199  006516  EF8F  F032         	goto	u1510
  5200  00651A                     u1511:
  5201  00651A  EF77  F032         	goto	l2081
  5202  00651E                     u1510:
  5203  00651E                     
  5204                           ;so.c: 26:  PulseEnClock();
  5205  00651E  ECA6  F031         	call	_PulseEnClock	;wreg free
  5206  006522  0012               	return		;funcret
  5207  006524                     __end_of_soWrite:
  5208                           	callstack 0
  5209                           
  5210 ;; *************** function _PulseEnClock *****************
  5211 ;; Defined at:
  5212 ;;		line 9 in file "so.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;		None
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;		None
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      void 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0, cstack
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5226 ;;      Params:         0       0       0       0       0       0       0
  5227 ;;      Locals:         0       0       0       0       0       0       0
  5228 ;;      Temps:          0       0       0       0       0       0       0
  5229 ;;      Totals:         0       0       0       0       0       0       0
  5230 ;;Total ram usage:        0 bytes
  5231 ;; Hardware stack levels used: 1
  5232 ;; Hardware stack levels required when called: 1
  5233 ;; This function calls:
  5234 ;;		_digitalWrite
  5235 ;; This function is called by:
  5236 ;;		_soWrite
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text29
  5241  00634C                     __ptext29:
  5242                           	callstack 0
  5243  00634C                     _PulseEnClock:
  5244                           	callstack 27
  5245  00634C                     
  5246                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  5247  00634C  0E00               	movlw	0
  5248  00634E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5249  006350  0E1F               	movlw	31
  5250  006352  6E01               	movwf	digitalWrite@pin^0,c
  5251  006354  0E00               	movlw	0
  5252  006356  6E04               	movwf	(digitalWrite@value+1)^0,c
  5253  006358  0E01               	movlw	1
  5254  00635A  6E03               	movwf	digitalWrite@value^0,c
  5255  00635C  ECE6  F03A         	call	_digitalWrite	;wreg free
  5256                           
  5257                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  5258  006360  0E00               	movlw	0
  5259  006362  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5260  006364  0E1F               	movlw	31
  5261  006366  6E01               	movwf	digitalWrite@pin^0,c
  5262  006368  0E00               	movlw	0
  5263  00636A  6E04               	movwf	(digitalWrite@value+1)^0,c
  5264  00636C  0E00               	movlw	0
  5265  00636E  6E03               	movwf	digitalWrite@value^0,c
  5266  006370  ECE6  F03A         	call	_digitalWrite	;wreg free
  5267  006374  0012               	return		;funcret
  5268  006376                     __end_of_PulseEnClock:
  5269                           	callstack 0
  5270                           
  5271 ;; *************** function _PulseClockData *****************
  5272 ;; Defined at:
  5273 ;;		line 14 in file "so.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;		None
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;		None
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5287 ;;      Params:         0       0       0       0       0       0       0
  5288 ;;      Locals:         0       0       0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0
  5290 ;;      Totals:         0       0       0       0       0       0       0
  5291 ;;Total ram usage:        0 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; Hardware stack levels required when called: 1
  5294 ;; This function calls:
  5295 ;;		_digitalWrite
  5296 ;; This function is called by:
  5297 ;;		_soWrite
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text30
  5302  006322                     __ptext30:
  5303                           	callstack 0
  5304  006322                     _PulseClockData:
  5305                           	callstack 27
  5306  006322                     
  5307                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  5308  006322  0E00               	movlw	0
  5309  006324  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5310  006326  0E08               	movlw	8
  5311  006328  6E01               	movwf	digitalWrite@pin^0,c
  5312  00632A  0E00               	movlw	0
  5313  00632C  6E04               	movwf	(digitalWrite@value+1)^0,c
  5314  00632E  0E01               	movlw	1
  5315  006330  6E03               	movwf	digitalWrite@value^0,c
  5316  006332  ECE6  F03A         	call	_digitalWrite	;wreg free
  5317                           
  5318                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  5319  006336  0E00               	movlw	0
  5320  006338  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5321  00633A  0E08               	movlw	8
  5322  00633C  6E01               	movwf	digitalWrite@pin^0,c
  5323  00633E  0E00               	movlw	0
  5324  006340  6E04               	movwf	(digitalWrite@value+1)^0,c
  5325  006342  0E00               	movlw	0
  5326  006344  6E03               	movwf	digitalWrite@value^0,c
  5327  006346  ECE6  F03A         	call	_digitalWrite	;wreg free
  5328  00634A  0012               	return		;funcret
  5329  00634C                     __end_of_PulseClockData:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function _pulseEnablePin *****************
  5333 ;; Defined at:
  5334 ;;		line 18 in file "lcd.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;		None
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      void 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5348 ;;      Params:         0       0       0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0       0       0
  5350 ;;      Temps:          0       0       0       0       0       0       0
  5351 ;;      Totals:         0       0       0       0       0       0       0
  5352 ;;Total ram usage:        0 bytes
  5353 ;; Hardware stack levels used: 1
  5354 ;; Hardware stack levels required when called: 1
  5355 ;; This function calls:
  5356 ;;		_delayMicro
  5357 ;;		_digitalWrite
  5358 ;; This function is called by:
  5359 ;;		_pushNibble
  5360 ;;		_pushByte
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text31
  5365  00644C                     __ptext31:
  5366                           	callstack 0
  5367  00644C                     _pulseEnablePin:
  5368                           	callstack 27
  5369  00644C                     
  5370                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  5371  00644C  0E00               	movlw	0
  5372  00644E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5373  006450  0E1C               	movlw	28
  5374  006452  6E01               	movwf	digitalWrite@pin^0,c
  5375  006454  0E00               	movlw	0
  5376  006456  6E04               	movwf	(digitalWrite@value+1)^0,c
  5377  006458  0E01               	movlw	1
  5378  00645A  6E03               	movwf	digitalWrite@value^0,c
  5379  00645C  ECE6  F03A         	call	_digitalWrite	;wreg free
  5380  006460                     
  5381                           ;lcd.c: 20:  delayMicro(5);
  5382  006460  0E00               	movlw	0
  5383  006462  6E02               	movwf	(delayMicro@a+1)^0,c
  5384  006464  0E05               	movlw	5
  5385  006466  6E01               	movwf	delayMicro@a^0,c
  5386  006468  EC34  F031         	call	_delayMicro	;wreg free
  5387  00646C                     
  5388                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  5389  00646C  0E00               	movlw	0
  5390  00646E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5391  006470  0E1C               	movlw	28
  5392  006472  6E01               	movwf	digitalWrite@pin^0,c
  5393  006474  0E00               	movlw	0
  5394  006476  6E04               	movwf	(digitalWrite@value+1)^0,c
  5395  006478  0E00               	movlw	0
  5396  00647A  6E03               	movwf	digitalWrite@value^0,c
  5397  00647C  ECE6  F03A         	call	_digitalWrite	;wreg free
  5398                           
  5399                           ;lcd.c: 22:  delayMicro(5);
  5400  006480  0E00               	movlw	0
  5401  006482  6E02               	movwf	(delayMicro@a+1)^0,c
  5402  006484  0E05               	movlw	5
  5403  006486  6E01               	movwf	delayMicro@a^0,c
  5404  006488  EC34  F031         	call	_delayMicro	;wreg free
  5405  00648C  0012               	return		;funcret
  5406  00648E                     __end_of_pulseEnablePin:
  5407                           	callstack 0
  5408                           
  5409 ;; *************** function _digitalWrite *****************
  5410 ;; Defined at:
  5411 ;;		line 14 in file "io.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  pin             2    0[COMRAM] int 
  5414 ;;  value           2    2[COMRAM] int 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;		None
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      void 
  5419 ;; Registers used:
  5420 ;;		wreg, status,2, status,0
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5426 ;;      Params:         4       0       0       0       0       0       0
  5427 ;;      Locals:         0       0       0       0       0       0       0
  5428 ;;      Temps:          2       0       0       0       0       0       0
  5429 ;;      Totals:         6       0       0       0       0       0       0
  5430 ;;Total ram usage:        6 bytes
  5431 ;; Hardware stack levels used: 1
  5432 ;; This function calls:
  5433 ;;		Nothing
  5434 ;; This function is called by:
  5435 ;;		_pulseEnablePin
  5436 ;;		_pushNibble
  5437 ;;		_pushByte
  5438 ;;		_ssdUpdate
  5439 ;;		_PulseEnClock
  5440 ;;		_PulseClockData
  5441 ;;		_soWrite
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text32
  5446  0075CC                     __ptext32:
  5447                           	callstack 0
  5448  0075CC                     _digitalWrite:
  5449                           	callstack 28
  5450  0075CC                     
  5451                           ;io.c: 16:     if(pin <8){
  5452  0075CC  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5453  0075CE  EFF4  F03A         	goto	u1310
  5454  0075D2  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5455  0075D4  E107               	bnz	u1311
  5456  0075D6  0E08               	movlw	8
  5457  0075D8  5C01               	subwf	digitalWrite@pin^0,w,c
  5458  0075DA  B0D8               	btfsc	status,0,c
  5459  0075DC  EFF2  F03A         	goto	u1311
  5460  0075E0  EFF4  F03A         	goto	u1310
  5461  0075E4                     u1311:
  5462  0075E4  EF1E  F03B         	goto	l2037
  5463  0075E8                     u1310:
  5464  0075E8                     
  5465                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  5466  0075E8  5003               	movf	digitalWrite@value^0,w,c
  5467  0075EA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5468  0075EC  B4D8               	btfsc	status,2,c
  5469  0075EE  EFFB  F03A         	goto	u1321
  5470  0075F2  EFFD  F03A         	goto	u1320
  5471  0075F6                     u1321:
  5472  0075F6  EF0D  F03B         	goto	l2035
  5473  0075FA                     u1320:
  5474  0075FA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5475  0075FE  0E01               	movlw	1
  5476  007600  6E06               	movwf	(??_digitalWrite+1)^0,c
  5477  007602  2A05               	incf	??_digitalWrite^0,f,c
  5478  007604  EF06  F03B         	goto	u1334
  5479  007608                     u1335:
  5480  007608  90D8               	bcf	status,0,c
  5481  00760A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5482  00760C                     u1334:
  5483  00760C  2E05               	decfsz	??_digitalWrite^0,f,c
  5484  00760E  EF04  F03B         	goto	u1335
  5485  007612  5006               	movf	(??_digitalWrite+1)^0,w,c
  5486  007614  1280               	iorwf	128,f,c	;volatile
  5487  007616  EF0C  F03C         	goto	l362
  5488  00761A                     l2035:
  5489  00761A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5490  00761E  0E01               	movlw	1
  5491  007620  6E06               	movwf	(??_digitalWrite+1)^0,c
  5492  007622  2A05               	incf	??_digitalWrite^0,f,c
  5493  007624  EF16  F03B         	goto	u1344
  5494  007628                     u1345:
  5495  007628  90D8               	bcf	status,0,c
  5496  00762A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5497  00762C                     u1344:
  5498  00762C  2E05               	decfsz	??_digitalWrite^0,f,c
  5499  00762E  EF14  F03B         	goto	u1345
  5500  007632  5006               	movf	(??_digitalWrite+1)^0,w,c
  5501  007634  0AFF               	xorlw	255
  5502  007636  1680               	andwf	128,f,c	;volatile
  5503  007638  EF0C  F03C         	goto	l362
  5504  00763C                     l2037:
  5505  00763C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5506  00763E  EF2C  F03B         	goto	u1350
  5507  007642  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5508  007644  E107               	bnz	u1351
  5509  007646  0E10               	movlw	16
  5510  007648  5C01               	subwf	digitalWrite@pin^0,w,c
  5511  00764A  B0D8               	btfsc	status,0,c
  5512  00764C  EF2A  F03B         	goto	u1351
  5513  007650  EF2C  F03B         	goto	u1350
  5514  007654                     u1351:
  5515  007654  EF5A  F03B         	goto	l2045
  5516  007658                     u1350:
  5517  007658                     
  5518                           ;io.c: 20:         pin -=8;
  5519  007658  0EF8               	movlw	248
  5520  00765A  2601               	addwf	digitalWrite@pin^0,f,c
  5521  00765C  0EFF               	movlw	255
  5522  00765E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5523                           
  5524                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  5525  007660  5003               	movf	digitalWrite@value^0,w,c
  5526  007662  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5527  007664  B4D8               	btfsc	status,2,c
  5528  007666  EF37  F03B         	goto	u1361
  5529  00766A  EF39  F03B         	goto	u1360
  5530  00766E                     u1361:
  5531  00766E  EF49  F03B         	goto	l2043
  5532  007672                     u1360:
  5533  007672  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5534  007676  0E01               	movlw	1
  5535  007678  6E06               	movwf	(??_digitalWrite+1)^0,c
  5536  00767A  2A05               	incf	??_digitalWrite^0,f,c
  5537  00767C  EF42  F03B         	goto	u1374
  5538  007680                     u1375:
  5539  007680  90D8               	bcf	status,0,c
  5540  007682  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5541  007684                     u1374:
  5542  007684  2E05               	decfsz	??_digitalWrite^0,f,c
  5543  007686  EF40  F03B         	goto	u1375
  5544  00768A  5006               	movf	(??_digitalWrite+1)^0,w,c
  5545  00768C  1281               	iorwf	129,f,c	;volatile
  5546  00768E  EF0C  F03C         	goto	l362
  5547  007692                     l2043:
  5548  007692  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5549  007696  0E01               	movlw	1
  5550  007698  6E06               	movwf	(??_digitalWrite+1)^0,c
  5551  00769A  2A05               	incf	??_digitalWrite^0,f,c
  5552  00769C  EF52  F03B         	goto	u1384
  5553  0076A0                     u1385:
  5554  0076A0  90D8               	bcf	status,0,c
  5555  0076A2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5556  0076A4                     u1384:
  5557  0076A4  2E05               	decfsz	??_digitalWrite^0,f,c
  5558  0076A6  EF50  F03B         	goto	u1385
  5559  0076AA  5006               	movf	(??_digitalWrite+1)^0,w,c
  5560  0076AC  0AFF               	xorlw	255
  5561  0076AE  1681               	andwf	129,f,c	;volatile
  5562  0076B0  EF0C  F03C         	goto	l362
  5563  0076B4                     l2045:
  5564  0076B4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5565  0076B6  EF68  F03B         	goto	u1390
  5566  0076BA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5567  0076BC  E107               	bnz	u1391
  5568  0076BE  0E18               	movlw	24
  5569  0076C0  5C01               	subwf	digitalWrite@pin^0,w,c
  5570  0076C2  B0D8               	btfsc	status,0,c
  5571  0076C4  EF66  F03B         	goto	u1391
  5572  0076C8  EF68  F03B         	goto	u1390
  5573  0076CC                     u1391:
  5574  0076CC  EF96  F03B         	goto	l2053
  5575  0076D0                     u1390:
  5576  0076D0                     
  5577                           ;io.c: 24:         pin -=16;
  5578  0076D0  0EF0               	movlw	240
  5579  0076D2  2601               	addwf	digitalWrite@pin^0,f,c
  5580  0076D4  0EFF               	movlw	255
  5581  0076D6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5582                           
  5583                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  5584  0076D8  5003               	movf	digitalWrite@value^0,w,c
  5585  0076DA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5586  0076DC  B4D8               	btfsc	status,2,c
  5587  0076DE  EF73  F03B         	goto	u1401
  5588  0076E2  EF75  F03B         	goto	u1400
  5589  0076E6                     u1401:
  5590  0076E6  EF85  F03B         	goto	l2051
  5591  0076EA                     u1400:
  5592  0076EA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5593  0076EE  0E01               	movlw	1
  5594  0076F0  6E06               	movwf	(??_digitalWrite+1)^0,c
  5595  0076F2  2A05               	incf	??_digitalWrite^0,f,c
  5596  0076F4  EF7E  F03B         	goto	u1414
  5597  0076F8                     u1415:
  5598  0076F8  90D8               	bcf	status,0,c
  5599  0076FA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5600  0076FC                     u1414:
  5601  0076FC  2E05               	decfsz	??_digitalWrite^0,f,c
  5602  0076FE  EF7C  F03B         	goto	u1415
  5603  007702  5006               	movf	(??_digitalWrite+1)^0,w,c
  5604  007704  1282               	iorwf	130,f,c	;volatile
  5605  007706  EF0C  F03C         	goto	l362
  5606  00770A                     l2051:
  5607  00770A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5608  00770E  0E01               	movlw	1
  5609  007710  6E06               	movwf	(??_digitalWrite+1)^0,c
  5610  007712  2A05               	incf	??_digitalWrite^0,f,c
  5611  007714  EF8E  F03B         	goto	u1424
  5612  007718                     u1425:
  5613  007718  90D8               	bcf	status,0,c
  5614  00771A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5615  00771C                     u1424:
  5616  00771C  2E05               	decfsz	??_digitalWrite^0,f,c
  5617  00771E  EF8C  F03B         	goto	u1425
  5618  007722  5006               	movf	(??_digitalWrite+1)^0,w,c
  5619  007724  0AFF               	xorlw	255
  5620  007726  1682               	andwf	130,f,c	;volatile
  5621  007728  EF0C  F03C         	goto	l362
  5622  00772C                     l2053:
  5623  00772C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5624  00772E  EFA4  F03B         	goto	u1430
  5625  007732  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5626  007734  E107               	bnz	u1431
  5627  007736  0E20               	movlw	32
  5628  007738  5C01               	subwf	digitalWrite@pin^0,w,c
  5629  00773A  B0D8               	btfsc	status,0,c
  5630  00773C  EFA2  F03B         	goto	u1431
  5631  007740  EFA4  F03B         	goto	u1430
  5632  007744                     u1431:
  5633  007744  EFD2  F03B         	goto	l2061
  5634  007748                     u1430:
  5635  007748                     
  5636                           ;io.c: 28:         pin -=24;
  5637  007748  0EE8               	movlw	232
  5638  00774A  2601               	addwf	digitalWrite@pin^0,f,c
  5639  00774C  0EFF               	movlw	255
  5640  00774E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5641                           
  5642                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  5643  007750  5003               	movf	digitalWrite@value^0,w,c
  5644  007752  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5645  007754  B4D8               	btfsc	status,2,c
  5646  007756  EFAF  F03B         	goto	u1441
  5647  00775A  EFB1  F03B         	goto	u1440
  5648  00775E                     u1441:
  5649  00775E  EFC1  F03B         	goto	l2059
  5650  007762                     u1440:
  5651  007762  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5652  007766  0E01               	movlw	1
  5653  007768  6E06               	movwf	(??_digitalWrite+1)^0,c
  5654  00776A  2A05               	incf	??_digitalWrite^0,f,c
  5655  00776C  EFBA  F03B         	goto	u1454
  5656  007770                     u1455:
  5657  007770  90D8               	bcf	status,0,c
  5658  007772  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5659  007774                     u1454:
  5660  007774  2E05               	decfsz	??_digitalWrite^0,f,c
  5661  007776  EFB8  F03B         	goto	u1455
  5662  00777A  5006               	movf	(??_digitalWrite+1)^0,w,c
  5663  00777C  1283               	iorwf	131,f,c	;volatile
  5664  00777E  EF0C  F03C         	goto	l362
  5665  007782                     l2059:
  5666  007782  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5667  007786  0E01               	movlw	1
  5668  007788  6E06               	movwf	(??_digitalWrite+1)^0,c
  5669  00778A  2A05               	incf	??_digitalWrite^0,f,c
  5670  00778C  EFCA  F03B         	goto	u1464
  5671  007790                     u1465:
  5672  007790  90D8               	bcf	status,0,c
  5673  007792  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5674  007794                     u1464:
  5675  007794  2E05               	decfsz	??_digitalWrite^0,f,c
  5676  007796  EFC8  F03B         	goto	u1465
  5677  00779A  5006               	movf	(??_digitalWrite+1)^0,w,c
  5678  00779C  0AFF               	xorlw	255
  5679  00779E  1683               	andwf	131,f,c	;volatile
  5680  0077A0  EF0C  F03C         	goto	l362
  5681  0077A4                     l2061:
  5682  0077A4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5683  0077A6  EFE0  F03B         	goto	u1470
  5684  0077AA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5685  0077AC  E107               	bnz	u1471
  5686  0077AE  0E28               	movlw	40
  5687  0077B0  5C01               	subwf	digitalWrite@pin^0,w,c
  5688  0077B2  B0D8               	btfsc	status,0,c
  5689  0077B4  EFDE  F03B         	goto	u1471
  5690  0077B8  EFE0  F03B         	goto	u1470
  5691  0077BC                     u1471:
  5692  0077BC  EF0C  F03C         	goto	l362
  5693  0077C0                     u1470:
  5694  0077C0                     
  5695                           ;io.c: 32:         pin -=32;
  5696  0077C0  0EE0               	movlw	224
  5697  0077C2  2601               	addwf	digitalWrite@pin^0,f,c
  5698  0077C4  0EFF               	movlw	255
  5699  0077C6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5700                           
  5701                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  5702  0077C8  5003               	movf	digitalWrite@value^0,w,c
  5703  0077CA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5704  0077CC  B4D8               	btfsc	status,2,c
  5705  0077CE  EFEB  F03B         	goto	u1481
  5706  0077D2  EFED  F03B         	goto	u1480
  5707  0077D6                     u1481:
  5708  0077D6  EFFD  F03B         	goto	l2067
  5709  0077DA                     u1480:
  5710  0077DA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5711  0077DE  0E01               	movlw	1
  5712  0077E0  6E06               	movwf	(??_digitalWrite+1)^0,c
  5713  0077E2  2A05               	incf	??_digitalWrite^0,f,c
  5714  0077E4  EFF6  F03B         	goto	u1494
  5715  0077E8                     u1495:
  5716  0077E8  90D8               	bcf	status,0,c
  5717  0077EA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5718  0077EC                     u1494:
  5719  0077EC  2E05               	decfsz	??_digitalWrite^0,f,c
  5720  0077EE  EFF4  F03B         	goto	u1495
  5721  0077F2  5006               	movf	(??_digitalWrite+1)^0,w,c
  5722  0077F4  1284               	iorwf	132,f,c	;volatile
  5723  0077F6  EF0C  F03C         	goto	l362
  5724  0077FA                     l2067:
  5725  0077FA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5726  0077FE  0E01               	movlw	1
  5727  007800  6E06               	movwf	(??_digitalWrite+1)^0,c
  5728  007802  2A05               	incf	??_digitalWrite^0,f,c
  5729  007804  EF06  F03C         	goto	u1504
  5730  007808                     u1505:
  5731  007808  90D8               	bcf	status,0,c
  5732  00780A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5733  00780C                     u1504:
  5734  00780C  2E05               	decfsz	??_digitalWrite^0,f,c
  5735  00780E  EF04  F03C         	goto	u1505
  5736  007812  5006               	movf	(??_digitalWrite+1)^0,w,c
  5737  007814  0AFF               	xorlw	255
  5738  007816  1684               	andwf	132,f,c	;volatile
  5739  007818                     l362:
  5740  007818  0012               	return		;funcret
  5741  00781A                     __end_of_digitalWrite:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function _delayMicro *****************
  5745 ;; Defined at:
  5746 ;;		line 5 in file "lcd.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  a               2    0[COMRAM] int 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  i               2    0        volatile int 
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		None
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5760 ;;      Params:         2       0       0       0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0
  5763 ;;      Totals:         2       0       0       0       0       0       0
  5764 ;;Total ram usage:        2 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_pulseEnablePin
  5770 ;;		_lcdChar
  5771 ;;		_lcdInit
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text33
  5776  006268                     __ptext33:
  5777                           	callstack 0
  5778  006268                     _delayMicro:
  5779                           	callstack 27
  5780  006268  0012               	return		;funcret
  5781  00626A                     __end_of_delayMicro:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function _delayMili *****************
  5785 ;; Defined at:
  5786 ;;		line 10 in file "lcd.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  a               2    0[COMRAM] int 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  i               2    3[COMRAM] volatile int 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		wreg, status,2, status,0
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5800 ;;      Params:         2       0       0       0       0       0       0
  5801 ;;      Locals:         2       0       0       0       0       0       0
  5802 ;;      Temps:          1       0       0       0       0       0       0
  5803 ;;      Totals:         5       0       0       0       0       0       0
  5804 ;;Total ram usage:        5 bytes
  5805 ;; Hardware stack levels used: 1
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_lcdCommand
  5810 ;;		_lcdInit
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text34
  5815  006376                     __ptext34:
  5816                           	callstack 0
  5817  006376                     _delayMili:
  5818                           	callstack 28
  5819  006376                     
  5820                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  5821  006376  0E00               	movlw	0
  5822  006378  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  5823  00637A  0E00               	movlw	0
  5824  00637C  6E04               	movwf	delayMili@i^0,c	;volatile
  5825  00637E  EFC3  F031         	goto	l2105
  5826  006382                     l2103:
  5827                           
  5828                           ;lcd.c: 15:  }
  5829  006382  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  5830  006384  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  5831  006386                     l2105:
  5832  006386  5001               	movf	delayMili@a^0,w,c
  5833  006388  5C04               	subwf	delayMili@i^0,w,c	;volatile
  5834  00638A  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  5835  00638C  0A80               	xorlw	128
  5836  00638E  6E03               	movwf	??_delayMili^0,c
  5837  006390  5002               	movf	(delayMili@a+1)^0,w,c
  5838  006392  0A80               	xorlw	128
  5839  006394  5803               	subwfb	??_delayMili^0,w,c
  5840  006396  A0D8               	btfss	status,0,c
  5841  006398  EFD0  F031         	goto	u1521
  5842  00639C  EFD2  F031         	goto	u1520
  5843  0063A0                     u1521:
  5844  0063A0  EFC1  F031         	goto	l2103
  5845  0063A4                     u1520:
  5846  0063A4  0012               	return		;funcret
  5847  0063A6                     __end_of_delayMili:
  5848                           	callstack 0
  5849                           
  5850 ;; *************** function ___almod *****************
  5851 ;; Defined at:
  5852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\almod.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;  dividend        4   26[COMRAM] long 
  5855 ;;  divisor         4   30[COMRAM] long 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  sign            1   35[COMRAM] unsigned char 
  5858 ;;  counter         1   34[COMRAM] unsigned char 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  4   26[COMRAM] long 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5868 ;;      Params:         8       0       0       0       0       0       0
  5869 ;;      Locals:         2       0       0       0       0       0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0
  5871 ;;      Totals:        10       0       0       0       0       0       0
  5872 ;;Total ram usage:       10 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_operate
  5878 ;;		_main
  5879 ;; This function uses a non-reentrant model
  5880 ;;
  5881                           
  5882                           	psect	text35
  5883  006BA6                     __ptext35:
  5884                           	callstack 0
  5885  006BA6                     ___almod:
  5886                           	callstack 30
  5887  006BA6  0E00               	movlw	0
  5888  006BA8  6E24               	movwf	___almod@sign^0,c
  5889  006BAA  BE1E               	btfsc	(___almod@dividend+3)^0,7,c
  5890  006BAC  EFDC  F035         	goto	u2080
  5891  006BB0  EFDA  F035         	goto	u2081
  5892  006BB4                     u2081:
  5893  006BB4  EFE6  F035         	goto	l2403
  5894  006BB8                     u2080:
  5895  006BB8  1E1E               	comf	(___almod@dividend+3)^0,f,c
  5896  006BBA  1E1D               	comf	(___almod@dividend+2)^0,f,c
  5897  006BBC  1E1C               	comf	(___almod@dividend+1)^0,f,c
  5898  006BBE  6C1B               	negf	___almod@dividend^0,c
  5899  006BC0  0E00               	movlw	0
  5900  006BC2  221C               	addwfc	(___almod@dividend+1)^0,f,c
  5901  006BC4  221D               	addwfc	(___almod@dividend+2)^0,f,c
  5902  006BC6  221E               	addwfc	(___almod@dividend+3)^0,f,c
  5903  006BC8  0E01               	movlw	1
  5904  006BCA  6E24               	movwf	___almod@sign^0,c
  5905  006BCC                     l2403:
  5906  006BCC  BE22               	btfsc	(___almod@divisor+3)^0,7,c
  5907  006BCE  EFED  F035         	goto	u2090
  5908  006BD2  EFEB  F035         	goto	u2091
  5909  006BD6                     u2091:
  5910  006BD6  EFF5  F035         	goto	l2407
  5911  006BDA                     u2090:
  5912  006BDA  1E22               	comf	(___almod@divisor+3)^0,f,c
  5913  006BDC  1E21               	comf	(___almod@divisor+2)^0,f,c
  5914  006BDE  1E20               	comf	(___almod@divisor+1)^0,f,c
  5915  006BE0  6C1F               	negf	___almod@divisor^0,c
  5916  006BE2  0E00               	movlw	0
  5917  006BE4  2220               	addwfc	(___almod@divisor+1)^0,f,c
  5918  006BE6  2221               	addwfc	(___almod@divisor+2)^0,f,c
  5919  006BE8  2222               	addwfc	(___almod@divisor+3)^0,f,c
  5920  006BEA                     l2407:
  5921  006BEA  501F               	movf	___almod@divisor^0,w,c
  5922  006BEC  1020               	iorwf	(___almod@divisor+1)^0,w,c
  5923  006BEE  1021               	iorwf	(___almod@divisor+2)^0,w,c
  5924  006BF0  1022               	iorwf	(___almod@divisor+3)^0,w,c
  5925  006BF2  B4D8               	btfsc	status,2,c
  5926  006BF4  EFFE  F035         	goto	u2101
  5927  006BF8  EF00  F036         	goto	u2100
  5928  006BFC                     u2101:
  5929  006BFC  EF30  F036         	goto	l2423
  5930  006C00                     u2100:
  5931  006C00  0E01               	movlw	1
  5932  006C02  6E23               	movwf	___almod@counter^0,c
  5933  006C04  EF0A  F036         	goto	l2413
  5934  006C08                     l2411:
  5935  006C08  90D8               	bcf	status,0,c
  5936  006C0A  361F               	rlcf	___almod@divisor^0,f,c
  5937  006C0C  3620               	rlcf	(___almod@divisor+1)^0,f,c
  5938  006C0E  3621               	rlcf	(___almod@divisor+2)^0,f,c
  5939  006C10  3622               	rlcf	(___almod@divisor+3)^0,f,c
  5940  006C12  2A23               	incf	___almod@counter^0,f,c
  5941  006C14                     l2413:
  5942  006C14  AE22               	btfss	(___almod@divisor+3)^0,7,c
  5943  006C16  EF0F  F036         	goto	u2111
  5944  006C1A  EF11  F036         	goto	u2110
  5945  006C1E                     u2111:
  5946  006C1E  EF04  F036         	goto	l2411
  5947  006C22                     u2110:
  5948  006C22                     l2415:
  5949  006C22  501F               	movf	___almod@divisor^0,w,c
  5950  006C24  5C1B               	subwf	___almod@dividend^0,w,c
  5951  006C26  5020               	movf	(___almod@divisor+1)^0,w,c
  5952  006C28  581C               	subwfb	(___almod@dividend+1)^0,w,c
  5953  006C2A  5021               	movf	(___almod@divisor+2)^0,w,c
  5954  006C2C  581D               	subwfb	(___almod@dividend+2)^0,w,c
  5955  006C2E  5022               	movf	(___almod@divisor+3)^0,w,c
  5956  006C30  581E               	subwfb	(___almod@dividend+3)^0,w,c
  5957  006C32  A0D8               	btfss	status,0,c
  5958  006C34  EF1E  F036         	goto	u2121
  5959  006C38  EF20  F036         	goto	u2120
  5960  006C3C                     u2121:
  5961  006C3C  EF28  F036         	goto	l2419
  5962  006C40                     u2120:
  5963  006C40  501F               	movf	___almod@divisor^0,w,c
  5964  006C42  5E1B               	subwf	___almod@dividend^0,f,c
  5965  006C44  5020               	movf	(___almod@divisor+1)^0,w,c
  5966  006C46  5A1C               	subwfb	(___almod@dividend+1)^0,f,c
  5967  006C48  5021               	movf	(___almod@divisor+2)^0,w,c
  5968  006C4A  5A1D               	subwfb	(___almod@dividend+2)^0,f,c
  5969  006C4C  5022               	movf	(___almod@divisor+3)^0,w,c
  5970  006C4E  5A1E               	subwfb	(___almod@dividend+3)^0,f,c
  5971  006C50                     l2419:
  5972  006C50  90D8               	bcf	status,0,c
  5973  006C52  3222               	rrcf	(___almod@divisor+3)^0,f,c
  5974  006C54  3221               	rrcf	(___almod@divisor+2)^0,f,c
  5975  006C56  3220               	rrcf	(___almod@divisor+1)^0,f,c
  5976  006C58  321F               	rrcf	___almod@divisor^0,f,c
  5977  006C5A  2E23               	decfsz	___almod@counter^0,f,c
  5978  006C5C  EF11  F036         	goto	l2415
  5979  006C60                     l2423:
  5980  006C60  5024               	movf	___almod@sign^0,w,c
  5981  006C62  B4D8               	btfsc	status,2,c
  5982  006C64  EF36  F036         	goto	u2131
  5983  006C68  EF38  F036         	goto	u2130
  5984  006C6C                     u2131:
  5985  006C6C  EF40  F036         	goto	l2427
  5986  006C70                     u2130:
  5987  006C70  1E1E               	comf	(___almod@dividend+3)^0,f,c
  5988  006C72  1E1D               	comf	(___almod@dividend+2)^0,f,c
  5989  006C74  1E1C               	comf	(___almod@dividend+1)^0,f,c
  5990  006C76  6C1B               	negf	___almod@dividend^0,c
  5991  006C78  0E00               	movlw	0
  5992  006C7A  221C               	addwfc	(___almod@dividend+1)^0,f,c
  5993  006C7C  221D               	addwfc	(___almod@dividend+2)^0,f,c
  5994  006C7E  221E               	addwfc	(___almod@dividend+3)^0,f,c
  5995  006C80                     l2427:
  5996  006C80  C01B  F01B         	movff	___almod@dividend,?___almod
  5997  006C84  C01C  F01C         	movff	___almod@dividend+1,?___almod+1
  5998  006C88  C01D  F01D         	movff	___almod@dividend+2,?___almod+2
  5999  006C8C  C01E  F01E         	movff	___almod@dividend+3,?___almod+3
  6000  006C90  0012               	return		;funcret
  6001  006C92                     __end_of___almod:
  6002                           	callstack 0
  6003                           
  6004 ;; *************** function _kpReadKey *****************
  6005 ;; Defined at:
  6006 ;;		line 17 in file "keypad.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;		None
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  i               2    3[COMRAM] int 
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  1    wreg      unsigned char 
  6013 ;; Registers used:
  6014 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 0/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6020 ;;      Params:         0       0       0       0       0       0       0
  6021 ;;      Locals:         2       0       0       0       0       0       0
  6022 ;;      Temps:          3       0       0       0       0       0       0
  6023 ;;      Totals:         5       0       0       0       0       0       0
  6024 ;;Total ram usage:        5 bytes
  6025 ;; Hardware stack levels used: 1
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_LeTeclado
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text36
  6034  0067B0                     __ptext36:
  6035                           	callstack 0
  6036  0067B0                     _kpReadKey:
  6037                           	callstack 29
  6038  0067B0                     
  6039                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  6040  0067B0  0E00               	movlw	0
  6041  0067B2  6E05               	movwf	(kpReadKey@i+1)^0,c
  6042  0067B4  0E00               	movlw	0
  6043  0067B6  6E04               	movwf	kpReadKey@i^0,c
  6044  0067B8                     l2537:
  6045                           
  6046                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  6047  0067B8  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  6048  0067BC  0E01               	movlw	1
  6049  0067BE  6E02               	movwf	(??_kpReadKey+1)^0,c
  6050  0067C0  0E00               	movlw	0
  6051  0067C2  6E03               	movwf	(??_kpReadKey+2)^0,c
  6052  0067C4  2A01               	incf	??_kpReadKey^0,f,c
  6053  0067C6  EFE8  F033         	goto	u2234
  6054  0067CA                     u2235:
  6055  0067CA  90D8               	bcf	status,0,c
  6056  0067CC  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  6057  0067CE  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  6058  0067D0                     u2234:
  6059  0067D0  2E01               	decfsz	??_kpReadKey^0,f,c
  6060  0067D2  EFE5  F033         	goto	u2235
  6061  0067D6  5057               	movf	_keys^0,w,c
  6062  0067D8  1602               	andwf	(??_kpReadKey+1)^0,f,c
  6063  0067DA  5058               	movf	(_keys+1)^0,w,c
  6064  0067DC  1603               	andwf	(??_kpReadKey+2)^0,f,c
  6065  0067DE  5002               	movf	(??_kpReadKey+1)^0,w,c
  6066  0067E0  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  6067  0067E2  B4D8               	btfsc	status,2,c
  6068  0067E4  EFF6  F033         	goto	u2241
  6069  0067E8  EFF8  F033         	goto	u2240
  6070  0067EC                     u2241:
  6071  0067EC  EF02  F034         	goto	l2543
  6072  0067F0                     u2240:
  6073  0067F0                     
  6074                           ;keypad.c: 21:    return charKey[i];
  6075  0067F0  0ED7               	movlw	low _charKey
  6076  0067F2  2404               	addwf	kpReadKey@i^0,w,c
  6077  0067F4  6EF6               	movwf	tblptrl,c
  6078  0067F6  0E7E               	movlw	high _charKey
  6079  0067F8  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  6080  0067FA  6EF7               	movwf	tblptrh,c
  6081  0067FC                     	if	0	;There are less than 3 active tblptr bytes
  6082  0067FC                     	endif
  6083  0067FC  0008               	tblrd		*
  6084  0067FE  50F5               	movf	tablat,w,c
  6085  006800  EF13  F034         	goto	l186
  6086  006804                     l2543:
  6087                           
  6088                           ;keypad.c: 23:  }
  6089  006804  4A04               	infsnz	kpReadKey@i^0,f,c
  6090  006806  2A05               	incf	(kpReadKey@i+1)^0,f,c
  6091  006808  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  6092  00680A  EF10  F034         	goto	u2251
  6093  00680E  5005               	movf	(kpReadKey@i+1)^0,w,c
  6094  006810  E109               	bnz	u2250
  6095  006812  0E0A               	movlw	10
  6096  006814  5C04               	subwf	kpReadKey@i^0,w,c
  6097  006816  A0D8               	btfss	status,0,c
  6098  006818  EF10  F034         	goto	u2251
  6099  00681C  EF12  F034         	goto	u2250
  6100  006820                     u2251:
  6101  006820  EFDC  F033         	goto	l2537
  6102  006824                     u2250:
  6103  006824                     
  6104                           ;keypad.c: 25:  return 0;
  6105  006824  0E00               	movlw	0
  6106  006826                     l186:
  6107  006826  0012               	return		;funcret
  6108  006828                     __end_of_kpReadKey:
  6109                           	callstack 0
  6110                           
  6111 ;; *************** function _kpRead *****************
  6112 ;; Defined at:
  6113 ;;		line 14 in file "keypad.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;		None
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  2    0[COMRAM] unsigned int 
  6120 ;; Registers used:
  6121 ;;		None
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6127 ;;      Params:         2       0       0       0       0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0
  6130 ;;      Totals:         2       0       0       0       0       0       0
  6131 ;;Total ram usage:        2 bytes
  6132 ;; Hardware stack levels used: 1
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_LeTeclado
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text37
  6141  006274                     __ptext37:
  6142                           	callstack 0
  6143  006274                     _kpRead:
  6144                           	callstack 29
  6145  006274                     
  6146                           ;keypad.c: 15:     return keys;
  6147  006274  C057  F001         	movff	_keys,?_kpRead
  6148  006278  C058  F002         	movff	_keys+1,?_kpRead+1
  6149  00627C  0012               	return		;funcret
  6150  00627E                     __end_of_kpRead:
  6151                           	callstack 0
  6152                           
  6153 ;; *************** function _ConfiguraLed *****************
  6154 ;; Defined at:
  6155 ;;		line 10 in file "led.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;		None
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;		None
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1    wreg      void 
  6162 ;; Registers used:
  6163 ;;		wreg, status,2
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6169 ;;      Params:         0       0       0       0       0       0       0
  6170 ;;      Locals:         0       0       0       0       0       0       0
  6171 ;;      Temps:          0       0       0       0       0       0       0
  6172 ;;      Totals:         0       0       0       0       0       0       0
  6173 ;;Total ram usage:        0 bytes
  6174 ;; Hardware stack levels used: 1
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		_main
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text38
  6183  00626A                     __ptext38:
  6184                           	callstack 0
  6185  00626A                     _ConfiguraLed:
  6186                           	callstack 30
  6187  00626A                     
  6188                           ;led.c: 11:     (*(volatile __near unsigned char*) 0xF95) = 0x00;
  6189  00626A  0E00               	movlw	0
  6190  00626C  6E95               	movwf	149,c	;volatile
  6191                           
  6192                           ;led.c: 12:     (*(volatile __near unsigned char*) 0xF83) = 0x00;
  6193  00626E  0E00               	movlw	0
  6194  006270  6E83               	movwf	131,c	;volatile
  6195  006272  0012               	return		;funcret
  6196  006274                     __end_of_ConfiguraLed:
  6197                           	callstack 0
  6198                           
  6199                           	psect	rparam
  6200  0000                     
  6201                           	psect	idloc
  6202                           
  6203                           ;Config register IDLOC0 @ 0x200000
  6204                           ;	unspecified, using default values
  6205  200000                     	org	2097152
  6206  200000  FF                 	db	255
  6207                           
  6208                           ;Config register IDLOC1 @ 0x200001
  6209                           ;	unspecified, using default values
  6210  200001                     	org	2097153
  6211  200001  FF                 	db	255
  6212                           
  6213                           ;Config register IDLOC2 @ 0x200002
  6214                           ;	unspecified, using default values
  6215  200002                     	org	2097154
  6216  200002  FF                 	db	255
  6217                           
  6218                           ;Config register IDLOC3 @ 0x200003
  6219                           ;	unspecified, using default values
  6220  200003                     	org	2097155
  6221  200003  FF                 	db	255
  6222                           
  6223                           ;Config register IDLOC4 @ 0x200004
  6224                           ;	unspecified, using default values
  6225  200004                     	org	2097156
  6226  200004  FF                 	db	255
  6227                           
  6228                           ;Config register IDLOC5 @ 0x200005
  6229                           ;	unspecified, using default values
  6230  200005                     	org	2097157
  6231  200005  FF                 	db	255
  6232                           
  6233                           ;Config register IDLOC6 @ 0x200006
  6234                           ;	unspecified, using default values
  6235  200006                     	org	2097158
  6236  200006  FF                 	db	255
  6237                           
  6238                           ;Config register IDLOC7 @ 0x200007
  6239                           ;	unspecified, using default values
  6240  200007                     	org	2097159
  6241  200007  FF                 	db	255
  6242                           
  6243                           	psect	config
  6244                           
  6245                           ; Padding undefined space
  6246  300000                     	org	3145728
  6247  300000  FF                 	db	255
  6248                           
  6249                           ;Config register CONFIG1H @ 0x300001
  6250                           ;	unspecified, using default values
  6251                           ;	Oscillator Selection bits
  6252                           ;	OSC = 0x7, unprogrammed default
  6253                           ;	Fail-Safe Clock Monitor Enable bit
  6254                           ;	FCMEN = 0x0, unprogrammed default
  6255                           ;	Internal/External Oscillator Switchover bit
  6256                           ;	IESO = 0x0, unprogrammed default
  6257  300001                     	org	3145729
  6258  300001  07                 	db	7
  6259                           
  6260                           ;Config register CONFIG2L @ 0x300002
  6261                           ;	unspecified, using default values
  6262                           ;	Power-up Timer Enable bit
  6263                           ;	PWRT = 0x1, unprogrammed default
  6264                           ;	Brown-out Reset Enable bits
  6265                           ;	BOREN = 0x3, unprogrammed default
  6266                           ;	Brown Out Reset Voltage bits
  6267                           ;	BORV = 0x3, unprogrammed default
  6268  300002                     	org	3145730
  6269  300002  1F                 	db	31
  6270                           
  6271                           ;Config register CONFIG2H @ 0x300003
  6272                           ;	unspecified, using default values
  6273                           ;	Watchdog Timer Enable bit
  6274                           ;	WDT = 0x1, unprogrammed default
  6275                           ;	Watchdog Timer Postscale Select bits
  6276                           ;	WDTPS = 0xF, unprogrammed default
  6277  300003                     	org	3145731
  6278  300003  1F                 	db	31
  6279                           
  6280                           ; Padding undefined space
  6281  300004                     	org	3145732
  6282  300004  FF                 	db	255
  6283                           
  6284                           ;Config register CONFIG3H @ 0x300005
  6285                           ;	unspecified, using default values
  6286                           ;	CCP2 MUX bit
  6287                           ;	CCP2MX = 0x1, unprogrammed default
  6288                           ;	PORTB A/D Enable bit
  6289                           ;	PBADEN = 0x1, unprogrammed default
  6290                           ;	Low-Power Timer1 Oscillator Enable bit
  6291                           ;	LPT1OSC = 0x0, unprogrammed default
  6292                           ;	MCLR Pin Enable bit
  6293                           ;	MCLRE = 0x1, unprogrammed default
  6294  300005                     	org	3145733
  6295  300005  83                 	db	131
  6296                           
  6297                           ;Config register CONFIG4L @ 0x300006
  6298                           ;	unspecified, using default values
  6299                           ;	Stack Full/Underflow Reset Enable bit
  6300                           ;	STVREN = 0x1, unprogrammed default
  6301                           ;	Single-Supply ICSP Enable bit
  6302                           ;	LVP = 0x1, unprogrammed default
  6303                           ;	Extended Instruction Set Enable bit
  6304                           ;	XINST = 0x0, unprogrammed default
  6305                           ;	Background Debugger Enable bit
  6306                           ;	DEBUG = 0x1, unprogrammed default
  6307  300006                     	org	3145734
  6308  300006  85                 	db	133
  6309                           
  6310                           ; Padding undefined space
  6311  300007                     	org	3145735
  6312  300007  FF                 	db	255
  6313                           
  6314                           ;Config register CONFIG5L @ 0x300008
  6315                           ;	unspecified, using default values
  6316                           ;	Code Protection bit
  6317                           ;	CP0 = 0x1, unprogrammed default
  6318                           ;	Code Protection bit
  6319                           ;	CP1 = 0x1, unprogrammed default
  6320                           ;	Code Protection bit
  6321                           ;	CP2 = 0x1, unprogrammed default
  6322                           ;	Code Protection bit
  6323                           ;	CP3 = 0x1, unprogrammed default
  6324  300008                     	org	3145736
  6325  300008  0F                 	db	15
  6326                           
  6327                           ;Config register CONFIG5H @ 0x300009
  6328                           ;	unspecified, using default values
  6329                           ;	Boot Block Code Protection bit
  6330                           ;	CPB = 0x1, unprogrammed default
  6331                           ;	Data EEPROM Code Protection bit
  6332                           ;	CPD = 0x1, unprogrammed default
  6333  300009                     	org	3145737
  6334  300009  C0                 	db	192
  6335                           
  6336                           ;Config register CONFIG6L @ 0x30000A
  6337                           ;	unspecified, using default values
  6338                           ;	Write Protection bit
  6339                           ;	WRT0 = 0x1, unprogrammed default
  6340                           ;	Write Protection bit
  6341                           ;	WRT1 = 0x1, unprogrammed default
  6342                           ;	Write Protection bit
  6343                           ;	WRT2 = 0x1, unprogrammed default
  6344                           ;	Write Protection bit
  6345                           ;	WRT3 = 0x1, unprogrammed default
  6346  30000A                     	org	3145738
  6347  30000A  0F                 	db	15
  6348                           
  6349                           ;Config register CONFIG6H @ 0x30000B
  6350                           ;	unspecified, using default values
  6351                           ;	Configuration Register Write Protection bit
  6352                           ;	WRTC = 0x1, unprogrammed default
  6353                           ;	Boot Block Write Protection bit
  6354                           ;	WRTB = 0x1, unprogrammed default
  6355                           ;	Data EEPROM Write Protection bit
  6356                           ;	WRTD = 0x1, unprogrammed default
  6357  30000B                     	org	3145739
  6358  30000B  E0                 	db	224
  6359                           
  6360                           ;Config register CONFIG7L @ 0x30000C
  6361                           ;	unspecified, using default values
  6362                           ;	Table Read Protection bit
  6363                           ;	EBTR0 = 0x1, unprogrammed default
  6364                           ;	Table Read Protection bit
  6365                           ;	EBTR1 = 0x1, unprogrammed default
  6366                           ;	Table Read Protection bit
  6367                           ;	EBTR2 = 0x1, unprogrammed default
  6368                           ;	Table Read Protection bit
  6369                           ;	EBTR3 = 0x1, unprogrammed default
  6370  30000C                     	org	3145740
  6371  30000C  0F                 	db	15
  6372                           
  6373                           ;Config register CONFIG7H @ 0x30000D
  6374                           ;	unspecified, using default values
  6375                           ;	Boot Block Table Read Protection bit
  6376                           ;	EBTRB = 0x1, unprogrammed default
  6377  30000D                     	org	3145741
  6378  30000D  40                 	db	64
  6379                           tosu	equ	0xFFF
  6380                           tosh	equ	0xFFE
  6381                           tosl	equ	0xFFD
  6382                           stkptr	equ	0xFFC
  6383                           pclatu	equ	0xFFB
  6384                           pclath	equ	0xFFA
  6385                           pcl	equ	0xFF9
  6386                           tblptru	equ	0xFF8
  6387                           tblptrh	equ	0xFF7
  6388                           tblptrl	equ	0xFF6
  6389                           tablat	equ	0xFF5
  6390                           prodh	equ	0xFF4
  6391                           prodl	equ	0xFF3
  6392                           indf0	equ	0xFEF
  6393                           postinc0	equ	0xFEE
  6394                           postdec0	equ	0xFED
  6395                           preinc0	equ	0xFEC
  6396                           plusw0	equ	0xFEB
  6397                           fsr0h	equ	0xFEA
  6398                           fsr0l	equ	0xFE9
  6399                           wreg	equ	0xFE8
  6400                           indf1	equ	0xFE7
  6401                           postinc1	equ	0xFE6
  6402                           postdec1	equ	0xFE5
  6403                           preinc1	equ	0xFE4
  6404                           plusw1	equ	0xFE3
  6405                           fsr1h	equ	0xFE2
  6406                           fsr1l	equ	0xFE1
  6407                           bsr	equ	0xFE0
  6408                           indf2	equ	0xFDF
  6409                           postinc2	equ	0xFDE
  6410                           postdec2	equ	0xFDD
  6411                           preinc2	equ	0xFDC
  6412                           plusw2	equ	0xFDB
  6413                           fsr2h	equ	0xFDA
  6414                           fsr2l	equ	0xFD9
  6415                           status	equ	0xFD8

Data Sizes:
    Strings     286
    Constant    26
    Data        24
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     62     122
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 18
		 -> STR_22(CODE[14]), STR_21(CODE[14]), STR_20(CODE[16]), STR_19(CODE[18]), 
		 -> STR_18(CODE[13]), STR_17(CODE[16]), STR_16(CODE[16]), STR_15(CODE[16]), 
		 -> STR_14(CODE[17]), STR_13(CODE[16]), STR_12(CODE[17]), STR_11(CODE[16]), 
		 -> STR_10(CODE[12]), STR_9(CODE[16]), STR_8(CODE[13]), STR_7(CODE[9]), 
		 -> STR_6(CODE[12]), STR_5(CODE[9]), STR_4(CODE[17]), STR_3(CODE[9]), 
		 -> STR_2(CODE[12]), STR_1(CODE[18]), 


Critical Paths under _main in COMRAM

    _ssdInit->_pinMode
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _adcInit->_pinMode
    _SetaMeta->_lcdNumber
    _LeTeclado->_operate
    _operate->_ssdDigit
    _verifyGoal->___aldiv
    ___aldiv->___lmul
    _ssdUpdate->_soWrite
    _ssdDigit->___almod
    _lcdString->_lcdChar
    _lcdNumber->___aldiv
    _lcdChar->_pushByte
    ___awmod->___awdiv
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _pulseEnablePin->_digitalWrite
    ___almod->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0  224321
                                             51 COMRAM    11    11      0
                       _ConfiguraLed
                          _LeTeclado
                           _SetaMeta
                            ___aldiv
                            ___almod
                            _adcInit
                         _kpDebounce
                             _kpInit
                            _lcdInit
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   42412
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   18141
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   11233
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2568
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SetaMeta                                             2     2      0   58642
                                             30 COMRAM     2     2      0
                        _DesligarLed
                            _adcRead
                         _lcdCommand
                          _lcdNumber
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _adcRead                                              4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DesligarLed                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LeTeclado                                            0     0      0   80316
                             _kpRead
                          _kpReadKey
                            _operate
 ---------------------------------------------------------------------------------
 (2) _operate                                             13    13      0   80226
                                             38 COMRAM    13    13      0
                            ___aldiv
                            ___almod
                         _lcdCommand
                          _lcdNumber
                          _lcdString
                           _ssdDigit
                          _ssdUpdate
                         _verifyGoal
 ---------------------------------------------------------------------------------
 (3) _verifyGoal                                           7     7      0    2900
                                             26 COMRAM     7     7      0
                           _LigarLed
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     522
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8    2124
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _LigarLed                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   14081
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     784
                                             36 COMRAM     2     1      1
                            ___aldiv (ARG)
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   20197
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdNumber                                            4     2      2   19805
                                             26 COMRAM     4     2      2
                            ___aldiv (ARG)
                            ___awdiv
                            ___awmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   18435
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   18405
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   18033
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   10749
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _pulseEnablePin                                       0     0      0    3712
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    3332
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___almod                                             10     2      8    1816
                                             26 COMRAM    10     2      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      90
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLed                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLed
   _LeTeclado
     _kpRead
     _kpReadKey
     _operate
       ___aldiv
         ___lmul (ARG)
       ___almod
         ___aldiv (ARG)
       _lcdCommand
         _delayMili
         _pushByte
           _digitalWrite
           _pulseEnablePin
             _delayMicro
             _digitalWrite
           _soWrite
             _PulseClockData
               _digitalWrite
             _PulseEnClock
               _digitalWrite
             _digitalWrite
       _lcdNumber
         ___aldiv (ARG)
         ___awdiv (ARG)
         ___awmod (ARG)
           ___awdiv (ARG)
         _lcdChar (ARG)
           _delayMicro
           _pushByte
       _lcdString
         _lcdChar
       _ssdDigit
         ___aldiv (ARG)
         ___almod (ARG)
       _ssdUpdate
         _digitalWrite
         _soWrite
       _verifyGoal
         _LigarLed
         ___aldiv
         ___lmul
   _SetaMeta
     _DesligarLed
     _adcRead
     _lcdCommand
     _lcdNumber
     _lcdString
   ___aldiv
   ___almod
   _adcInit
     _pinMode
   _kpDebounce
     _digitalRead
     _soWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _ssdDigit
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3E      7A       1       96.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7A      15        0.0%
DATA                 0      0      7A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 23:45:28 2021

         _pulseEnablePin 644C             lcdString@msg 000F                       l70 7AF4  
                     l64 7A6E                       l75 7B56                       l94 68B4  
                     l79 7DDE                       l88 7EC4                       l96 68CA  
           ___awdiv@sign 0006                       _v0 005E                       _v1 005D  
                     _v2 005C                       _v3 005B                      l102 6A2C  
                    l200 6EBA                      l202 6ED2                      l107 7354  
                    l123 7388                      l205 63D6                      l222 63A4  
                    l231 66D0                      l216 6268                      l160 6548  
                    l225 648C                      l234 62DC                      l242 62FA  
                    l162 6556                      l163 6572                      l403 644A  
                    l180 627C                      l156 64D4                      l228 6320  
                    l406 6374                      l414 6522                      l254 67AE  
                    l248 65C8                      l432 6290                      l409 634A  
                    l257 6AE0                      l186 6826                      l362 7818  
                    l435 62A6                      l371 7038                      l284 6676  
         DesligarLed@num 0001                      l429 6272                      l701 6BA4  
                    l294 71A8                      l366 703C                      l367 7038  
                    l481 672A                      l297 661E                      l562 6C90  
                    l714 697A                      l482 673A                      l396 7A66  
                    l549 6D9C                      _led 0063             ___awmod@sign 000E  
                    wreg 000FE8      __end_of_DesligarLed 62A8                     l2101 6376  
                   l2103 6382                     l2031 75E8                     l2111 66D2  
                   l2105 6386                     l2041 7672                     l2033 75FA  
                   l2201 6B84                     l2121 6C92                     l2113 66E2  
                   l2051 770A                     l2043 7692                     l2035 761A  
                   l2203 6B94                     l2211 68D0                     l2107 62E0  
                   l2131 6CC6                     l2123 6C96                     l2115 66F0  
                   l2061 77A4                     l2053 772C                     l2045 76B4  
                   l2037 763C                     l2029 75CC                     l2205 6B9C  
                   l2221 6900                     l2213 68DE                     l2109 62EE  
                   l2301 7166                     l2141 6D08                     l2133 6CD6  
                   l2125 6CA4                     l2117 6700                     l2063 77C0  
                   l2055 7748                     l2047 76D0                     l2039 7658  
                   l2071 6322                     l2231 6946                     l2223 6912  
                   l2215 68E6                     l2151 6D5A                     l2143 6D14  
                   l2135 6CDA                     l2127 6CB4                     l2119 670A  
                   l2401 6BC8                     l2065 77DA                     l2057 7762  
                   l2049 76EA                     l2081 64EE                     l2073 64D6  
                   l2241 6972                     l2233 694E                     l2225 691A  
                   l2217 68EA                     l2209 68CC                     l2161 6D8C  
                   l2153 6D5C                     l2145 6D22                     l2137 6CEA  
                   l2129 6CB8                     l2321 7250                     l2313 71AA  
                   l2411 6C08                     l2403 6BCC                     l2067 77FA  
                   l2059 7782                     l2091 644C                     l2083 6506  
                   l2075 64EA                     l2171 6AFC                     l2235 6954  
                   l2227 6922                     l2219 68F8                     l2251 659C  
                   l2307 716E                     l2155 6D66                     l2147 6D2C  
                   l2139 6D00                     l2331 72AC                     l2323 725C  
                   l2315 71C0                     l2421 6C5A                     l2413 6C14  
                   l2405 6BDA                     l2093 6460                     l2069 634C  
                   l2085 650C                     l2245 62C2                     l2181 6B22  
                   l2173 6B00                     l2165 6AE2                     l2229 6930  
                   l2237 695A                     l2253 65A0                     l2261 6622  
                   l2149 6D4A                     l2157 6D6C                     l2341 7318  
                   l2333 72C8                     l2325 7278                     l2317 7234  
                   l2501 7DFC                     l2415 6C22                     l2423 6C60  
                   l2407 6BEA                     l2095 646C                     l2087 650E  
                   l2191 6B58                     l2183 6B34                     l2175 6B0E  
                   l2167 6AE6                     l2239 696A                     l2255 673C  
                   l2247 6574                     l2271 665C                     l2263 6632  
                   l2159 6D7C                     l2351 7366                     l2343 7324  
                   l2335 72D4                     l2327 7284                     l2319 7234  
                   l2511 7E24                     l2503 7E08                     l2431 7A6A  
                   l2425 6C70                     l2417 6C40                     l2409 6C00  
                   l2089 651E                     l2097 667A                     l2193 6B6E  
                   l2185 6B3C                     l2177 6B16                     l2169 6AF4  
                   l2257 6748                     l2249 6580                     l2273 6660  
                   l2265 6636                     l2281 70B6                     l2353 736A  
                   l2345 7340                     l2337 72F0                     l2329 72A0  
                   l2513 7E54                     l2505 7E0C                     l2441 7AC0  
                   l2433 7A7C                     l2361 7868                     l2601 700C  
                   l2531 67B0                     l2427 6C80                     l2419 6C50  
                   l2195 6B76                     l2187 6B44                     l2179 6B1A  
                   l2259 6794                     l2275 6672                     l2267 6646  
                   l2291 7106                     l2283 70CA                     l2099 6280  
                   l2347 734C                     l2339 72FC                     l2515 7E64  
                   l2507 7E12                     l2451 7B16                     l2443 7AD4  
                   l2435 7A88                     l2523 7E82                     l2611 6844  
                   l2371 7902                     l2363 788A                     l2355 781A  
                   l2197 6B78                     l2189 6B52                     l2269 664A  
                   l2293 711E                     l2285 70D2                     l2277 703E  
                   l2349 7360                     l2517 7E6A                     l2509 7E1E  
                   l2461 7B64                     l2453 7B2E                     l2445 7AE0  
                   l2437 7A9C                     l2621 6890                     l2613 6850  
                   l2381 7996                     l2373 791E                     l2365 78A6  
                   l2357 7836                     l2701 6E88                     l2605 640E  
                   l2543 6804                     l2199 6B7E                     l2295 7132  
                   l2287 70EA                     l2279 709E                     l2519 7E72  
                   l2471 7BA2                     l2463 7B6A                     l2447 7B02  
                   l2439 7AB4                     l2623 68A0                     l2615 6856  
                   l2551 6524                     l2631 69BE                     l2391 7A20  
                   l2383 79A8                     l2375 7930                     l2367 78B8  
                   l2359 7848                     l2711 6EB2                     l2607 62FE  
                   l2529 6274                     l2545 6808                     l2537 67B8  
                   l2297 713A                     l2289 70FE                     l2481 7D78  
                   l2473 7BA8                     l2465 7B7A                     l2457 7B42  
                   l2625 68C4                     l2617 6864                     l2609 6828  
                   l2561 656A                     l2553 653E                     l2641 69F2  
                   l2633 69CE                     l2393 7A44                     l2385 79CC  
                   l2377 7954                     l2369 78DC                     l2713 6ECA  
                   l2705 6E90                     l2721 73A2                     l2547 6824  
                   l2539 67F0                     l2395 6BA6                     l2299 7152  
                   l2483 7D86                     l2475 7BB4                     l2467 7B90  
                   l2619 6878                     l2555 6546                     l2651 6A0C  
                   l2643 69FE                     l2635 69D4                     l2627 697C  
                   l2387 79F2                     l2379 797A                     l2707 6EA8  
                   l2731 73BA                     l2723 73A6                     l2715 738A  
                   l2397 6BAA                     l2485 7D96                     l2477 7BC0  
                   l2469 7B96                     l2565 6294                     l2557 655C  
                   l2653 6A10                     l2637 69E0                     l2629 699A  
                   l2389 7A0E                     l2709 6EAE                     l2661 6AB4  
                   l2733 73CA                     l2741 73D6                     l2717 7396  
                   l2399 6BB8                     l2495 7DAE                     l2487 7DA2  
                   l2479 7BC8                     l2559 6562                     l2639 69E6  
                   l2591 6FA8                     l2583 6F60                     l2575 6F18  
                   l2567 6ED4                     l2671 63A6                     l2663 6AC2  
                   l2655 6A2E                     l2735 73CE                     l2727 73AE  
                   l2743 7410                     l2719 739A                     l2497 7DB2  
                   l2489 7DA6                     l2649 6A06                     l2681 64CA  
                   l2593 6FC4                     l2585 6F7C                     l2577 6F34  
                   l2569 6EF0                     l2673 63D2                     l2665 6ACE  
                   l2657 6A8E                     l2745 75C0                     l2833 73EA  
                   l2729 73B2                     l2835 7E96                     l2499 7DCE  
                   l2683 64CC                     l2667 6AD4                     l2659 6A9A  
                   l2675 65CA                     l2677 626A                     l2837 7182  
                   l2685 64D0                     l2693 6DCE                     l2669 6ADA  
                   l2679 648E                     l2599 6FF0                     l2695 6E1A  
                   l2687 6D9E                     l2697 6E40                     l2689 6DAE  
                   l2699 6E5E                     STR_1 7EE1                     STR_2 7FDE  
                   STR_3 7FF6                     STR_4 7F05                     STR_5 7FF6  
                   STR_6 7FDE                     STR_7 7FF6                     STR_8 7FD1  
                   STR_9 7F38                     u2000 7996                     u2001 7992  
                   u2010 79A8                     u2011 79A4                     u2100 6C00  
                   u2101 6BFC                     u2110 6C22                     u1310 75E8  
                   u2111 6C1E                     u1311 75E4                     u2120 6C40  
                   u1400 76EA                     u1320 75FA                     u2200 7D86  
                   u2040 7A0E                     u2024 79BE                     u2121 6C3C  
                   u1401 76E6                     u1321 75F6                     u2201 7D82  
                   u2041 7A0A                     u2025 79BA                     u2130 6C70  
                   u2210 7DCE                     u2050 7A20                     u2034 79E2  
                   u2131 6C6C                     u2211 7DCA                     u2051 7A1C  
                   u2035 79DE                     u2220 7DFC                     u2140 7A7C  
                   u2300 6F34                     u2221 7DF8                     u2141 7A78  
                   u2301 6F30                     u1430 7748                     u1414 76FC  
                   u1350 7658                     u1334 760C                     u1510 651E  
                   u2150 7AB4                     u1431 7744                     u1415 76F8  
                   u1351 7654                     u1335 7608                     u1511 651A  
                   u2151 7AB0                     u2240 67F0                     u2080 6BB8  
                   u1520 63A4                     u1504 780C                     u1440 7762  
                   u1424 771C                     u1360 7672                     u1344 762C  
                   u1600 6D7C                     u2160 7B02                     u2400 6890  
                   u2064 7A36                     u2320 6F7C                     u2241 67EC  
                   u2081 6BB4                     u1521 63A0                     u1505 7808  
                   u1441 775E                     u1425 7718                     u1361 766E  
                   u1345 7628                     u1601 6D78                     u2161 7AFE  
                   u2401 688C                     u2065 7A32                     u2321 6F78  
                   u2250 6824                     u2234 67D0                     u2090 6BDA  
                   u1610 6AF4                     u1530 66F0                     u2170 7B2E  
                   u2410 69BE                     u2074 7A5A                     u2314 6F4A  
                   u2251 6820                     u2235 67CA                     u2091 6BD6  
                   u1611 6AF0                     u1531 66EC                     u2171 7B2A  
                   u2411 69BA                     u2075 7A56                     u2315 6F46  
                   u1620 6B0E                     u1700 6930                     u1540 672A  
                   u2180 7B64                     u2260 653E                     u2420 6A2C  
                   u2340 6FC4                     u2500 6ECA                     u1621 6B0A  
                   u1701 692C                     u1541 6726                     u2181 7B60  
                   u2261 653A                     u2421 6A28                     u2341 6FC0  
                   u2501 6EC6                     u1470 77C0                     u1454 7774  
                   u1390 76D0                     u1374 7684                     u1630 6B34  
                   u1710 6946                     u1550 6CA4                     u2190 7B90  
                   u2270 6556                     u2334 6F92                     u2430 6DCA  
                   u2510 73CA                     u1471 77BC                     u1455 7770  
                   u1391 76CC                     u1375 7680                     u1631 6B30  
                   u1711 6942                     u1551 6CA0                     u2191 7B8C  
                   u2271 6552                     u2335 6F8E                     u2431 6DC6  
                   u2511 73C6                     u1480 77DA                     u1464 7794  
                   u1384 76A4                     u1640 6B52                     u1720 696A  
                   u1560 6CC6                     u1800 7250                     u2360 700C  
                   u2280 6EF0                     u1481 77D6                     u1465 7790  
                   u1385 76A0                     u1641 6B4E                     u1721 6966  
                   u1561 6CC2                     u1801 724C                     u2361 7008  
                   u2281 6EEC                     u1650 6B6E                     u1730 65C8  
                   u1570 6D00                     u1810 7278                     u2354 6FDA  
                   u2450 6E1A                     u1651 6B6A                     u1731 65C4  
                   u1571 6CFC                     u1811 7274                     u2355 6FD6  
                   u2451 6E16                     u1660 6B94                     u1740 67AE  
                   u1580 6D22                     u1820 72A0                     u2380 6844  
                   u2444 6DEA                     u1661 6B90                     u1741 67AA  
                   u1581 6D1E                     u1821 729C                     u2381 6840  
                   u2445 6DE4                     u1494 77EC                     u1670 68DE  
                   u1750 6632                     u1590 6D4A                     u1830 72C8  
                   u2390 6864                     u2374 7022                     u2294 6F02  
                   u2470 6E5E                     u1495 77E8                     u1671 68DA  
                   u1751 662E                     u1591 6D46                     u1831 72C4  
                   u2391 6860                     u2375 701E                     u2295 6EFE  
                   u2471 6E5A                     u1680 68F8                     u1760 6646  
                   u1840 72F0                     u1920 78A6                     u1904 785A  
                   u2464 6E32                     u1681 68F4                     u1761 6642  
                   u1841 72EC                     u1921 78A2                     u1905 7856  
                   u2465 6E2C                     u1690 6912                     u1770 665C  
                   u1850 7318                     u1930 78B8                     u1914 787A  
                   u2490 6EA8                     u1691 690E                     u1771 6658  
                   u1851 7314                     u1931 78B4                     u1915 7876  
                   u2491 6EA4                     u1780 6672                     u1860 7340  
                   u2484 6E7A                     u1781 666E                     u1861 733C  
                   u2485 6E74                     u1870 7388                     u1790 71C0  
                   u1871 7384                     u1791 71BC                     u1960 791E  
                   u1944 78CE                     u1880 7836                     u1961 791A  
                   u1945 78CA                     u1881 7832                     u1970 7930  
                   u1954 78F2                     u1890 7848                     u1971 792C  
                   u1955 78EE                     u1891 7844                     u1984 7946  
                   u1985 7942                     u1994 796A                     u1995 7966  
                   _PIR1 000F9E                     _main 738A                     _keys 0057  
       ??_PulseClockData 0007                     _time 004F                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9              LigarLed@num 0001  
                   start 0000          pushNibble@value 000C             _totalStudied 004B  
           ___param_bank 000000   __end_of_pulseEnablePin 648E          __end_of___aldiv 6D9E  
        __end_of___almod 6C92                    ?_main 0001          __end_of_adcInit 64D6  
        __end_of_adcRead 6574          __end_of___awdiv 6BA6                    STR_10 7FEA  
                  STR_11 7F78                    STR_20 7F58                    STR_12 7F16  
                  STR_21 7FA8                    STR_13 7F48                    STR_22 7FB6  
                  STR_14 7F27                    STR_15 7F68                    STR_16 7F98  
                  STR_17 7F88                    STR_18 7FC4                    STR_19 7EF3  
        __end_of___awmod 697C                    _T0CON 000FD5          ___awdiv@divisor 0003  
        ___awdiv@counter 0005                    _RCREG 000FAE                    _RCSTA 000FAB  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _SPBRG 000FAF  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84          __end_of_charKey 7EE1  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
                  _TXSTA 000FAC          __end_of_lcdChar 62FC      ___lmul@multiplicand 0005  
        __end_of_lcdInit 6AE2                    _tecla 0062                    _reset 006B  
        __end_of_pinMode 7A68                    _valor 7EC7          __end_of_operate 7EC6  
        __end_of_soWrite 6524                    tablat 000FF5          __end_of_ssdInit 6620  
                  status 000FD8             pushNibble@rs 000A     __end_of_digitalWrite 781A  
        __initialization 63D8          ?_pulseEnablePin 0001             __end_of_main 75CC  
       __end_of_LigarLed 6292                   ??_main 0034       __size_of_LeTeclado 00A4  
   __end_of_ConfiguraLed 6274              _DesligarLed 6292         __end_of_SetaMeta 6A2E  
          __activetblptr 000002     __size_of_digitalRead 016A                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0001                   _INTCON 000FF2  
                 _SPBRGH 000FB0                   ___lmul 66D2                ??___aldiv 0015  
              ??___almod 0023                ??_adcInit 0007                ??_adcRead 0003  
              ??___awdiv 0005                ??___awmod 000D                   _enable 0061  
                 _kpInit 63A6                   _kpRead 6274                   clear_0 63FE  
                 _soInit 640E         ___awdiv@quotient 0007          ___awmod@divisor 000B  
              ??_lcdChar 000E                   isa$std 000001                ??_lcdInit 000F  
        ___awmod@counter 000D         __end_of_ssdDigit 6678             __pdataCOMRAM 0063  
              ??_pinMode 0005             __mediumconst 7EC6                   tblptrh 000FF7  
                 tblptrl 000FF6                ??_operate 0027                   tblptru 000FF8  
              ??_soWrite 0009                ??_ssdInit 0007         __end_of_pushByte 66D2  
             __accesstop 0080  __end_of__initialization 6404        __end_of_LeTeclado 68CC  
          ___rparam_used 000001            pushByte@value 000D              pinMode@type 0003  
         __pcstackCOMRAM 0001            __end_of_valor 7ED7       __size_of_delayMili 0030  
     __size_of_lcdNumber 0074       __size_of_lcdString 0056       __size_of_kpReadKey 0078  
              ?_LigarLed 0001    __size_of_digitalWrite 024E               _delayMicro 6268  
              ?_SetaMeta 0001                  ?___lmul 0001               _lcdCommand 62C0  
  __size_of_ConfiguraLed 000A                  ?_kpInit 0001                  ?_kpRead 0001  
                _BAUDCON 000FB8           ___lmul@product 0009                  ?_soInit 0001  
             _kpDebounce 6D9E       __size_of_ssdUpdate 016C             _digitalWrite 75CC  
             ??_LigarLed 0001        __end_of_delayMili 63A6         ??_pulseEnablePin 0007  
           _ConfiguraLed 626A               ??_SetaMeta 001F                  __Hparam 0000  
      __end_of_lcdNumber 67B0                  __Lparam 0000                ?_ssdDigit 0025  
      __end_of_lcdString 65CA           verifyGoal@test 0020          kpDebounce@tempo 0060  
                ___aldiv 6C92        __end_of_kpReadKey 6828                  ___almod 6BA6  
                _adcInit 648E                  _adcRead 6524                  ___awdiv 6AE2  
        __size_of___lmul 006A                  ___awmod 68CC                ?_pushByte 000A  
        __size_of_kpInit 0032          __size_of_kpRead 000A                  _charKey 7ED7  
            ssdDigit@val 0026              ssdDigit@pos 0025                  __pcinit 63D8  
                _lcdChar 62DE                  __ramtop 0600          __size_of_soInit 003E  
                _lcdInit 6A2E                  __ptext0 738A                  __ptext1 65CA  
                __ptext2 6A2E                  __ptext3 62FC                  __ptext4 63A6  
                __ptext5 640E                  __ptext6 6D9E                  __ptext7 6ED4  
                __ptext8 648E                  __ptext9 781A             ?_DesligarLed 0001  
                _display 005F                  _pinMode 781A         ___awmod@dividend 0009  
       ___aldiv@dividend 000D               delayMili@a 0001                  _operate 7A68  
             delayMili@i 0004                  _soWrite 64D6                  _ssdInit 65CA  
   end_of_initialization 6404            ?_PulseEnClock 0001            __Lmediumconst 7EC6  
         digitalRead@pin 0001              ?_delayMicro 0001        __end_of_ssdUpdate 71AA  
             ??_ssdDigit 0026         ___aldiv@quotient 0017                  postdec1 000FE5  
            ?_lcdCommand 0001                  postinc0 000FEE               ??_pushByte 000C  
__size_of_PulseClockData 002A            ??_digitalRead 0003              ?_kpDebounce 0001  
             lcdNumber@i 001D               _verifyGoal 71AA               _pushNibble 62FC  
             lcdString@i 0013           ??_PulseEnClock 0007               _totalBreak 0047  
             kpReadKey@i 0004                _LeTeclado 6828           __end_of___lmul 673C  
         adcRead@ADvalor 0003            __pidataCOMRAM 62A8              verifyGoal@i 001C  
            verifyGoal@j 001E           __end_of_kpInit 63D8           __end_of_kpRead 627E  
         __end_of_soInit 644C      __size_of_delayMicro 0002      start_initialization 63D8  
    __end_of_digitalRead 703E                SetaMeta@i 001F      __size_of_lcdCommand 001E  
    __size_of_kpDebounce 0136        __size_of_LigarLed 0014           adcRead@channel 0001  
             ?_LeTeclado 0001        kpDebounce@oldRead 0053        kpDebounce@newRead 0055  
               ??___lmul 0009        __size_of_SetaMeta 00B2                 ??_kpInit 0007  
               ??_kpRead 0003                 ??_soInit 0007              ?_verifyGoal 0001  
            __pbssCOMRAM 003F     __size_of_DesligarLed 0016              ?_pushNibble 000A  
             pinMode@pin 0001                _delayMili 6376                _main$1188 0036  
              _main$1189 003A                _breakTime 0073            __pmediumconst 7EC6  
               ?___aldiv 000D                 ?___almod 001B                 ?_adcInit 0001  
               ?_adcRead 0001                 ?___awdiv 0001                 ?___awmod 0009  
      __size_of_ssdDigit 0058           _PulseClockData 6322                _lcdNumber 673C  
   __end_of_PulseEnClock 6376                _lcdString 6574              _digitalRead 6ED4  
               ?_lcdChar 0001         ___almod@dividend 001B        __size_of_pushByte 005A  
               ?_lcdInit 0001                _kpReadKey 67B0             _oldStudyGoal 003F  
               ?_pinMode 0001                 ?_operate 0001                 ?_soWrite 0007  
               ?_ssdInit 0001          ___aldiv@divisor 0011          ___aldiv@counter 0015  
           ??_delayMicro 0003               ?_delayMili 0001      __size_of_verifyGoal 01E0  
            ??_LeTeclado 0034   __end_of_PulseClockData 634C      __size_of_pushNibble 0026  
           ??_lcdCommand 000E                _ssdUpdate 703E               ?_lcdNumber 001B  
             ?_lcdString 000F             ??_kpDebounce 000A               ?_kpReadKey 0001  
        lcdCommand@value 000E       __end_of_delayMicro 626A                _studyGoal 0043  
              _studyTime 0077        ___lmul@multiplier 0001                copy_data0 63EC  
     __end_of_lcdCommand 62DE                 _LigarLed 627E               pushByte@rs 000A  
           lcdChar@value 000E       __end_of_kpDebounce 6ED4                 _SetaMeta 697C  
               __Hrparam 0000                 __Lrparam 0000          ?_PulseClockData 0001  
             ?_ssdUpdate 0001         __size_of___aldiv 010C         __size_of___almod 00EC  
       __size_of_adcInit 0048         __size_of_adcRead 0050         __size_of___awdiv 00C4  
       __size_of___awmod 00B0  __size_of_pulseEnablePin 0042           lcdNumber@value 001B  
               _bigBreak 006F         __size_of_lcdChar 001E         __size_of_lcdInit 00B4  
           _operate$1186 0029             _operate$1187 002D         __size_of_pinMode 024E  
               __ptext10 697C                 __ptext11 6524                 __ptext20 6620  
               __ptext12 6292                 __ptext21 6574                 __ptext13 6828  
           operate@tempo 0032                 __ptext30 6322                 __ptext22 673C  
               __ptext14 7A68                 __ptext31 644C                 __ptext23 62DE  
               __ptext15 71AA                 __ptext32 75CC                 __ptext24 68CC  
               __ptext16 66D2                 __ptext33 6268                 __ptext25 6AE2  
               __ptext17 6C92                 __ptext34 6376                 __ptext26 62C0  
               __ptext18 627E                 __ptext35 6BA6                 __ptext27 6678  
               __ptext19 703E                 __ptext36 67B0                 __ptext28 64D6  
               __ptext37 6274                 __ptext29 634C                 __ptext38 626A  
       __size_of_operate 045E         __size_of_soWrite 004E         __size_of_ssdInit 0056  
        ___almod@divisor 001F          ___almod@counter 0023            __size_of_main 0242  
               _oldValue 0059                operate@op 0031              ??_delayMili 0003  
  __size_of_PulseEnClock 002A                 _ssdDigit 6620              delayMicro@a 0001  
               isa$xinst 000000             soWrite@value 0007                 _pushByte 6678  
            ??_lcdNumber 001D              ??_lcdString 0011                 main@slot 003E  
            ??_kpReadKey 0001             ??_verifyGoal 001B             ??_pushNibble 000C  
          ?_digitalWrite 0001             _PulseEnClock 634C        digitalWrite@value 0003  
          ?_ConfiguraLed 0001                 soWrite@i 0009       __end_of_verifyGoal 738A  
            ??_ssdUpdate 000A       __end_of_pushNibble 6322             ?_digitalRead 0001  
          ??_DesligarLed 0001              kpDebounce@i 000D           ??_digitalWrite 0005  
           ___aldiv@sign 0016          digitalWrite@pin 0001             ___almod@sign 0024  
         ??_ConfiguraLed 0001  

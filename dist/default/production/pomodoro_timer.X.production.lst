

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 23:20:31 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4520 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  0062C6                     __pidataCOMRAM:
    92                           	callstack 0
    93                           
    94                           ;initializer for _led
    95  0062C6  01                 	db	1
    96  0062C7  02                 	db	2
    97  0062C8  04                 	db	4
    98  0062C9  08                 	db	8
    99  0062CA  20                 	db	32
   100  0062CB  10                 	db	16
   101  0062CC  40                 	db	64
   102  0062CD  80                 	db	128
   103                           
   104                           ;initializer for _reset
   105  0062CE  0001               	dw	1
   106  0062D0  0000               	dw	0
   107                           
   108                           ;initializer for _bigBreak
   109  0062D2  A5E0               	dw	42464
   110  0062D4  0001               	dw	1
   111                           
   112                           ;initializer for _breakTime
   113  0062D6  4650               	dw	18000
   114  0062D8  0000               	dw	0
   115                           
   116                           ;initializer for _studyTime
   117  0062DA  4650               	dw	18000
   118  0062DC  0000               	dw	0
   119                           
   120                           	psect	mediumconst
   121  007EC6                     __pmediumconst:
   122                           	callstack 0
   123  007EC6  00                 	db	0
   124  007EC7                     _valor:
   125                           	callstack 0
   126  007EC7  3F                 	db	63
   127  007EC8  06                 	db	6
   128  007EC9  5B                 	db	91
   129  007ECA  4F                 	db	79
   130  007ECB  66                 	db	102
   131  007ECC  6D                 	db	109
   132  007ECD  7D                 	db	125
   133  007ECE  07                 	db	7
   134  007ECF  7F                 	db	127
   135  007ED0  6F                 	db	111
   136  007ED1  77                 	db	119
   137  007ED2  7C                 	db	124
   138  007ED3  39                 	db	57
   139  007ED4  5E                 	db	94
   140  007ED5  79                 	db	121
   141  007ED6  71                 	db	113
   142  007ED7                     __end_of_valor:
   143                           	callstack 0
   144  007ED7                     _charKey:
   145                           	callstack 0
   146  007ED7  55                 	db	85
   147  007ED8  4C                 	db	76
   148  007ED9  44                 	db	68
   149  007EDA  52                 	db	82
   150  007EDB  53                 	db	83
   151  007EDC  58                 	db	88
   152  007EDD  41                 	db	65
   153  007EDE  42                 	db	66
   154  007EDF  59                 	db	89
   155  007EE0  73                 	db	115
   156  007EE1                     __end_of_charKey:
   157                           	callstack 0
   158  0000                     _SPBRG	set	4015
   159  0000                     _SPBRGH	set	4016
   160  0000                     _BAUDCON	set	4024
   161  0000                     _TXSTA	set	4012
   162  0000                     _RCREG	set	4014
   163  0000                     _RCSTA	set	4011
   164  0000                     _TXREG	set	4013
   165  0000                     _PIR1	set	3998
   166  0000                     _TRISE	set	3990
   167  0000                     _TRISD	set	3989
   168  0000                     _TRISC	set	3988
   169  0000                     _TRISB	set	3987
   170  0000                     _TRISA	set	3986
   171  0000                     _PORTE	set	3972
   172  0000                     _PORTD	set	3971
   173  0000                     _PORTC	set	3970
   174  0000                     _PORTB	set	3969
   175  0000                     _PORTA	set	3968
   176  0000                     _T0CON	set	4053
   177  0000                     _TMR0L	set	4054
   178  0000                     _TMR0H	set	4055
   179  0000                     _INTCON	set	4082
   180  0000                     _ADRESL	set	4035
   181  0000                     _ADRESH	set	4036
   182  0000                     _ADCON2	set	4032
   183  0000                     _ADCON1	set	4033
   184  0000                     _ADCON0	set	4034
   185  007EE1                     STR_1:
   186  007EE1  48                 	db	72	;'H'
   187  007EE2  6F                 	db	111	;'o'
   188  007EE3  72                 	db	114	;'r'
   189  007EE4  61                 	db	97	;'a'
   190  007EE5  20                 	db	32
   191  007EE6  64                 	db	100	;'d'
   192  007EE7  6F                 	db	111	;'o'
   193  007EE8  20                 	db	32
   194  007EE9  64                 	db	100	;'d'
   195  007EEA  65                 	db	101	;'e'
   196  007EEB  73                 	db	115	;'s'
   197  007EEC  63                 	db	99	;'c'
   198  007EED  61                 	db	97	;'a'
   199  007EEE  6E                 	db	110	;'n'
   200  007EEF  73                 	db	115	;'s'
   201  007EF0  6F                 	db	111	;'o'
   202  007EF1  21                 	db	33
   203  007EF2  00                 	db	0
   204  007EF3  70                 	db	112	;'p'
   205  007EF4  72                 	db	114	;'r'
   206  007EF5  6F                 	db	111	;'o'
   207  007EF6  78                 	db	120	;'x'
   208  007EF7  69                 	db	105	;'i'
   209  007EF8  6D                 	db	109	;'m'
   210  007EF9  6F                 	db	111	;'o'
   211  007EFA  20                 	db	32
   212  007EFB  69                 	db	105	;'i'
   213  007EFC  6E                 	db	110	;'n'
   214  007EFD  74                 	db	116	;'t'
   215  007EFE  65                 	db	101	;'e'
   216  007EFF  72                 	db	114	;'r'
   217  007F00  76                 	db	118	;'v'
   218  007F01  61                 	db	97	;'a'
   219  007F02  6C                 	db	108	;'l'
   220  007F03  6F                 	db	111	;'o'
   221  007F04  00                 	db	0
   222  007F05  61                 	db	97	;'a'
   223  007F06  75                 	db	117	;'u'
   224  007F07  6D                 	db	109	;'m'
   225  007F08  65                 	db	101	;'e'
   226  007F09  6E                 	db	110	;'n'
   227  007F0A  74                 	db	116	;'t'
   228  007F0B  61                 	db	97	;'a'
   229  007F0C  72                 	db	114	;'r'
   230  007F0D  20                 	db	32
   231  007F0E  6F                 	db	111	;'o'
   232  007F0F  20                 	db	32
   233  007F10  74                 	db	116	;'t'
   234  007F11  65                 	db	101	;'e'
   235  007F12  6D                 	db	109	;'m'
   236  007F13  70                 	db	112	;'p'
   237  007F14  6F                 	db	111	;'o'
   238  007F15  00                 	db	0
   239  007F16  64                 	db	100	;'d'
   240  007F17  69                 	db	105	;'i'
   241  007F18  6D                 	db	109	;'m'
   242  007F19  69                 	db	105	;'i'
   243  007F1A  6E                 	db	110	;'n'
   244  007F1B  75                 	db	117	;'u'
   245  007F1C  69                 	db	105	;'i'
   246  007F1D  72                 	db	114	;'r'
   247  007F1E  20                 	db	32
   248  007F1F  6F                 	db	111	;'o'
   249  007F20  20                 	db	32
   250  007F21  74                 	db	116	;'t'
   251  007F22  65                 	db	101	;'e'
   252  007F23  6D                 	db	109	;'m'
   253  007F24  70                 	db	112	;'p'
   254  007F25  6F                 	db	111	;'o'
   255  007F26  00                 	db	0
   256  007F27  50                 	db	80	;'P'
   257  007F28  6F                 	db	111	;'o'
   258  007F29  6D                 	db	109	;'m'
   259  007F2A  6F                 	db	111	;'o'
   260  007F2B  64                 	db	100	;'d'
   261  007F2C  6F                 	db	111	;'o'
   262  007F2D  72                 	db	114	;'r'
   263  007F2E  6F                 	db	111	;'o'
   264  007F2F  20                 	db	32
   265  007F30  54                 	db	84	;'T'
   266  007F31  69                 	db	105	;'i'
   267  007F32  6D                 	db	109	;'m'
   268  007F33  65                 	db	101	;'e'
   269  007F34  72                 	db	114	;'r'
   270  007F35  21                 	db	33
   271  007F36  00                 	db	0
   272  007F37  41                 	db	65	;'A'
   273  007F38  70                 	db	112	;'p'
   274  007F39  65                 	db	101	;'e'
   275  007F3A  72                 	db	114	;'r'
   276  007F3B  74                 	db	116	;'t'
   277  007F3C  65                 	db	101	;'e'
   278  007F3D  20                 	db	32
   279  007F3E  27                 	db	39
   280  007F3F  44                 	db	68	;'D'
   281  007F40  27                 	db	39
   282  007F41  20                 	db	32
   283  007F42  70                 	db	112	;'p'
   284  007F43  61                 	db	97	;'a'
   285  007F44  72                 	db	114	;'r'
   286  007F45  61                 	db	97	;'a'
   287  007F46  00                 	db	0
   288  007F47  44                 	db	68	;'D'
   289  007F48  69                 	db	105	;'i'
   290  007F49  67                 	db	103	;'g'
   291  007F4A  69                 	db	105	;'i'
   292  007F4B  74                 	db	116	;'t'
   293  007F4C  65                 	db	101	;'e'
   294  007F4D  20                 	db	32
   295  007F4E  27                 	db	39
   296  007F4F  47                 	db	71	;'G'
   297  007F50  27                 	db	39
   298  007F51  20                 	db	32
   299  007F52  70                 	db	112	;'p'
   300  007F53  61                 	db	97	;'a'
   301  007F54  72                 	db	114	;'r'
   302  007F55  61                 	db	97	;'a'
   303  007F56  00                 	db	0
   304  007F57  41                 	db	65	;'A'
   305  007F58  70                 	db	112	;'p'
   306  007F59  65                 	db	101	;'e'
   307  007F5A  72                 	db	114	;'r'
   308  007F5B  74                 	db	116	;'t'
   309  007F5C  65                 	db	101	;'e'
   310  007F5D  20                 	db	32
   311  007F5E  27                 	db	39
   312  007F5F  53                 	db	83	;'S'
   313  007F60  27                 	db	39
   314  007F61  20                 	db	32
   315  007F62  70                 	db	112	;'p'
   316  007F63  61                 	db	97	;'a'
   317  007F64  72                 	db	114	;'r'
   318  007F65  61                 	db	97	;'a'
   319  007F66  00                 	db	0
   320  007F67  41                 	db	65	;'A'
   321  007F68  70                 	db	112	;'p'
   322  007F69  65                 	db	101	;'e'
   323  007F6A  72                 	db	114	;'r'
   324  007F6B  74                 	db	116	;'t'
   325  007F6C  65                 	db	101	;'e'
   326  007F6D  20                 	db	32
   327  007F6E  27                 	db	39
   328  007F6F  55                 	db	85	;'U'
   329  007F70  27                 	db	39
   330  007F71  20                 	db	32
   331  007F72  70                 	db	112	;'p'
   332  007F73  61                 	db	97	;'a'
   333  007F74  72                 	db	114	;'r'
   334  007F75  61                 	db	97	;'a'
   335  007F76  00                 	db	0
   336  007F77  41                 	db	65	;'A'
   337  007F78  70                 	db	112	;'p'
   338  007F79  65                 	db	101	;'e'
   339  007F7A  72                 	db	114	;'r'
   340  007F7B  74                 	db	116	;'t'
   341  007F7C  65                 	db	101	;'e'
   342  007F7D  20                 	db	32
   343  007F7E  27                 	db	39
   344  007F7F  73                 	db	115	;'s'
   345  007F80  27                 	db	39
   346  007F81  20                 	db	32
   347  007F82  70                 	db	112	;'p'
   348  007F83  61                 	db	97	;'a'
   349  007F84  72                 	db	114	;'r'
   350  007F85  61                 	db	97	;'a'
   351  007F86  00                 	db	0
   352  007F87  63                 	db	99	;'c'
   353  007F88  6F                 	db	111	;'o'
   354  007F89  6D                 	db	109	;'m'
   355  007F8A  65                 	db	101	;'e'
   356  007F8B  63                 	db	99	;'c'
   357  007F8C  61                 	db	97	;'a'
   358  007F8D  72                 	db	114	;'r'
   359  007F8E  20                 	db	32
   360  007F8F  6F                 	db	111	;'o'
   361  007F90  20                 	db	32
   362  007F91  74                 	db	116	;'t'
   363  007F92  69                 	db	105	;'i'
   364  007F93  6D                 	db	109	;'m'
   365  007F94  65                 	db	101	;'e'
   366  007F95  72                 	db	114	;'r'
   367  007F96  00                 	db	0
   368  007F97  73                 	db	115	;'s'
   369  007F98  65                 	db	101	;'e'
   370  007F99  74                 	db	116	;'t'
   371  007F9A  61                 	db	97	;'a'
   372  007F9B  72                 	db	114	;'r'
   373  007F9C  20                 	db	32
   374  007F9D  6D                 	db	109	;'m'
   375  007F9E  65                 	db	101	;'e'
   376  007F9F  74                 	db	116	;'t'
   377  007FA0  61                 	db	97	;'a'
   378  007FA1  20                 	db	32
   379  007FA2  64                 	db	100	;'d'
   380  007FA3  65                 	db	101	;'e'
   381  007FA4  00                 	db	0
   382  007FA5  65                 	db	101	;'e'
   383  007FA6  73                 	db	115	;'s'
   384  007FA7  74                 	db	116	;'t'
   385  007FA8  75                 	db	117	;'u'
   386  007FA9  64                 	db	100	;'d'
   387  007FAA  6F                 	db	111	;'o'
   388  007FAB  20                 	db	32
   389  007FAC  65                 	db	101	;'e'
   390  007FAD  6D                 	db	109	;'m'
   391  007FAE  20                 	db	32
   392  007FAF  6D                 	db	109	;'m'
   393  007FB0  69                 	db	105	;'i'
   394  007FB1  6E                 	db	110	;'n'
   395  007FB2  00                 	db	0
   396  007FB3  70                 	db	112	;'p'
   397  007FB4  75                 	db	117	;'u'
   398  007FB5  6C                 	db	108	;'l'
   399  007FB6  61                 	db	97	;'a'
   400  007FB7  72                 	db	114	;'r'
   401  007FB8  20                 	db	32
   402  007FB9  70                 	db	112	;'p'
   403  007FBA  61                 	db	97	;'a'
   404  007FBB  72                 	db	114	;'r'
   405  007FBC  61                 	db	97	;'a'
   406  007FBD  20                 	db	32
   407  007FBE  6F                 	db	111	;'o'
   408  007FBF  00                 	db	0
   409  007FC0  42                 	db	66	;'B'
   410  007FC1  65                 	db	101	;'e'
   411  007FC2  6D                 	db	109	;'m'
   412  007FC3  2D                 	db	45
   413  007FC4  76                 	db	118	;'v'
   414  007FC5  69                 	db	105	;'i'
   415  007FC6  6E                 	db	110	;'n'
   416  007FC7  64                 	db	100	;'d'
   417  007FC8  6F                 	db	111	;'o'
   418  007FC9  20                 	db	32
   419  007FCA  61                 	db	97	;'a'
   420  007FCB  6F                 	db	111	;'o'
   421  007FCC  00                 	db	0
   422  007FCD                     STR_2:
   423  007FCD  41                 	db	65	;'A'
   424  007FCE  74                 	db	116	;'t'
   425  007FCF  75                 	db	117	;'u'
   426  007FD0  61                 	db	97	;'a'
   427  007FD1  6C                 	db	108	;'l'
   428  007FD2  20                 	db	32
   429  007FD3  6D                 	db	109	;'m'
   430  007FD4  65                 	db	101	;'e'
   431  007FD5  74                 	db	116	;'t'
   432  007FD6  61                 	db	97	;'a'
   433  007FD7  3A                 	db	58	;':'
   434  007FD8  00                 	db	0
   435  007FD9  49                 	db	73	;'I'
   436  007FDA  6E                 	db	110	;'n'
   437  007FDB  73                 	db	115	;'s'
   438  007FDC  74                 	db	116	;'t'
   439  007FDD  72                 	db	114	;'r'
   440  007FDE  75                 	db	117	;'u'
   441  007FDF  63                 	db	99	;'c'
   442  007FE0  6F                 	db	111	;'o'
   443  007FE1  65                 	db	101	;'e'
   444  007FE2  73                 	db	115	;'s'
   445  007FE3  3A                 	db	58	;':'
   446  007FE4  00                 	db	0
   447  007FE5                     STR_3:
   448  007FE5  20                 	db	32
   449  007FE6  6D                 	db	109	;'m'
   450  007FE7  69                 	db	105	;'i'
   451  007FE8  6E                 	db	110	;'n'
   452  007FE9  75                 	db	117	;'u'
   453  007FEA  74                 	db	116	;'t'
   454  007FEB  6F                 	db	111	;'o'
   455  007FEC  73                 	db	115	;'s'
   456  007FED  00                 	db	0
   457  007FEE                     STR_7:
   458  007FEE  61                 	db	97	;'a'
   459  007FEF  71                 	db	113	;'q'
   460  007FF0  75                 	db	117	;'u'
   461  007FF1  69                 	db	105	;'i'
   462  007FF2  3A                 	db	58	;':'
   463  007FF3  20                 	db	32
   464  007FF4  00                 	db	0
   465  007FF5                     STR_6:
   466  007FF5  74                 	db	116	;'t'
   467  007FF6  65                 	db	101	;'e'
   468  007FF7  73                 	db	115	;'s'
   469  007FF8  74                 	db	116	;'t'
   470  007FF9  3A                 	db	58	;':'
   471  007FFA  20                 	db	32
   472  007FFB  00                 	db	0
   473  007FFC                     STR_8:
   474  007FFC  41                 	db	65	;'A'
   475  007FFD  00                 	db	0
   476  007FFE  00                 	db	0	; dummy byte at the end
   477  0000                     
   478                           ; #config settings
   479                           
   480                           	psect	cinit
   481  0063F6                     __pcinit:
   482                           	callstack 0
   483  0063F6                     start_initialization:
   484                           	callstack 0
   485  0063F6                     __initialization:
   486                           	callstack 0
   487                           
   488                           ; Initialize objects allocated to COMRAM (24 bytes)
   489                           ; load TBLPTR registers with __pidataCOMRAM
   490  0063F6  0EC6               	movlw	low __pidataCOMRAM
   491  0063F8  6EF6               	movwf	tblptrl,c
   492  0063FA  0E62               	movlw	high __pidataCOMRAM
   493  0063FC  6EF7               	movwf	tblptrh,c
   494  0063FE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   495  006400  6EF8               	movwf	tblptru,c
   496  006402  EE00  F063         	lfsr	0,__pdataCOMRAM
   497  006406  EE10 F018          	lfsr	1,24
   498  00640A                     copy_data0:
   499  00640A  0009               	tblrd		*+
   500  00640C  CFF5 FFEE          	movff	tablat,postinc0
   501  006410  50E5               	movf	postdec1,w,c
   502  006412  50E1               	movf	fsr1l,w,c
   503  006414  E1FA               	bnz	copy_data0
   504                           
   505                           ; Clear objects allocated to COMRAM (36 bytes)
   506  006416  EE00  F03F         	lfsr	0,__pbssCOMRAM
   507  00641A  0E24               	movlw	36
   508  00641C                     clear_0:
   509  00641C  6AEE               	clrf	postinc0,c
   510  00641E  06E8               	decf	wreg,f,c
   511  006420  E1FD               	bnz	clear_0
   512  006422                     end_of_initialization:
   513                           	callstack 0
   514  006422                     __end_of__initialization:
   515                           	callstack 0
   516  006422  0E00               	movlw	low (__Lmediumconst shr (0+16))
   517  006424  6EF8               	movwf	tblptru,c
   518  006426  0100               	movlb	0
   519  006428  EFEF  F039         	goto	_main	;jump to C main() function
   520                           
   521                           	psect	bssCOMRAM
   522  00003F                     __pbssCOMRAM:
   523                           	callstack 0
   524  00003F                     _oldStudyGoal:
   525                           	callstack 0
   526  00003F                     	ds	4
   527  000043                     _studyGoal:
   528                           	callstack 0
   529  000043                     	ds	4
   530  000047                     _totalBreak:
   531                           	callstack 0
   532  000047                     	ds	4
   533  00004B                     _totalStudied:
   534                           	callstack 0
   535  00004B                     	ds	4
   536  00004F                     _time:
   537                           	callstack 0
   538  00004F                     	ds	4
   539  000053                     kpDebounce@oldRead:
   540                           	callstack 0
   541  000053                     	ds	2
   542  000055                     kpDebounce@newRead:
   543                           	callstack 0
   544  000055                     	ds	2
   545  000057                     _keys:
   546                           	callstack 0
   547  000057                     	ds	2
   548  000059                     _oldValue:
   549                           	callstack 0
   550  000059                     	ds	2
   551  00005B                     _v3:
   552                           	callstack 0
   553  00005B                     	ds	1
   554  00005C                     _v2:
   555                           	callstack 0
   556  00005C                     	ds	1
   557  00005D                     _v1:
   558                           	callstack 0
   559  00005D                     	ds	1
   560  00005E                     _v0:
   561                           	callstack 0
   562  00005E                     	ds	1
   563  00005F                     _display:
   564                           	callstack 0
   565  00005F                     	ds	1
   566  000060                     kpDebounce@tempo:
   567                           	callstack 0
   568  000060                     	ds	1
   569  000061                     _enable:
   570                           	callstack 0
   571  000061                     	ds	1
   572  000062                     _tecla:
   573                           	callstack 0
   574  000062                     	ds	1
   575                           
   576                           	psect	dataCOMRAM
   577  000063                     __pdataCOMRAM:
   578                           	callstack 0
   579  000063                     _led:
   580                           	callstack 0
   581  000063                     	ds	8
   582  00006B                     _reset:
   583                           	callstack 0
   584  00006B                     	ds	4
   585  00006F                     _bigBreak:
   586                           	callstack 0
   587  00006F                     	ds	4
   588  000073                     _breakTime:
   589                           	callstack 0
   590  000073                     	ds	4
   591  000077                     _studyTime:
   592                           	callstack 0
   593  000077                     	ds	4
   594                           
   595                           	psect	cstackCOMRAM
   596  000001                     __pcstackCOMRAM:
   597                           	callstack 0
   598  000001                     ??_kpReadKey:
   599  000001                     ?_kpRead:
   600                           	callstack 0
   601  000001                     ?_adcRead:
   602                           	callstack 0
   603  000001                     ?_digitalRead:
   604                           	callstack 0
   605  000001                     ?___awdiv:
   606                           	callstack 0
   607  000001                     ?___lmul:
   608                           	callstack 0
   609  000001                     LigarLed@num:
   610                           	callstack 0
   611  000001                     DesligarLed@num:
   612                           	callstack 0
   613  000001                     adcRead@channel:
   614                           	callstack 0
   615  000001                     delayMicro@a:
   616                           	callstack 0
   617  000001                     delayMili@a:
   618                           	callstack 0
   619  000001                     digitalWrite@pin:
   620                           	callstack 0
   621  000001                     digitalRead@pin:
   622                           	callstack 0
   623  000001                     pinMode@pin:
   624                           	callstack 0
   625  000001                     ___awdiv@dividend:
   626                           	callstack 0
   627  000001                     ___lmul@multiplier:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x0
   631  000001                     	ds	2
   632  000003                     ??_digitalRead:
   633  000003                     ??_delayMili:
   634  000003                     adcRead@ADvalor:
   635                           	callstack 0
   636  000003                     digitalWrite@value:
   637                           	callstack 0
   638  000003                     pinMode@type:
   639                           	callstack 0
   640  000003                     ___awdiv@divisor:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x2
   644  000003                     	ds	1
   645  000004                     kpReadKey@i:
   646                           	callstack 0
   647  000004                     delayMili@i:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x3
   651  000004                     	ds	1
   652  000005                     ??_pinMode:
   653  000005                     ??_digitalWrite:
   654  000005                     ___awdiv@counter:
   655                           	callstack 0
   656  000005                     ___lmul@multiplicand:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0x4
   660  000005                     	ds	1
   661  000006                     ___awdiv@sign:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x5
   665  000006                     	ds	1
   666  000007                     soWrite@value:
   667                           	callstack 0
   668  000007                     ___awdiv@quotient:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x6
   672  000007                     	ds	2
   673  000009                     ?___awmod:
   674                           	callstack 0
   675  000009                     soWrite@i:
   676                           	callstack 0
   677  000009                     ___awmod@dividend:
   678                           	callstack 0
   679  000009                     ___lmul@product:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x8
   683  000009                     	ds	1
   684  00000A                     ??_ssdUpdate:
   685  00000A                     ??_kpDebounce:
   686  00000A                     pushNibble@rs:
   687                           	callstack 0
   688  00000A                     pushByte@rs:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x9
   692  00000A                     	ds	1
   693  00000B                     ___awmod@divisor:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0xA
   697  00000B                     	ds	1
   698  00000C                     ??_pushByte:
   699  00000C                     pushNibble@value:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0xB
   703  00000C                     	ds	1
   704  00000D                     ?___aldiv:
   705                           	callstack 0
   706  00000D                     pushByte@value:
   707                           	callstack 0
   708  00000D                     ___awmod@counter:
   709                           	callstack 0
   710  00000D                     kpDebounce@i:
   711                           	callstack 0
   712  00000D                     ___aldiv@dividend:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0xC
   716  00000D                     	ds	1
   717  00000E                     lcdCommand@value:
   718                           	callstack 0
   719  00000E                     lcdChar@value:
   720                           	callstack 0
   721  00000E                     ___awmod@sign:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0xD
   725  00000E                     	ds	1
   726  00000F                     lcdString@msg:
   727                           	callstack 0
   728  00000F                     lcdNumber@value:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0xE
   732  00000F                     	ds	2
   733  000011                     ??_lcdString:
   734  000011                     lcdNumber@i:
   735                           	callstack 0
   736  000011                     ___aldiv@divisor:
   737                           	callstack 0
   738                           
   739                           ; 4 bytes @ 0x10
   740  000011                     	ds	2
   741  000013                     lcdString@i:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x12
   745  000013                     	ds	2
   746  000015                     ___aldiv@counter:
   747                           	callstack 0
   748  000015                     SetaMeta@i:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x14
   752  000015                     	ds	1
   753  000016                     ___aldiv@sign:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x15
   757  000016                     	ds	1
   758  000017                     ___aldiv@quotient:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x16
   762  000017                     	ds	4
   763  00001B                     ??_verifyGoal:
   764  00001B                     ?___almod:
   765                           	callstack 0
   766  00001B                     ___almod@dividend:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x1A
   770  00001B                     	ds	1
   771  00001C                     verifyGoal@i:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x1B
   775  00001C                     	ds	2
   776  00001E                     verifyGoal@j:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x1D
   780  00001E                     	ds	1
   781  00001F                     ___almod@divisor:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x1E
   785  00001F                     	ds	1
   786  000020                     verifyGoal@test:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x1F
   790  000020                     	ds	3
   791  000023                     ___almod@counter:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x22
   795  000023                     	ds	1
   796  000024                     ___almod@sign:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x23
   800  000024                     	ds	1
   801  000025                     ssdDigit@pos:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0x24
   805  000025                     	ds	1
   806  000026                     ssdDigit@val:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x25
   810  000026                     	ds	1
   811  000027                     ??_operate:
   812                           
   813                           ; 1 bytes @ 0x26
   814  000027                     	ds	2
   815  000029                     _operate$1189:
   816                           	callstack 0
   817                           
   818                           ; 4 bytes @ 0x28
   819  000029                     	ds	4
   820  00002D                     _operate$1190:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x2C
   824  00002D                     	ds	4
   825  000031                     operate@op:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x30
   829  000031                     	ds	1
   830  000032                     operate@tempo:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x31
   834  000032                     	ds	2
   835  000034                     ??_main:
   836                           
   837                           ; 1 bytes @ 0x33
   838  000034                     	ds	2
   839  000036                     _main$1191:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x35
   843  000036                     	ds	4
   844  00003A                     _main$1192:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x39
   848  00003A                     	ds	4
   849  00003E                     main@slot:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x3D
   853  00003E                     	ds	1
   854                           
   855 ;;
   856 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   857 ;;
   858 ;; *************** function _main *****************
   859 ;; Defined at:
   860 ;;		line 163 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  slot            1   61[COMRAM] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   874 ;;      Params:         0       0       0       0       0       0       0
   875 ;;      Locals:         9       0       0       0       0       0       0
   876 ;;      Temps:          2       0       0       0       0       0       0
   877 ;;      Totals:        11       0       0       0       0       0       0
   878 ;;Total ram usage:       11 bytes
   879 ;; Hardware stack levels required when called: 9
   880 ;; This function calls:
   881 ;;		_ConfiguraLed
   882 ;;		_LeTeclado
   883 ;;		_SetaMeta
   884 ;;		___aldiv
   885 ;;		___almod
   886 ;;		_adcInit
   887 ;;		_kpDebounce
   888 ;;		_kpInit
   889 ;;		_lcdInit
   890 ;;		_ssdDigit
   891 ;;		_ssdInit
   892 ;;		_ssdUpdate
   893 ;; This function is called by:
   894 ;;		Startup code after reset
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text0
   899  0073DE                     __ptext0:
   900                           	callstack 0
   901  0073DE                     _main:
   902                           	callstack 22
   903  0073DE                     
   904                           ;main.c: 164:     char slot;;main.c: 166:     lcdInit();
   905  0073DE  EC26  F035         	call	_lcdInit	;wreg free
   906                           
   907                           ;main.c: 167:     kpInit();
   908  0073E2  ECE2  F031         	call	_kpInit	;wreg free
   909                           
   910                           ;main.c: 168:     ssdInit();
   911  0073E6  ECF4  F032         	call	_ssdInit	;wreg free
   912  0073EA                     
   913                           ;main.c: 170:     ConfiguraLed();
   914  0073EA  EC44  F031         	call	_ConfiguraLed	;wreg free
   915  0073EE                     
   916                           ;main.c: 171:     adcInit();
   917  0073EE  EC56  F032         	call	_adcInit	;wreg free
   918  0073F2  EF15  F03A         	goto	l2747
   919  0073F6                     l2727:
   920                           
   921                           ;main.c: 182:                 LeTeclado();
   922  0073F6  EC23  F034         	call	_LeTeclado	;wreg free
   923  0073FA                     l2729:
   924                           
   925                           ;main.c: 183:                 slot = 2;
   926  0073FA  0E02               	movlw	2
   927  0073FC  6E3E               	movwf	main@slot^0,c
   928                           
   929                           ;main.c: 184:                 break;
   930  0073FE  EF32  F03A         	goto	l2749
   931  007402                     l2733:
   932                           
   933                           ;main.c: 190:                 kpDebounce();
   934  007402  ECDE  F036         	call	_kpDebounce	;wreg free
   935  007406                     
   936                           ;main.c: 191:                 slot = 3;
   937  007406  0E03               	movlw	3
   938  007408  6E3E               	movwf	main@slot^0,c
   939                           
   940                           ;main.c: 192:                 break;
   941  00740A  EF32  F03A         	goto	l2749
   942  00740E                     l2737:
   943                           
   944                           ;main.c: 194:                 if (enable == 1) {
   945  00740E  0461               	decf	_enable^0,w,c
   946  007410  A4D8               	btfss	status,2,c
   947  007412  EF0D  F03A         	goto	u2511
   948  007416  EF0F  F03A         	goto	u2510
   949  00741A                     u2511:
   950  00741A  EF11  F03A         	goto	l2741
   951  00741E                     u2510:
   952  00741E                     
   953                           ;main.c: 195:                     SetaMeta();
   954  00741E  ECCD  F034         	call	_SetaMeta	;wreg free
   955  007422                     l2741:
   956                           
   957                           ;main.c: 197:                 slot = 0;
   958  007422  0E00               	movlw	0
   959  007424  6E3E               	movwf	main@slot^0,c
   960                           
   961                           ;main.c: 198:                 break;
   962  007426  EF32  F03A         	goto	l2749
   963  00742A                     l2747:
   964  00742A  503E               	movf	main@slot^0,w,c
   965  00742C  6E34               	movwf	??_main^0,c
   966  00742E  6A35               	clrf	(??_main+1)^0,c
   967                           
   968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   969                           ; Switch size 1, requested type "simple"
   970                           ; Number of cases is 1, Range of values is 0 to 0
   971                           ; switch strategies available:
   972                           ; Name         Instructions Cycles
   973                           ; simple_byte            4     3 (average)
   974                           ;	Chosen strategy is simple_byte
   975  007430  5035               	movf	(??_main+1)^0,w,c
   976  007432  0A00               	xorlw	0	; case 0
   977  007434  B4D8               	btfsc	status,2,c
   978  007436  EF1F  F03A         	goto	l2839
   979  00743A  EF11  F03A         	goto	l2741
   980  00743E                     l2839:
   981                           
   982                           ; Switch size 1, requested type "simple"
   983                           ; Number of cases is 4, Range of values is 0 to 3
   984                           ; switch strategies available:
   985                           ; Name         Instructions Cycles
   986                           ; simple_byte           13     7 (average)
   987                           ;	Chosen strategy is simple_byte
   988  00743E  5034               	movf	??_main^0,w,c
   989  007440  0A00               	xorlw	0	; case 0
   990  007442  B4D8               	btfsc	status,2,c
   991  007444  EFFB  F039         	goto	l2727
   992  007448  0A01               	xorlw	1	; case 1
   993  00744A  B4D8               	btfsc	status,2,c
   994  00744C  EFFD  F039         	goto	l2729
   995  007450  0A03               	xorlw	3	; case 2
   996  007452  B4D8               	btfsc	status,2,c
   997  007454  EF01  F03A         	goto	l2733
   998  007458  0A01               	xorlw	1	; case 3
   999  00745A  B4D8               	btfsc	status,2,c
  1000  00745C  EF07  F03A         	goto	l2737
  1001  007460  EF11  F03A         	goto	l2741
  1002  007464                     l2749:
  1003                           
  1004                           ;main.c: 203:         ssdDigit(((time / 3600) % 24) / 10, 0);
  1005  007464  0E18               	movlw	24
  1006  007466  6E1F               	movwf	___almod@divisor^0,c
  1007  007468  0E00               	movlw	0
  1008  00746A  6E20               	movwf	(___almod@divisor+1)^0,c
  1009  00746C  0E00               	movlw	0
  1010  00746E  6E21               	movwf	(___almod@divisor+2)^0,c
  1011  007470  0E00               	movlw	0
  1012  007472  6E22               	movwf	(___almod@divisor+3)^0,c
  1013  007474  0E10               	movlw	16
  1014  007476  6E11               	movwf	___aldiv@divisor^0,c
  1015  007478  0E0E               	movlw	14
  1016  00747A  6E12               	movwf	(___aldiv@divisor+1)^0,c
  1017  00747C  0E00               	movlw	0
  1018  00747E  6E13               	movwf	(___aldiv@divisor+2)^0,c
  1019  007480  0E00               	movlw	0
  1020  007482  6E14               	movwf	(___aldiv@divisor+3)^0,c
  1021  007484  C04F  F00D         	movff	_time,___aldiv@dividend
  1022  007488  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  1023  00748C  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  1024  007490  C052  F010         	movff	_time+3,___aldiv@dividend+3
  1025  007494  EC58  F036         	call	___aldiv	;wreg free
  1026  007498  C00D  F01B         	movff	?___aldiv,___almod@dividend
  1027  00749C  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  1028  0074A0  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  1029  0074A4  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  1030  0074A8  ECE2  F035         	call	___almod	;wreg free
  1031  0074AC  C01B  F036         	movff	?___almod,_main$1191
  1032  0074B0  C01C  F037         	movff	?___almod+1,_main$1191+1
  1033  0074B4  C01D  F038         	movff	?___almod+2,_main$1191+2
  1034  0074B8  C01E  F039         	movff	?___almod+3,_main$1191+3
  1035                           
  1036                           ;main.c: 203:         ssdDigit(((time / 3600) % 24) / 10, 0);
  1037  0074BC  0E00               	movlw	0
  1038  0074BE  6E25               	movwf	ssdDigit@pos^0,c
  1039  0074C0  C036  F00D         	movff	_main$1191,___aldiv@dividend
  1040  0074C4  C037  F00E         	movff	_main$1191+1,___aldiv@dividend+1
  1041  0074C8  C038  F00F         	movff	_main$1191+2,___aldiv@dividend+2
  1042  0074CC  C039  F010         	movff	_main$1191+3,___aldiv@dividend+3
  1043  0074D0  0E0A               	movlw	10
  1044  0074D2  6E11               	movwf	___aldiv@divisor^0,c
  1045  0074D4  0E00               	movlw	0
  1046  0074D6  6E12               	movwf	(___aldiv@divisor+1)^0,c
  1047  0074D8  0E00               	movlw	0
  1048  0074DA  6E13               	movwf	(___aldiv@divisor+2)^0,c
  1049  0074DC  0E00               	movlw	0
  1050  0074DE  6E14               	movwf	(___aldiv@divisor+3)^0,c
  1051  0074E0  EC58  F036         	call	___aldiv	;wreg free
  1052  0074E4  500D               	movf	?___aldiv^0,w,c
  1053  0074E6  EC1F  F033         	call	_ssdDigit
  1054                           
  1055                           ;main.c: 204:         ssdDigit(((time / 3600) % 24) % 10, 1);
  1056  0074EA  0E18               	movlw	24
  1057  0074EC  6E1F               	movwf	___almod@divisor^0,c
  1058  0074EE  0E00               	movlw	0
  1059  0074F0  6E20               	movwf	(___almod@divisor+1)^0,c
  1060  0074F2  0E00               	movlw	0
  1061  0074F4  6E21               	movwf	(___almod@divisor+2)^0,c
  1062  0074F6  0E00               	movlw	0
  1063  0074F8  6E22               	movwf	(___almod@divisor+3)^0,c
  1064  0074FA  0E10               	movlw	16
  1065  0074FC  6E11               	movwf	___aldiv@divisor^0,c
  1066  0074FE  0E0E               	movlw	14
  1067  007500  6E12               	movwf	(___aldiv@divisor+1)^0,c
  1068  007502  0E00               	movlw	0
  1069  007504  6E13               	movwf	(___aldiv@divisor+2)^0,c
  1070  007506  0E00               	movlw	0
  1071  007508  6E14               	movwf	(___aldiv@divisor+3)^0,c
  1072  00750A  C04F  F00D         	movff	_time,___aldiv@dividend
  1073  00750E  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  1074  007512  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  1075  007516  C052  F010         	movff	_time+3,___aldiv@dividend+3
  1076  00751A  EC58  F036         	call	___aldiv	;wreg free
  1077  00751E  C00D  F01B         	movff	?___aldiv,___almod@dividend
  1078  007522  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  1079  007526  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  1080  00752A  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  1081  00752E  ECE2  F035         	call	___almod	;wreg free
  1082  007532  C01B  F03A         	movff	?___almod,_main$1192
  1083  007536  C01C  F03B         	movff	?___almod+1,_main$1192+1
  1084  00753A  C01D  F03C         	movff	?___almod+2,_main$1192+2
  1085  00753E  C01E  F03D         	movff	?___almod+3,_main$1192+3
  1086                           
  1087                           ;main.c: 204:         ssdDigit(((time / 3600) % 24) % 10, 1);
  1088  007542  0E01               	movlw	1
  1089  007544  6E25               	movwf	ssdDigit@pos^0,c
  1090  007546  C03A  F01B         	movff	_main$1192,___almod@dividend
  1091  00754A  C03B  F01C         	movff	_main$1192+1,___almod@dividend+1
  1092  00754E  C03C  F01D         	movff	_main$1192+2,___almod@dividend+2
  1093  007552  C03D  F01E         	movff	_main$1192+3,___almod@dividend+3
  1094  007556  0E0A               	movlw	10
  1095  007558  6E1F               	movwf	___almod@divisor^0,c
  1096  00755A  0E00               	movlw	0
  1097  00755C  6E20               	movwf	(___almod@divisor+1)^0,c
  1098  00755E  0E00               	movlw	0
  1099  007560  6E21               	movwf	(___almod@divisor+2)^0,c
  1100  007562  0E00               	movlw	0
  1101  007564  6E22               	movwf	(___almod@divisor+3)^0,c
  1102  007566  ECE2  F035         	call	___almod	;wreg free
  1103  00756A  501B               	movf	?___almod^0,w,c
  1104  00756C  EC1F  F033         	call	_ssdDigit
  1105                           
  1106                           ;main.c: 205:         ssdDigit((time / 600) % 6, 2);
  1107  007570  0E02               	movlw	2
  1108  007572  6E25               	movwf	ssdDigit@pos^0,c
  1109  007574  0E58               	movlw	88
  1110  007576  6E11               	movwf	___aldiv@divisor^0,c
  1111  007578  0E02               	movlw	2
  1112  00757A  6E12               	movwf	(___aldiv@divisor+1)^0,c
  1113  00757C  0E00               	movlw	0
  1114  00757E  6E13               	movwf	(___aldiv@divisor+2)^0,c
  1115  007580  0E00               	movlw	0
  1116  007582  6E14               	movwf	(___aldiv@divisor+3)^0,c
  1117  007584  C04F  F00D         	movff	_time,___aldiv@dividend
  1118  007588  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  1119  00758C  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  1120  007590  C052  F010         	movff	_time+3,___aldiv@dividend+3
  1121  007594  EC58  F036         	call	___aldiv	;wreg free
  1122  007598  C00D  F01B         	movff	?___aldiv,___almod@dividend
  1123  00759C  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  1124  0075A0  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  1125  0075A4  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  1126  0075A8  0E06               	movlw	6
  1127  0075AA  6E1F               	movwf	___almod@divisor^0,c
  1128  0075AC  0E00               	movlw	0
  1129  0075AE  6E20               	movwf	(___almod@divisor+1)^0,c
  1130  0075B0  0E00               	movlw	0
  1131  0075B2  6E21               	movwf	(___almod@divisor+2)^0,c
  1132  0075B4  0E00               	movlw	0
  1133  0075B6  6E22               	movwf	(___almod@divisor+3)^0,c
  1134  0075B8  ECE2  F035         	call	___almod	;wreg free
  1135  0075BC  501B               	movf	?___almod^0,w,c
  1136  0075BE  EC1F  F033         	call	_ssdDigit
  1137                           
  1138                           ;main.c: 206:         ssdDigit((time / 60) % 10, 3);
  1139  0075C2  0E03               	movlw	3
  1140  0075C4  6E25               	movwf	ssdDigit@pos^0,c
  1141  0075C6  0E3C               	movlw	60
  1142  0075C8  6E11               	movwf	___aldiv@divisor^0,c
  1143  0075CA  0E00               	movlw	0
  1144  0075CC  6E12               	movwf	(___aldiv@divisor+1)^0,c
  1145  0075CE  0E00               	movlw	0
  1146  0075D0  6E13               	movwf	(___aldiv@divisor+2)^0,c
  1147  0075D2  0E00               	movlw	0
  1148  0075D4  6E14               	movwf	(___aldiv@divisor+3)^0,c
  1149  0075D6  C04F  F00D         	movff	_time,___aldiv@dividend
  1150  0075DA  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  1151  0075DE  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  1152  0075E2  C052  F010         	movff	_time+3,___aldiv@dividend+3
  1153  0075E6  EC58  F036         	call	___aldiv	;wreg free
  1154  0075EA  C00D  F01B         	movff	?___aldiv,___almod@dividend
  1155  0075EE  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  1156  0075F2  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  1157  0075F6  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  1158  0075FA  0E0A               	movlw	10
  1159  0075FC  6E1F               	movwf	___almod@divisor^0,c
  1160  0075FE  0E00               	movlw	0
  1161  007600  6E20               	movwf	(___almod@divisor+1)^0,c
  1162  007602  0E00               	movlw	0
  1163  007604  6E21               	movwf	(___almod@divisor+2)^0,c
  1164  007606  0E00               	movlw	0
  1165  007608  6E22               	movwf	(___almod@divisor+3)^0,c
  1166  00760A  ECE2  F035         	call	___almod	;wreg free
  1167  00760E  501B               	movf	?___almod^0,w,c
  1168  007610  EC1F  F033         	call	_ssdDigit
  1169  007614                     
  1170                           ;main.c: 207:         ssdUpdate();
  1171  007614  EC2E  F038         	call	_ssdUpdate	;wreg free
  1172                           
  1173                           ;main.c: 209:     }
  1174  007618  EF15  F03A         	goto	l2747
  1175  00761C  EF00  F000         	goto	start
  1176  007620                     __end_of_main:
  1177                           	callstack 0
  1178                           
  1179 ;; *************** function _ssdInit *****************
  1180 ;; Defined at:
  1181 ;;		line 94 in file "ssd.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1195 ;;      Params:         0       0       0       0       0       0       0
  1196 ;;      Locals:         0       0       0       0       0       0       0
  1197 ;;      Temps:          0       0       0       0       0       0       0
  1198 ;;      Totals:         0       0       0       0       0       0       0
  1199 ;;Total ram usage:        0 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 2
  1202 ;; This function calls:
  1203 ;;		_pinMode
  1204 ;;		_soInit
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text1
  1211  0065E8                     __ptext1:
  1212                           	callstack 0
  1213  0065E8                     _ssdInit:
  1214                           	callstack 28
  1215  0065E8                     
  1216                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1217  0065E8  0E00               	movlw	0
  1218  0065EA  6E02               	movwf	(pinMode@pin+1)^0,c
  1219  0065EC  0E18               	movlw	24
  1220  0065EE  6E01               	movwf	pinMode@pin^0,c
  1221  0065F0  0E00               	movlw	0
  1222  0065F2  6E04               	movwf	(pinMode@type+1)^0,c
  1223  0065F4  0E00               	movlw	0
  1224  0065F6  6E03               	movwf	pinMode@type^0,c
  1225  0065F8  EC37  F03C         	call	_pinMode	;wreg free
  1226                           
  1227                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1228  0065FC  0E00               	movlw	0
  1229  0065FE  6E02               	movwf	(pinMode@pin+1)^0,c
  1230  006600  0E19               	movlw	25
  1231  006602  6E01               	movwf	pinMode@pin^0,c
  1232  006604  0E00               	movlw	0
  1233  006606  6E04               	movwf	(pinMode@type+1)^0,c
  1234  006608  0E00               	movlw	0
  1235  00660A  6E03               	movwf	pinMode@type^0,c
  1236  00660C  EC37  F03C         	call	_pinMode	;wreg free
  1237                           
  1238                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1239  006610  0E00               	movlw	0
  1240  006612  6E02               	movwf	(pinMode@pin+1)^0,c
  1241  006614  0E1A               	movlw	26
  1242  006616  6E01               	movwf	pinMode@pin^0,c
  1243  006618  0E00               	movlw	0
  1244  00661A  6E04               	movwf	(pinMode@type+1)^0,c
  1245  00661C  0E00               	movlw	0
  1246  00661E  6E03               	movwf	pinMode@type^0,c
  1247  006620  EC37  F03C         	call	_pinMode	;wreg free
  1248                           
  1249                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1250  006624  0E00               	movlw	0
  1251  006626  6E02               	movwf	(pinMode@pin+1)^0,c
  1252  006628  0E1B               	movlw	27
  1253  00662A  6E01               	movwf	pinMode@pin^0,c
  1254  00662C  0E00               	movlw	0
  1255  00662E  6E04               	movwf	(pinMode@type+1)^0,c
  1256  006630  0E00               	movlw	0
  1257  006632  6E03               	movwf	pinMode@type^0,c
  1258  006634  EC37  F03C         	call	_pinMode	;wreg free
  1259                           
  1260                           ;ssd.c: 102:     soInit();
  1261  006638  EC16  F032         	call	_soInit	;wreg free
  1262  00663C  0012               	return		;funcret
  1263  00663E                     __end_of_ssdInit:
  1264                           	callstack 0
  1265                           
  1266 ;; *************** function _lcdInit *****************
  1267 ;; Defined at:
  1268 ;;		line 72 in file "lcd.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1282 ;;      Params:         0       0       0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0
  1285 ;;      Totals:         0       0       0       0       0       0       0
  1286 ;;Total ram usage:        0 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; Hardware stack levels required when called: 5
  1289 ;; This function calls:
  1290 ;;		_delayMicro
  1291 ;;		_delayMili
  1292 ;;		_lcdCommand
  1293 ;;		_pinMode
  1294 ;;		_pushNibble
  1295 ;;		_soInit
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text2
  1302  006A4C                     __ptext2:
  1303                           	callstack 0
  1304  006A4C                     _lcdInit:
  1305                           	callstack 25
  1306  006A4C                     
  1307                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  1308  006A4C  0E00               	movlw	0
  1309  006A4E  6E02               	movwf	(pinMode@pin+1)^0,c
  1310  006A50  0E1C               	movlw	28
  1311  006A52  6E01               	movwf	pinMode@pin^0,c
  1312  006A54  0E00               	movlw	0
  1313  006A56  6E04               	movwf	(pinMode@type+1)^0,c
  1314  006A58  0E00               	movlw	0
  1315  006A5A  6E03               	movwf	pinMode@type^0,c
  1316  006A5C  EC37  F03C         	call	_pinMode	;wreg free
  1317                           
  1318                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  1319  006A60  0E00               	movlw	0
  1320  006A62  6E02               	movwf	(pinMode@pin+1)^0,c
  1321  006A64  0E1D               	movlw	29
  1322  006A66  6E01               	movwf	pinMode@pin^0,c
  1323  006A68  0E00               	movlw	0
  1324  006A6A  6E04               	movwf	(pinMode@type+1)^0,c
  1325  006A6C  0E00               	movlw	0
  1326  006A6E  6E03               	movwf	pinMode@type^0,c
  1327  006A70  EC37  F03C         	call	_pinMode	;wreg free
  1328                           
  1329                           ;lcd.c: 75:  soInit();
  1330  006A74  EC16  F032         	call	_soInit	;wreg free
  1331                           
  1332                           ;lcd.c: 76:  delayMili(15);
  1333  006A78  0E00               	movlw	0
  1334  006A7A  6E02               	movwf	(delayMili@a+1)^0,c
  1335  006A7C  0E0F               	movlw	15
  1336  006A7E  6E01               	movwf	delayMili@a^0,c
  1337  006A80  ECCA  F031         	call	_delayMili	;wreg free
  1338                           
  1339                           ;lcd.c: 78:  pushNibble(0x03, 0);
  1340  006A84  0E00               	movlw	0
  1341  006A86  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1342  006A88  0E00               	movlw	0
  1343  006A8A  6E0A               	movwf	pushNibble@rs^0,c
  1344  006A8C  0E03               	movlw	3
  1345  006A8E  EC8D  F031         	call	_pushNibble
  1346                           
  1347                           ;lcd.c: 79:  delayMili(5);
  1348  006A92  0E00               	movlw	0
  1349  006A94  6E02               	movwf	(delayMili@a+1)^0,c
  1350  006A96  0E05               	movlw	5
  1351  006A98  6E01               	movwf	delayMili@a^0,c
  1352  006A9A  ECCA  F031         	call	_delayMili	;wreg free
  1353                           
  1354                           ;lcd.c: 80:  pushNibble(0x03, 0);
  1355  006A9E  0E00               	movlw	0
  1356  006AA0  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1357  006AA2  0E00               	movlw	0
  1358  006AA4  6E0A               	movwf	pushNibble@rs^0,c
  1359  006AA6  0E03               	movlw	3
  1360  006AA8  EC8D  F031         	call	_pushNibble
  1361  006AAC                     
  1362                           ;lcd.c: 81:  delayMicro(160);
  1363  006AAC  0E00               	movlw	0
  1364  006AAE  6E02               	movwf	(delayMicro@a+1)^0,c
  1365  006AB0  0EA0               	movlw	160
  1366  006AB2  6E01               	movwf	delayMicro@a^0,c
  1367  006AB4  EC43  F031         	call	_delayMicro	;wreg free
  1368  006AB8                     
  1369                           ;lcd.c: 82:  pushNibble(0x03, 0);
  1370  006AB8  0E00               	movlw	0
  1371  006ABA  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1372  006ABC  0E00               	movlw	0
  1373  006ABE  6E0A               	movwf	pushNibble@rs^0,c
  1374  006AC0  0E03               	movlw	3
  1375  006AC2  EC8D  F031         	call	_pushNibble
  1376                           
  1377                           ;lcd.c: 83:  delayMicro(160);
  1378  006AC6  0E00               	movlw	0
  1379  006AC8  6E02               	movwf	(delayMicro@a+1)^0,c
  1380  006ACA  0EA0               	movlw	160
  1381  006ACC  6E01               	movwf	delayMicro@a^0,c
  1382  006ACE  EC43  F031         	call	_delayMicro	;wreg free
  1383  006AD2                     
  1384                           ;lcd.c: 85:  pushNibble(0x02, 0);
  1385  006AD2  0E00               	movlw	0
  1386  006AD4  6E0B               	movwf	(pushNibble@rs+1)^0,c
  1387  006AD6  0E00               	movlw	0
  1388  006AD8  6E0A               	movwf	pushNibble@rs^0,c
  1389  006ADA  0E02               	movlw	2
  1390  006ADC  EC8D  F031         	call	_pushNibble
  1391  006AE0                     
  1392                           ;lcd.c: 86:  delayMili(10);
  1393  006AE0  0E00               	movlw	0
  1394  006AE2  6E02               	movwf	(delayMili@a+1)^0,c
  1395  006AE4  0E0A               	movlw	10
  1396  006AE6  6E01               	movwf	delayMili@a^0,c
  1397  006AE8  ECCA  F031         	call	_delayMili	;wreg free
  1398  006AEC                     
  1399                           ;lcd.c: 88:  lcdCommand(0x28);
  1400  006AEC  0E28               	movlw	40
  1401  006AEE  EC6F  F031         	call	_lcdCommand
  1402  006AF2                     
  1403                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  1404  006AF2  0E0C               	movlw	12
  1405  006AF4  EC6F  F031         	call	_lcdCommand
  1406  006AF8                     
  1407                           ;lcd.c: 90:  lcdCommand(0x01);
  1408  006AF8  0E01               	movlw	1
  1409  006AFA  EC6F  F031         	call	_lcdCommand
  1410  006AFE  0012               	return		;funcret
  1411  006B00                     __end_of_lcdInit:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function _pushNibble *****************
  1415 ;; Defined at:
  1416 ;;		line 25 in file "lcd.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  value           1    wreg     unsigned char 
  1419 ;;  rs              2    9[COMRAM] int 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  value           1   11[COMRAM] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1431 ;;      Params:         2       0       0       0       0       0       0
  1432 ;;      Locals:         1       0       0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0
  1434 ;;      Totals:         3       0       0       0       0       0       0
  1435 ;;Total ram usage:        3 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; Hardware stack levels required when called: 3
  1438 ;; This function calls:
  1439 ;;		_digitalWrite
  1440 ;;		_pulseEnablePin
  1441 ;;		_soWrite
  1442 ;; This function is called by:
  1443 ;;		_lcdInit
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text3
  1448  00631A                     __ptext3:
  1449                           	callstack 0
  1450  00631A                     _pushNibble:
  1451                           	callstack 26
  1452                           
  1453                           ;incstack = 0
  1454                           ;pushNibble@value stored from wreg
  1455  00631A  6E0C               	movwf	pushNibble@value^0,c
  1456  00631C                     
  1457                           ;lcd.c: 26:  soWrite(value);
  1458  00631C  C00C  F007         	movff	pushNibble@value,soWrite@value
  1459  006320  6A08               	clrf	(soWrite@value+1)^0,c
  1460  006322  EC7A  F032         	call	_soWrite	;wreg free
  1461                           
  1462                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  1463  006326  0E00               	movlw	0
  1464  006328  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1465  00632A  0E1D               	movlw	29
  1466  00632C  6E01               	movwf	digitalWrite@pin^0,c
  1467  00632E  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  1468  006332  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  1469  006336  EC10  F03B         	call	_digitalWrite	;wreg free
  1470                           
  1471                           ;lcd.c: 28:  pulseEnablePin();
  1472  00633A  EC35  F032         	call	_pulseEnablePin	;wreg free
  1473  00633E  0012               	return		;funcret
  1474  006340                     __end_of_pushNibble:
  1475                           	callstack 0
  1476                           
  1477 ;; *************** function _kpInit *****************
  1478 ;; Defined at:
  1479 ;;		line 54 in file "keypad.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1493 ;;      Params:         0       0       0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0
  1496 ;;      Totals:         0       0       0       0       0       0       0
  1497 ;;Total ram usage:        0 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 2
  1500 ;; This function calls:
  1501 ;;		_pinMode
  1502 ;;		_soInit
  1503 ;; This function is called by:
  1504 ;;		_main
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text4
  1509  0063C4                     __ptext4:
  1510                           	callstack 0
  1511  0063C4                     _kpInit:
  1512                           	callstack 28
  1513  0063C4                     
  1514                           ;keypad.c: 55:   soInit();
  1515  0063C4  EC16  F032         	call	_soInit	;wreg free
  1516                           
  1517                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  1518  0063C8  0E00               	movlw	0
  1519  0063CA  6E02               	movwf	(pinMode@pin+1)^0,c
  1520  0063CC  0E0A               	movlw	10
  1521  0063CE  6E01               	movwf	pinMode@pin^0,c
  1522  0063D0  0E00               	movlw	0
  1523  0063D2  6E04               	movwf	(pinMode@type+1)^0,c
  1524  0063D4  0E01               	movlw	1
  1525  0063D6  6E03               	movwf	pinMode@type^0,c
  1526  0063D8  EC37  F03C         	call	_pinMode	;wreg free
  1527                           
  1528                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  1529  0063DC  0E00               	movlw	0
  1530  0063DE  6E02               	movwf	(pinMode@pin+1)^0,c
  1531  0063E0  0E09               	movlw	9
  1532  0063E2  6E01               	movwf	pinMode@pin^0,c
  1533  0063E4  0E00               	movlw	0
  1534  0063E6  6E04               	movwf	(pinMode@type+1)^0,c
  1535  0063E8  0E01               	movlw	1
  1536  0063EA  6E03               	movwf	pinMode@type^0,c
  1537  0063EC  EC37  F03C         	call	_pinMode	;wreg free
  1538  0063F0                     
  1539                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  1540  0063F0  0E0C               	movlw	12
  1541  0063F2  6EC1               	movwf	193,c	;volatile
  1542  0063F4  0012               	return		;funcret
  1543  0063F6                     __end_of_kpInit:
  1544                           	callstack 0
  1545                           
  1546 ;; *************** function _soInit *****************
  1547 ;; Defined at:
  1548 ;;		line 3 in file "so.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1562 ;;      Params:         0       0       0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0       0       0
  1565 ;;      Totals:         0       0       0       0       0       0       0
  1566 ;;Total ram usage:        0 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; Hardware stack levels required when called: 1
  1569 ;; This function calls:
  1570 ;;		_pinMode
  1571 ;; This function is called by:
  1572 ;;		_kpInit
  1573 ;;		_lcdInit
  1574 ;;		_ssdInit
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text5
  1579  00642C                     __ptext5:
  1580                           	callstack 0
  1581  00642C                     _soInit:
  1582                           	callstack 28
  1583  00642C                     
  1584                           ;so.c: 4:  pinMode(PIN_D7, 0);
  1585  00642C  0E00               	movlw	0
  1586  00642E  6E02               	movwf	(pinMode@pin+1)^0,c
  1587  006430  0E1F               	movlw	31
  1588  006432  6E01               	movwf	pinMode@pin^0,c
  1589  006434  0E00               	movlw	0
  1590  006436  6E04               	movwf	(pinMode@type+1)^0,c
  1591  006438  0E00               	movlw	0
  1592  00643A  6E03               	movwf	pinMode@type^0,c
  1593  00643C  EC37  F03C         	call	_pinMode	;wreg free
  1594                           
  1595                           ;so.c: 5:  pinMode(PIN_B0, 0);
  1596  006440  0E00               	movlw	0
  1597  006442  6E02               	movwf	(pinMode@pin+1)^0,c
  1598  006444  0E08               	movlw	8
  1599  006446  6E01               	movwf	pinMode@pin^0,c
  1600  006448  0E00               	movlw	0
  1601  00644A  6E04               	movwf	(pinMode@type+1)^0,c
  1602  00644C  0E00               	movlw	0
  1603  00644E  6E03               	movwf	pinMode@type^0,c
  1604  006450  EC37  F03C         	call	_pinMode	;wreg free
  1605                           
  1606                           ;so.c: 6:  pinMode(PIN_D6, 0);
  1607  006454  0E00               	movlw	0
  1608  006456  6E02               	movwf	(pinMode@pin+1)^0,c
  1609  006458  0E1E               	movlw	30
  1610  00645A  6E01               	movwf	pinMode@pin^0,c
  1611  00645C  0E00               	movlw	0
  1612  00645E  6E04               	movwf	(pinMode@type+1)^0,c
  1613  006460  0E00               	movlw	0
  1614  006462  6E03               	movwf	pinMode@type^0,c
  1615  006464  EC37  F03C         	call	_pinMode	;wreg free
  1616  006468  0012               	return		;funcret
  1617  00646A                     __end_of_soInit:
  1618                           	callstack 0
  1619                           
  1620 ;; *************** function _kpDebounce *****************
  1621 ;; Defined at:
  1622 ;;		line 27 in file "keypad.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  i               2   12[COMRAM] int 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1636 ;;      Params:         0       0       0       0       0       0       0
  1637 ;;      Locals:         2       0       0       0       0       0       0
  1638 ;;      Temps:          3       0       0       0       0       0       0
  1639 ;;      Totals:         5       0       0       0       0       0       0
  1640 ;;Total ram usage:        5 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 3
  1643 ;; This function calls:
  1644 ;;		_digitalRead
  1645 ;;		_soWrite
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text6
  1652  006DBC                     __ptext6:
  1653                           	callstack 0
  1654  006DBC                     _kpDebounce:
  1655                           	callstack 27
  1656  006DBC                     
  1657                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  1658  006DBC  0E00               	movlw	0
  1659  006DBE  6E56               	movwf	(kpDebounce@newRead+1)^0,c
  1660  006DC0  0E00               	movlw	0
  1661  006DC2  6E55               	movwf	kpDebounce@newRead^0,c
  1662                           
  1663                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  1664  006DC4  0E00               	movlw	0
  1665  006DC6  6E0E               	movwf	(kpDebounce@i+1)^0,c
  1666  006DC8  0E00               	movlw	0
  1667  006DCA  6E0D               	movwf	kpDebounce@i^0,c
  1668  006DCC                     l2695:
  1669  006DCC  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  1670  006DCE  EFF2  F036         	goto	u2431
  1671  006DD2  500E               	movf	(kpDebounce@i+1)^0,w,c
  1672  006DD4  E109               	bnz	u2430
  1673  006DD6  0E05               	movlw	5
  1674  006DD8  5C0D               	subwf	kpDebounce@i^0,w,c
  1675  006DDA  A0D8               	btfss	status,0,c
  1676  006DDC  EFF2  F036         	goto	u2431
  1677  006DE0  EFF4  F036         	goto	u2430
  1678  006DE4                     u2431:
  1679  006DE4  EFF6  F036         	goto	l2699
  1680  006DE8                     u2430:
  1681  006DE8  EF57  F037         	goto	l2711
  1682  006DEC                     l2699:
  1683                           
  1684                           ;keypad.c: 35:       soWrite(1<<(i+3));
  1685  006DEC  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  1686  006DF0  0E03               	movlw	3
  1687  006DF2  260A               	addwf	??_kpDebounce^0,f,c
  1688  006DF4  0E01               	movlw	1
  1689  006DF6  6E0B               	movwf	(??_kpDebounce+1)^0,c
  1690  006DF8  0E00               	movlw	0
  1691  006DFA  6E0C               	movwf	(??_kpDebounce+2)^0,c
  1692  006DFC  2A0A               	incf	??_kpDebounce^0,f,c
  1693  006DFE  EF04  F037         	goto	u2444
  1694  006E02                     u2445:
  1695  006E02  90D8               	bcf	status,0,c
  1696  006E04  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  1697  006E06  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  1698  006E08                     u2444:
  1699  006E08  2E0A               	decfsz	??_kpDebounce^0,f,c
  1700  006E0A  EF01  F037         	goto	u2445
  1701  006E0E  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  1702  006E12  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  1703  006E16  EC7A  F032         	call	_soWrite	;wreg free
  1704                           
  1705                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  1706  006E1A  0E00               	movlw	0
  1707  006E1C  6E02               	movwf	(digitalRead@pin+1)^0,c
  1708  006E1E  0E0A               	movlw	10
  1709  006E20  6E01               	movwf	digitalRead@pin^0,c
  1710  006E22  EC79  F037         	call	_digitalRead	;wreg free
  1711  006E26  5001               	movf	?_digitalRead^0,w,c
  1712  006E28  1002               	iorwf	(?_digitalRead+1)^0,w,c
  1713  006E2A  B4D8               	btfsc	status,2,c
  1714  006E2C  EF1A  F037         	goto	u2451
  1715  006E30  EF1C  F037         	goto	u2450
  1716  006E34                     u2451:
  1717  006E34  EF2F  F037         	goto	l2703
  1718  006E38                     u2450:
  1719  006E38                     
  1720                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  1721  006E38  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  1722  006E3C  0E01               	movlw	1
  1723  006E3E  6E0B               	movwf	(??_kpDebounce+1)^0,c
  1724  006E40  0E00               	movlw	0
  1725  006E42  6E0C               	movwf	(??_kpDebounce+2)^0,c
  1726  006E44  2A0A               	incf	??_kpDebounce^0,f,c
  1727  006E46  EF28  F037         	goto	u2464
  1728  006E4A                     u2465:
  1729  006E4A  90D8               	bcf	status,0,c
  1730  006E4C  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  1731  006E4E  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  1732  006E50                     u2464:
  1733  006E50  2E0A               	decfsz	??_kpDebounce^0,f,c
  1734  006E52  EF25  F037         	goto	u2465
  1735  006E56  500B               	movf	(??_kpDebounce+1)^0,w,c
  1736  006E58  1255               	iorwf	kpDebounce@newRead^0,f,c
  1737  006E5A  500C               	movf	(??_kpDebounce+2)^0,w,c
  1738  006E5C  1256               	iorwf	(kpDebounce@newRead+1)^0,f,c
  1739  006E5E                     l2703:
  1740                           
  1741                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  1742  006E5E  0E00               	movlw	0
  1743  006E60  6E02               	movwf	(digitalRead@pin+1)^0,c
  1744  006E62  0E09               	movlw	9
  1745  006E64  6E01               	movwf	digitalRead@pin^0,c
  1746  006E66  EC79  F037         	call	_digitalRead	;wreg free
  1747  006E6A  5001               	movf	?_digitalRead^0,w,c
  1748  006E6C  1002               	iorwf	(?_digitalRead+1)^0,w,c
  1749  006E6E  B4D8               	btfsc	status,2,c
  1750  006E70  EF3C  F037         	goto	u2471
  1751  006E74  EF3E  F037         	goto	u2470
  1752  006E78                     u2471:
  1753  006E78  EF53  F037         	goto	l2707
  1754  006E7C                     u2470:
  1755  006E7C                     
  1756                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  1757  006E7C  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  1758  006E80  0E05               	movlw	5
  1759  006E82  260A               	addwf	??_kpDebounce^0,f,c
  1760  006E84  0E01               	movlw	1
  1761  006E86  6E0B               	movwf	(??_kpDebounce+1)^0,c
  1762  006E88  0E00               	movlw	0
  1763  006E8A  6E0C               	movwf	(??_kpDebounce+2)^0,c
  1764  006E8C  2A0A               	incf	??_kpDebounce^0,f,c
  1765  006E8E  EF4C  F037         	goto	u2484
  1766  006E92                     u2485:
  1767  006E92  90D8               	bcf	status,0,c
  1768  006E94  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  1769  006E96  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  1770  006E98                     u2484:
  1771  006E98  2E0A               	decfsz	??_kpDebounce^0,f,c
  1772  006E9A  EF49  F037         	goto	u2485
  1773  006E9E  500B               	movf	(??_kpDebounce+1)^0,w,c
  1774  006EA0  1255               	iorwf	kpDebounce@newRead^0,f,c
  1775  006EA2  500C               	movf	(??_kpDebounce+2)^0,w,c
  1776  006EA4  1256               	iorwf	(kpDebounce@newRead+1)^0,f,c
  1777  006EA6                     l2707:
  1778                           
  1779                           ;keypad.c: 42:     }
  1780  006EA6  4A0D               	infsnz	kpDebounce@i^0,f,c
  1781  006EA8  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  1782  006EAA  EFE6  F036         	goto	l2695
  1783  006EAE                     l2711:
  1784                           
  1785                           ;keypad.c: 43:     if (oldRead == newRead) {
  1786  006EAE  5055               	movf	kpDebounce@newRead^0,w,c
  1787  006EB0  1853               	xorwf	kpDebounce@oldRead^0,w,c
  1788  006EB2  E107               	bnz	u2491
  1789  006EB4  5056               	movf	(kpDebounce@newRead+1)^0,w,c
  1790  006EB6  1854               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  1791  006EB8  A4D8               	btfss	status,2,c
  1792  006EBA  EF61  F037         	goto	u2491
  1793  006EBE  EF63  F037         	goto	u2490
  1794  006EC2                     u2491:
  1795  006EC2  EF66  F037         	goto	l2715
  1796  006EC6                     u2490:
  1797  006EC6                     
  1798                           ;keypad.c: 44:         tempo--;
  1799  006EC6  0660               	decf	kpDebounce@tempo^0,f,c
  1800                           
  1801                           ;keypad.c: 45:     } else {
  1802  006EC8  EF6C  F037         	goto	l202
  1803  006ECC                     l2715:
  1804                           
  1805                           ;keypad.c: 46:         tempo = 1;
  1806  006ECC  0E01               	movlw	1
  1807  006ECE  6E60               	movwf	kpDebounce@tempo^0,c
  1808  006ED0                     
  1809                           ;keypad.c: 47:         oldRead = newRead;
  1810  006ED0  C055  F053         	movff	kpDebounce@newRead,kpDebounce@oldRead
  1811  006ED4  C056  F054         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  1812  006ED8                     l202:
  1813                           
  1814                           ;keypad.c: 49:     if (tempo == 0) {
  1815  006ED8  5060               	movf	kpDebounce@tempo^0,w,c
  1816  006EDA  A4D8               	btfss	status,2,c
  1817  006EDC  EF72  F037         	goto	u2501
  1818  006EE0  EF74  F037         	goto	u2500
  1819  006EE4                     u2501:
  1820  006EE4  EF78  F037         	goto	l204
  1821  006EE8                     u2500:
  1822  006EE8                     
  1823                           ;keypad.c: 50:         keys = oldRead;
  1824  006EE8  C053  F057         	movff	kpDebounce@oldRead,_keys
  1825  006EEC  C054  F058         	movff	kpDebounce@oldRead+1,_keys+1
  1826  006EF0                     l204:
  1827  006EF0  0012               	return		;funcret
  1828  006EF2                     __end_of_kpDebounce:
  1829                           	callstack 0
  1830                           
  1831 ;; *************** function _digitalRead *****************
  1832 ;; Defined at:
  1833 ;;		line 39 in file "io.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  pin             2    0[COMRAM] int 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  2    0[COMRAM] int 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1847 ;;      Params:         2       0       0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0       0       0
  1849 ;;      Temps:          3       0       0       0       0       0       0
  1850 ;;      Totals:         5       0       0       0       0       0       0
  1851 ;;Total ram usage:        5 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_kpDebounce
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text7
  1861  006EF2                     __ptext7:
  1862                           	callstack 0
  1863  006EF2                     _digitalRead:
  1864                           	callstack 29
  1865  006EF2                     
  1866                           ;io.c: 40:     if(pin <8){
  1867  006EF2  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  1868  006EF4  EF87  F037         	goto	u2280
  1869  006EF8  5002               	movf	(digitalRead@pin+1)^0,w,c
  1870  006EFA  E107               	bnz	u2281
  1871  006EFC  0E08               	movlw	8
  1872  006EFE  5C01               	subwf	digitalRead@pin^0,w,c
  1873  006F00  B0D8               	btfsc	status,0,c
  1874  006F02  EF85  F037         	goto	u2281
  1875  006F06  EF87  F037         	goto	u2280
  1876  006F0A                     u2281:
  1877  006F0A  EF9B  F037         	goto	l2581
  1878  006F0E                     u2280:
  1879  006F0E                     
  1880                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  1881  006F0E  C001  F003         	movff	digitalRead@pin,??_digitalRead
  1882  006F12  0E01               	movlw	1
  1883  006F14  6E04               	movwf	(??_digitalRead+1)^0,c
  1884  006F16  2A03               	incf	??_digitalRead^0,f,c
  1885  006F18  EF90  F037         	goto	u2294
  1886  006F1C                     u2295:
  1887  006F1C  90D8               	bcf	status,0,c
  1888  006F1E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  1889  006F20                     u2294:
  1890  006F20  2E03               	decfsz	??_digitalRead^0,f,c
  1891  006F22  EF8E  F037         	goto	u2295
  1892  006F26  5004               	movf	(??_digitalRead+1)^0,w,c
  1893  006F28  1480               	andwf	128,w,c	;volatile
  1894  006F2A  6E05               	movwf	(??_digitalRead+2)^0,c
  1895  006F2C  5005               	movf	(??_digitalRead+2)^0,w,c
  1896  006F2E  6E01               	movwf	?_digitalRead^0,c
  1897  006F30  6A02               	clrf	(?_digitalRead+1)^0,c
  1898  006F32  EF2D  F038         	goto	l368
  1899  006F36                     l2581:
  1900  006F36  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  1901  006F38  EFA9  F037         	goto	u2300
  1902  006F3C  5002               	movf	(digitalRead@pin+1)^0,w,c
  1903  006F3E  E107               	bnz	u2301
  1904  006F40  0E10               	movlw	16
  1905  006F42  5C01               	subwf	digitalRead@pin^0,w,c
  1906  006F44  B0D8               	btfsc	status,0,c
  1907  006F46  EFA7  F037         	goto	u2301
  1908  006F4A  EFA9  F037         	goto	u2300
  1909  006F4E                     u2301:
  1910  006F4E  EFBF  F037         	goto	l2589
  1911  006F52                     u2300:
  1912  006F52                     
  1913                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  1914  006F52  C001  F003         	movff	digitalRead@pin,??_digitalRead
  1915  006F56  0EF8               	movlw	-8
  1916  006F58  2603               	addwf	??_digitalRead^0,f,c
  1917  006F5A  0E01               	movlw	1
  1918  006F5C  6E04               	movwf	(??_digitalRead+1)^0,c
  1919  006F5E  2A03               	incf	??_digitalRead^0,f,c
  1920  006F60  EFB4  F037         	goto	u2314
  1921  006F64                     u2315:
  1922  006F64  90D8               	bcf	status,0,c
  1923  006F66  3604               	rlcf	(??_digitalRead+1)^0,f,c
  1924  006F68                     u2314:
  1925  006F68  2E03               	decfsz	??_digitalRead^0,f,c
  1926  006F6A  EFB2  F037         	goto	u2315
  1927  006F6E  5004               	movf	(??_digitalRead+1)^0,w,c
  1928  006F70  1481               	andwf	129,w,c	;volatile
  1929  006F72  6E05               	movwf	(??_digitalRead+2)^0,c
  1930  006F74  5005               	movf	(??_digitalRead+2)^0,w,c
  1931  006F76  6E01               	movwf	?_digitalRead^0,c
  1932  006F78  6A02               	clrf	(?_digitalRead+1)^0,c
  1933  006F7A  EF2D  F038         	goto	l368
  1934  006F7E                     l2589:
  1935  006F7E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  1936  006F80  EFCD  F037         	goto	u2320
  1937  006F84  5002               	movf	(digitalRead@pin+1)^0,w,c
  1938  006F86  E107               	bnz	u2321
  1939  006F88  0E18               	movlw	24
  1940  006F8A  5C01               	subwf	digitalRead@pin^0,w,c
  1941  006F8C  B0D8               	btfsc	status,0,c
  1942  006F8E  EFCB  F037         	goto	u2321
  1943  006F92  EFCD  F037         	goto	u2320
  1944  006F96                     u2321:
  1945  006F96  EFE3  F037         	goto	l2597
  1946  006F9A                     u2320:
  1947  006F9A                     
  1948                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  1949  006F9A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  1950  006F9E  0EF0               	movlw	-16
  1951  006FA0  2603               	addwf	??_digitalRead^0,f,c
  1952  006FA2  0E01               	movlw	1
  1953  006FA4  6E04               	movwf	(??_digitalRead+1)^0,c
  1954  006FA6  2A03               	incf	??_digitalRead^0,f,c
  1955  006FA8  EFD8  F037         	goto	u2334
  1956  006FAC                     u2335:
  1957  006FAC  90D8               	bcf	status,0,c
  1958  006FAE  3604               	rlcf	(??_digitalRead+1)^0,f,c
  1959  006FB0                     u2334:
  1960  006FB0  2E03               	decfsz	??_digitalRead^0,f,c
  1961  006FB2  EFD6  F037         	goto	u2335
  1962  006FB6  5004               	movf	(??_digitalRead+1)^0,w,c
  1963  006FB8  1482               	andwf	130,w,c	;volatile
  1964  006FBA  6E05               	movwf	(??_digitalRead+2)^0,c
  1965  006FBC  5005               	movf	(??_digitalRead+2)^0,w,c
  1966  006FBE  6E01               	movwf	?_digitalRead^0,c
  1967  006FC0  6A02               	clrf	(?_digitalRead+1)^0,c
  1968  006FC2  EF2D  F038         	goto	l368
  1969  006FC6                     l2597:
  1970  006FC6  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  1971  006FC8  EFF1  F037         	goto	u2340
  1972  006FCC  5002               	movf	(digitalRead@pin+1)^0,w,c
  1973  006FCE  E107               	bnz	u2341
  1974  006FD0  0E20               	movlw	32
  1975  006FD2  5C01               	subwf	digitalRead@pin^0,w,c
  1976  006FD4  B0D8               	btfsc	status,0,c
  1977  006FD6  EFEF  F037         	goto	u2341
  1978  006FDA  EFF1  F037         	goto	u2340
  1979  006FDE                     u2341:
  1980  006FDE  EF07  F038         	goto	l2605
  1981  006FE2                     u2340:
  1982  006FE2                     
  1983                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  1984  006FE2  C001  F003         	movff	digitalRead@pin,??_digitalRead
  1985  006FE6  0EE8               	movlw	-24
  1986  006FE8  2603               	addwf	??_digitalRead^0,f,c
  1987  006FEA  0E01               	movlw	1
  1988  006FEC  6E04               	movwf	(??_digitalRead+1)^0,c
  1989  006FEE  2A03               	incf	??_digitalRead^0,f,c
  1990  006FF0  EFFC  F037         	goto	u2354
  1991  006FF4                     u2355:
  1992  006FF4  90D8               	bcf	status,0,c
  1993  006FF6  3604               	rlcf	(??_digitalRead+1)^0,f,c
  1994  006FF8                     u2354:
  1995  006FF8  2E03               	decfsz	??_digitalRead^0,f,c
  1996  006FFA  EFFA  F037         	goto	u2355
  1997  006FFE  5004               	movf	(??_digitalRead+1)^0,w,c
  1998  007000  1483               	andwf	131,w,c	;volatile
  1999  007002  6E05               	movwf	(??_digitalRead+2)^0,c
  2000  007004  5005               	movf	(??_digitalRead+2)^0,w,c
  2001  007006  6E01               	movwf	?_digitalRead^0,c
  2002  007008  6A02               	clrf	(?_digitalRead+1)^0,c
  2003  00700A  EF2D  F038         	goto	l368
  2004  00700E                     l2605:
  2005  00700E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2006  007010  EF15  F038         	goto	u2360
  2007  007014  5002               	movf	(digitalRead@pin+1)^0,w,c
  2008  007016  E107               	bnz	u2361
  2009  007018  0E28               	movlw	40
  2010  00701A  5C01               	subwf	digitalRead@pin^0,w,c
  2011  00701C  B0D8               	btfsc	status,0,c
  2012  00701E  EF13  F038         	goto	u2361
  2013  007022  EF15  F038         	goto	u2360
  2014  007026                     u2361:
  2015  007026  EF2B  F038         	goto	l373
  2016  00702A                     u2360:
  2017  00702A                     
  2018                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  2019  00702A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2020  00702E  0EE0               	movlw	-32
  2021  007030  2603               	addwf	??_digitalRead^0,f,c
  2022  007032  0E01               	movlw	1
  2023  007034  6E04               	movwf	(??_digitalRead+1)^0,c
  2024  007036  2A03               	incf	??_digitalRead^0,f,c
  2025  007038  EF20  F038         	goto	u2374
  2026  00703C                     u2375:
  2027  00703C  90D8               	bcf	status,0,c
  2028  00703E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2029  007040                     u2374:
  2030  007040  2E03               	decfsz	??_digitalRead^0,f,c
  2031  007042  EF1E  F038         	goto	u2375
  2032  007046  5004               	movf	(??_digitalRead+1)^0,w,c
  2033  007048  1484               	andwf	132,w,c	;volatile
  2034  00704A  6E05               	movwf	(??_digitalRead+2)^0,c
  2035  00704C  5005               	movf	(??_digitalRead+2)^0,w,c
  2036  00704E  6E01               	movwf	?_digitalRead^0,c
  2037  007050  6A02               	clrf	(?_digitalRead+1)^0,c
  2038  007052  EF2D  F038         	goto	l368
  2039  007056                     l373:
  2040  007056                     
  2041                           ;io.c: 51:     return -1;
  2042  007056  6801               	setf	?_digitalRead^0,c
  2043  007058  6802               	setf	(?_digitalRead+1)^0,c
  2044  00705A                     l368:
  2045  00705A  0012               	return		;funcret
  2046  00705C                     __end_of_digitalRead:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _adcInit *****************
  2050 ;; Defined at:
  2051 ;;		line 25 in file "adc.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2065 ;;      Params:         0       0       0       0       0       0       0
  2066 ;;      Locals:         0       0       0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0
  2068 ;;      Totals:         0       0       0       0       0       0       0
  2069 ;;Total ram usage:        0 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 1
  2072 ;; This function calls:
  2073 ;;		_pinMode
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text8
  2080  0064AC                     __ptext8:
  2081                           	callstack 0
  2082  0064AC                     _adcInit:
  2083                           	callstack 29
  2084  0064AC                     
  2085                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  2086  0064AC  0E00               	movlw	0
  2087  0064AE  6E02               	movwf	(pinMode@pin+1)^0,c
  2088  0064B0  0E00               	movlw	0
  2089  0064B2  6E01               	movwf	pinMode@pin^0,c
  2090  0064B4  0E00               	movlw	0
  2091  0064B6  6E04               	movwf	(pinMode@type+1)^0,c
  2092  0064B8  0E01               	movlw	1
  2093  0064BA  6E03               	movwf	pinMode@type^0,c
  2094  0064BC  EC37  F03C         	call	_pinMode	;wreg free
  2095                           
  2096                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  2097  0064C0  0E00               	movlw	0
  2098  0064C2  6E02               	movwf	(pinMode@pin+1)^0,c
  2099  0064C4  0E01               	movlw	1
  2100  0064C6  6E01               	movwf	pinMode@pin^0,c
  2101  0064C8  0E00               	movlw	0
  2102  0064CA  6E04               	movwf	(pinMode@type+1)^0,c
  2103  0064CC  0E01               	movlw	1
  2104  0064CE  6E03               	movwf	pinMode@type^0,c
  2105  0064D0  EC37  F03C         	call	_pinMode	;wreg free
  2106                           
  2107                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  2108  0064D4  0E00               	movlw	0
  2109  0064D6  6E02               	movwf	(pinMode@pin+1)^0,c
  2110  0064D8  0E02               	movlw	2
  2111  0064DA  6E01               	movwf	pinMode@pin^0,c
  2112  0064DC  0E00               	movlw	0
  2113  0064DE  6E04               	movwf	(pinMode@type+1)^0,c
  2114  0064E0  0E01               	movlw	1
  2115  0064E2  6E03               	movwf	pinMode@type^0,c
  2116  0064E4  EC37  F03C         	call	_pinMode	;wreg free
  2117  0064E8                     
  2118                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  2119  0064E8  80C2               	bsf	194,0,c	;volatile
  2120  0064EA                     
  2121                           ;adc.c: 33:     ADCON1 = 0b00001100;
  2122  0064EA  0E0C               	movlw	12
  2123  0064EC  6EC1               	movwf	193,c	;volatile
  2124  0064EE                     
  2125                           ;adc.c: 34:     ADCON2 = 0b10101010;
  2126  0064EE  0EAA               	movlw	170
  2127  0064F0  6EC0               	movwf	192,c	;volatile
  2128  0064F2  0012               	return		;funcret
  2129  0064F4                     __end_of_adcInit:
  2130                           	callstack 0
  2131                           
  2132 ;; *************** function _pinMode *****************
  2133 ;; Defined at:
  2134 ;;		line 54 in file "io.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  pin             2    0[COMRAM] int 
  2137 ;;  type            2    2[COMRAM] int 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      void 
  2142 ;; Registers used:
  2143 ;;		wreg, status,2, status,0
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2149 ;;      Params:         4       0       0       0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0       0       0
  2151 ;;      Temps:          2       0       0       0       0       0       0
  2152 ;;      Totals:         6       0       0       0       0       0       0
  2153 ;;Total ram usage:        6 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_adcInit
  2159 ;;		_kpInit
  2160 ;;		_lcdInit
  2161 ;;		_ssdInit
  2162 ;;		_soInit
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           	psect	text9
  2167  00786E                     __ptext9:
  2168                           	callstack 0
  2169  00786E                     _pinMode:
  2170                           	callstack 28
  2171  00786E                     
  2172                           ;io.c: 56:     if(pin <8){
  2173  00786E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2174  007870  EF45  F03C         	goto	u1880
  2175  007874  5002               	movf	(pinMode@pin+1)^0,w,c
  2176  007876  E107               	bnz	u1881
  2177  007878  0E08               	movlw	8
  2178  00787A  5C01               	subwf	pinMode@pin^0,w,c
  2179  00787C  B0D8               	btfsc	status,0,c
  2180  00787E  EF43  F03C         	goto	u1881
  2181  007882  EF45  F03C         	goto	u1880
  2182  007886                     u1881:
  2183  007886  EF6F  F03C         	goto	l2379
  2184  00788A                     u1880:
  2185  00788A                     
  2186                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2187  00788A  5003               	movf	pinMode@type^0,w,c
  2188  00788C  1004               	iorwf	(pinMode@type+1)^0,w,c
  2189  00788E  B4D8               	btfsc	status,2,c
  2190  007890  EF4C  F03C         	goto	u1891
  2191  007894  EF4E  F03C         	goto	u1890
  2192  007898                     u1891:
  2193  007898  EF5E  F03C         	goto	l2377
  2194  00789C                     u1890:
  2195  00789C  C001  F005         	movff	pinMode@pin,??_pinMode
  2196  0078A0  0E01               	movlw	1
  2197  0078A2  6E06               	movwf	(??_pinMode+1)^0,c
  2198  0078A4  2A05               	incf	??_pinMode^0,f,c
  2199  0078A6  EF57  F03C         	goto	u1904
  2200  0078AA                     u1905:
  2201  0078AA  90D8               	bcf	status,0,c
  2202  0078AC  3606               	rlcf	(??_pinMode+1)^0,f,c
  2203  0078AE                     u1904:
  2204  0078AE  2E05               	decfsz	??_pinMode^0,f,c
  2205  0078B0  EF55  F03C         	goto	u1905
  2206  0078B4  5006               	movf	(??_pinMode+1)^0,w,c
  2207  0078B6  1292               	iorwf	146,f,c	;volatile
  2208  0078B8  EF5D  F03D         	goto	l398
  2209  0078BC                     l2377:
  2210  0078BC  C001  F005         	movff	pinMode@pin,??_pinMode
  2211  0078C0  0E01               	movlw	1
  2212  0078C2  6E06               	movwf	(??_pinMode+1)^0,c
  2213  0078C4  2A05               	incf	??_pinMode^0,f,c
  2214  0078C6  EF67  F03C         	goto	u1914
  2215  0078CA                     u1915:
  2216  0078CA  90D8               	bcf	status,0,c
  2217  0078CC  3606               	rlcf	(??_pinMode+1)^0,f,c
  2218  0078CE                     u1914:
  2219  0078CE  2E05               	decfsz	??_pinMode^0,f,c
  2220  0078D0  EF65  F03C         	goto	u1915
  2221  0078D4  5006               	movf	(??_pinMode+1)^0,w,c
  2222  0078D6  0AFF               	xorlw	255
  2223  0078D8  1692               	andwf	146,f,c	;volatile
  2224  0078DA  EF5D  F03D         	goto	l398
  2225  0078DE                     l2379:
  2226  0078DE  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2227  0078E0  EF7D  F03C         	goto	u1920
  2228  0078E4  5002               	movf	(pinMode@pin+1)^0,w,c
  2229  0078E6  E107               	bnz	u1921
  2230  0078E8  0E10               	movlw	16
  2231  0078EA  5C01               	subwf	pinMode@pin^0,w,c
  2232  0078EC  B0D8               	btfsc	status,0,c
  2233  0078EE  EF7B  F03C         	goto	u1921
  2234  0078F2  EF7D  F03C         	goto	u1920
  2235  0078F6                     u1921:
  2236  0078F6  EFAB  F03C         	goto	l2387
  2237  0078FA                     u1920:
  2238  0078FA                     
  2239                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2240  0078FA  5003               	movf	pinMode@type^0,w,c
  2241  0078FC  1004               	iorwf	(pinMode@type+1)^0,w,c
  2242  0078FE  B4D8               	btfsc	status,2,c
  2243  007900  EF84  F03C         	goto	u1931
  2244  007904  EF86  F03C         	goto	u1930
  2245  007908                     u1931:
  2246  007908  EF98  F03C         	goto	l2385
  2247  00790C                     u1930:
  2248  00790C  C001  F005         	movff	pinMode@pin,??_pinMode
  2249  007910  0EF8               	movlw	-8
  2250  007912  2605               	addwf	??_pinMode^0,f,c
  2251  007914  0E01               	movlw	1
  2252  007916  6E06               	movwf	(??_pinMode+1)^0,c
  2253  007918  2A05               	incf	??_pinMode^0,f,c
  2254  00791A  EF91  F03C         	goto	u1944
  2255  00791E                     u1945:
  2256  00791E  90D8               	bcf	status,0,c
  2257  007920  3606               	rlcf	(??_pinMode+1)^0,f,c
  2258  007922                     u1944:
  2259  007922  2E05               	decfsz	??_pinMode^0,f,c
  2260  007924  EF8F  F03C         	goto	u1945
  2261  007928  5006               	movf	(??_pinMode+1)^0,w,c
  2262  00792A  1293               	iorwf	147,f,c	;volatile
  2263  00792C  EF5D  F03D         	goto	l398
  2264  007930                     l2385:
  2265  007930  C001  F005         	movff	pinMode@pin,??_pinMode
  2266  007934  0EF8               	movlw	-8
  2267  007936  2605               	addwf	??_pinMode^0,f,c
  2268  007938  0E01               	movlw	1
  2269  00793A  6E06               	movwf	(??_pinMode+1)^0,c
  2270  00793C  2A05               	incf	??_pinMode^0,f,c
  2271  00793E  EFA3  F03C         	goto	u1954
  2272  007942                     u1955:
  2273  007942  90D8               	bcf	status,0,c
  2274  007944  3606               	rlcf	(??_pinMode+1)^0,f,c
  2275  007946                     u1954:
  2276  007946  2E05               	decfsz	??_pinMode^0,f,c
  2277  007948  EFA1  F03C         	goto	u1955
  2278  00794C  5006               	movf	(??_pinMode+1)^0,w,c
  2279  00794E  0AFF               	xorlw	255
  2280  007950  1693               	andwf	147,f,c	;volatile
  2281  007952  EF5D  F03D         	goto	l398
  2282  007956                     l2387:
  2283  007956  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2284  007958  EFB9  F03C         	goto	u1960
  2285  00795C  5002               	movf	(pinMode@pin+1)^0,w,c
  2286  00795E  E107               	bnz	u1961
  2287  007960  0E18               	movlw	24
  2288  007962  5C01               	subwf	pinMode@pin^0,w,c
  2289  007964  B0D8               	btfsc	status,0,c
  2290  007966  EFB7  F03C         	goto	u1961
  2291  00796A  EFB9  F03C         	goto	u1960
  2292  00796E                     u1961:
  2293  00796E  EFE7  F03C         	goto	l2395
  2294  007972                     u1960:
  2295  007972                     
  2296                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  2297  007972  5003               	movf	pinMode@type^0,w,c
  2298  007974  1004               	iorwf	(pinMode@type+1)^0,w,c
  2299  007976  B4D8               	btfsc	status,2,c
  2300  007978  EFC0  F03C         	goto	u1971
  2301  00797C  EFC2  F03C         	goto	u1970
  2302  007980                     u1971:
  2303  007980  EFD4  F03C         	goto	l2393
  2304  007984                     u1970:
  2305  007984  C001  F005         	movff	pinMode@pin,??_pinMode
  2306  007988  0EF0               	movlw	-16
  2307  00798A  2605               	addwf	??_pinMode^0,f,c
  2308  00798C  0E01               	movlw	1
  2309  00798E  6E06               	movwf	(??_pinMode+1)^0,c
  2310  007990  2A05               	incf	??_pinMode^0,f,c
  2311  007992  EFCD  F03C         	goto	u1984
  2312  007996                     u1985:
  2313  007996  90D8               	bcf	status,0,c
  2314  007998  3606               	rlcf	(??_pinMode+1)^0,f,c
  2315  00799A                     u1984:
  2316  00799A  2E05               	decfsz	??_pinMode^0,f,c
  2317  00799C  EFCB  F03C         	goto	u1985
  2318  0079A0  5006               	movf	(??_pinMode+1)^0,w,c
  2319  0079A2  1294               	iorwf	148,f,c	;volatile
  2320  0079A4  EF5D  F03D         	goto	l398
  2321  0079A8                     l2393:
  2322  0079A8  C001  F005         	movff	pinMode@pin,??_pinMode
  2323  0079AC  0EF0               	movlw	-16
  2324  0079AE  2605               	addwf	??_pinMode^0,f,c
  2325  0079B0  0E01               	movlw	1
  2326  0079B2  6E06               	movwf	(??_pinMode+1)^0,c
  2327  0079B4  2A05               	incf	??_pinMode^0,f,c
  2328  0079B6  EFDF  F03C         	goto	u1994
  2329  0079BA                     u1995:
  2330  0079BA  90D8               	bcf	status,0,c
  2331  0079BC  3606               	rlcf	(??_pinMode+1)^0,f,c
  2332  0079BE                     u1994:
  2333  0079BE  2E05               	decfsz	??_pinMode^0,f,c
  2334  0079C0  EFDD  F03C         	goto	u1995
  2335  0079C4  5006               	movf	(??_pinMode+1)^0,w,c
  2336  0079C6  0AFF               	xorlw	255
  2337  0079C8  1694               	andwf	148,f,c	;volatile
  2338  0079CA  EF5D  F03D         	goto	l398
  2339  0079CE                     l2395:
  2340  0079CE  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2341  0079D0  EFF5  F03C         	goto	u2000
  2342  0079D4  5002               	movf	(pinMode@pin+1)^0,w,c
  2343  0079D6  E107               	bnz	u2001
  2344  0079D8  0E20               	movlw	32
  2345  0079DA  5C01               	subwf	pinMode@pin^0,w,c
  2346  0079DC  B0D8               	btfsc	status,0,c
  2347  0079DE  EFF3  F03C         	goto	u2001
  2348  0079E2  EFF5  F03C         	goto	u2000
  2349  0079E6                     u2001:
  2350  0079E6  EF23  F03D         	goto	l2403
  2351  0079EA                     u2000:
  2352  0079EA                     
  2353                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  2354  0079EA  5003               	movf	pinMode@type^0,w,c
  2355  0079EC  1004               	iorwf	(pinMode@type+1)^0,w,c
  2356  0079EE  B4D8               	btfsc	status,2,c
  2357  0079F0  EFFC  F03C         	goto	u2011
  2358  0079F4  EFFE  F03C         	goto	u2010
  2359  0079F8                     u2011:
  2360  0079F8  EF10  F03D         	goto	l2401
  2361  0079FC                     u2010:
  2362  0079FC  C001  F005         	movff	pinMode@pin,??_pinMode
  2363  007A00  0EE8               	movlw	-24
  2364  007A02  2605               	addwf	??_pinMode^0,f,c
  2365  007A04  0E01               	movlw	1
  2366  007A06  6E06               	movwf	(??_pinMode+1)^0,c
  2367  007A08  2A05               	incf	??_pinMode^0,f,c
  2368  007A0A  EF09  F03D         	goto	u2024
  2369  007A0E                     u2025:
  2370  007A0E  90D8               	bcf	status,0,c
  2371  007A10  3606               	rlcf	(??_pinMode+1)^0,f,c
  2372  007A12                     u2024:
  2373  007A12  2E05               	decfsz	??_pinMode^0,f,c
  2374  007A14  EF07  F03D         	goto	u2025
  2375  007A18  5006               	movf	(??_pinMode+1)^0,w,c
  2376  007A1A  1295               	iorwf	149,f,c	;volatile
  2377  007A1C  EF5D  F03D         	goto	l398
  2378  007A20                     l2401:
  2379  007A20  C001  F005         	movff	pinMode@pin,??_pinMode
  2380  007A24  0EE8               	movlw	-24
  2381  007A26  2605               	addwf	??_pinMode^0,f,c
  2382  007A28  0E01               	movlw	1
  2383  007A2A  6E06               	movwf	(??_pinMode+1)^0,c
  2384  007A2C  2A05               	incf	??_pinMode^0,f,c
  2385  007A2E  EF1B  F03D         	goto	u2034
  2386  007A32                     u2035:
  2387  007A32  90D8               	bcf	status,0,c
  2388  007A34  3606               	rlcf	(??_pinMode+1)^0,f,c
  2389  007A36                     u2034:
  2390  007A36  2E05               	decfsz	??_pinMode^0,f,c
  2391  007A38  EF19  F03D         	goto	u2035
  2392  007A3C  5006               	movf	(??_pinMode+1)^0,w,c
  2393  007A3E  0AFF               	xorlw	255
  2394  007A40  1695               	andwf	149,f,c	;volatile
  2395  007A42  EF5D  F03D         	goto	l398
  2396  007A46                     l2403:
  2397  007A46  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2398  007A48  EF31  F03D         	goto	u2040
  2399  007A4C  5002               	movf	(pinMode@pin+1)^0,w,c
  2400  007A4E  E107               	bnz	u2041
  2401  007A50  0E28               	movlw	40
  2402  007A52  5C01               	subwf	pinMode@pin^0,w,c
  2403  007A54  B0D8               	btfsc	status,0,c
  2404  007A56  EF2F  F03D         	goto	u2041
  2405  007A5A  EF31  F03D         	goto	u2040
  2406  007A5E                     u2041:
  2407  007A5E  EF5D  F03D         	goto	l398
  2408  007A62                     u2040:
  2409  007A62                     
  2410                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  2411  007A62  5003               	movf	pinMode@type^0,w,c
  2412  007A64  1004               	iorwf	(pinMode@type+1)^0,w,c
  2413  007A66  B4D8               	btfsc	status,2,c
  2414  007A68  EF38  F03D         	goto	u2051
  2415  007A6C  EF3A  F03D         	goto	u2050
  2416  007A70                     u2051:
  2417  007A70  EF4C  F03D         	goto	l2409
  2418  007A74                     u2050:
  2419  007A74  C001  F005         	movff	pinMode@pin,??_pinMode
  2420  007A78  0EE0               	movlw	-32
  2421  007A7A  2605               	addwf	??_pinMode^0,f,c
  2422  007A7C  0E01               	movlw	1
  2423  007A7E  6E06               	movwf	(??_pinMode+1)^0,c
  2424  007A80  2A05               	incf	??_pinMode^0,f,c
  2425  007A82  EF45  F03D         	goto	u2064
  2426  007A86                     u2065:
  2427  007A86  90D8               	bcf	status,0,c
  2428  007A88  3606               	rlcf	(??_pinMode+1)^0,f,c
  2429  007A8A                     u2064:
  2430  007A8A  2E05               	decfsz	??_pinMode^0,f,c
  2431  007A8C  EF43  F03D         	goto	u2065
  2432  007A90  5006               	movf	(??_pinMode+1)^0,w,c
  2433  007A92  1296               	iorwf	150,f,c	;volatile
  2434  007A94  EF5D  F03D         	goto	l398
  2435  007A98                     l2409:
  2436  007A98  C001  F005         	movff	pinMode@pin,??_pinMode
  2437  007A9C  0EE0               	movlw	-32
  2438  007A9E  2605               	addwf	??_pinMode^0,f,c
  2439  007AA0  0E01               	movlw	1
  2440  007AA2  6E06               	movwf	(??_pinMode+1)^0,c
  2441  007AA4  2A05               	incf	??_pinMode^0,f,c
  2442  007AA6  EF57  F03D         	goto	u2074
  2443  007AAA                     u2075:
  2444  007AAA  90D8               	bcf	status,0,c
  2445  007AAC  3606               	rlcf	(??_pinMode+1)^0,f,c
  2446  007AAE                     u2074:
  2447  007AAE  2E05               	decfsz	??_pinMode^0,f,c
  2448  007AB0  EF55  F03D         	goto	u2075
  2449  007AB4  5006               	movf	(??_pinMode+1)^0,w,c
  2450  007AB6  0AFF               	xorlw	255
  2451  007AB8  1696               	andwf	150,f,c	;volatile
  2452  007ABA                     l398:
  2453  007ABA  0012               	return		;funcret
  2454  007ABC                     __end_of_pinMode:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function _SetaMeta *****************
  2458 ;; Defined at:
  2459 ;;		line 113 in file "main.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  i               2   20[COMRAM] int 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2473 ;;      Params:         0       0       0       0       0       0       0
  2474 ;;      Locals:         2       0       0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0       0       0
  2476 ;;      Totals:         2       0       0       0       0       0       0
  2477 ;;Total ram usage:        2 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 6
  2480 ;; This function calls:
  2481 ;;		_DesligarLed
  2482 ;;		_adcRead
  2483 ;;		_lcdCommand
  2484 ;;		_lcdNumber
  2485 ;;		_lcdString
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text10
  2492  00699A                     __ptext10:
  2493                           	callstack 0
  2494  00699A                     _SetaMeta:
  2495                           	callstack 24
  2496  00699A                     
  2497                           ;main.c: 114:     studyGoal = adcRead(0);
  2498  00699A  0E00               	movlw	0
  2499  00699C  6E02               	movwf	(adcRead@channel+1)^0,c
  2500  00699E  0E00               	movlw	0
  2501  0069A0  6E01               	movwf	adcRead@channel^0,c
  2502  0069A2  ECA1  F032         	call	_adcRead	;wreg free
  2503  0069A6  C001  F043         	movff	?_adcRead,_studyGoal
  2504  0069AA  C002  F044         	movff	?_adcRead+1,_studyGoal+1
  2505  0069AE  0E00               	movlw	0
  2506  0069B0  BE44               	btfsc	(_studyGoal+1)^0,7,c
  2507  0069B2  0EFF               	movlw	-1
  2508  0069B4  6E45               	movwf	(_studyGoal+2)^0,c
  2509  0069B6  6E46               	movwf	(_studyGoal+3)^0,c
  2510  0069B8                     
  2511                           ;main.c: 115:     if (studyGoal != oldStudyGoal) {
  2512  0069B8  503F               	movf	_oldStudyGoal^0,w,c
  2513  0069BA  1843               	xorwf	_studyGoal^0,w,c
  2514  0069BC  E10F               	bnz	u2410
  2515  0069BE  5040               	movf	(_oldStudyGoal+1)^0,w,c
  2516  0069C0  1844               	xorwf	(_studyGoal+1)^0,w,c
  2517  0069C2  E10C               	bnz	u2410
  2518  0069C4  5041               	movf	(_oldStudyGoal+2)^0,w,c
  2519  0069C6  1845               	xorwf	(_studyGoal+2)^0,w,c
  2520  0069C8  E109               	bnz	u2410
  2521  0069CA  5042               	movf	(_oldStudyGoal+3)^0,w,c
  2522  0069CC  1846               	xorwf	(_studyGoal+3)^0,w,c
  2523  0069CE  B4D8               	btfsc	status,2,c
  2524  0069D0  EFEC  F034         	goto	u2411
  2525  0069D4  EFEE  F034         	goto	u2410
  2526  0069D8                     u2411:
  2527  0069D8  EF25  F035         	goto	l104
  2528  0069DC                     u2410:
  2529  0069DC                     
  2530                           ;main.c: 116:         oldStudyGoal = studyGoal;
  2531  0069DC  C043  F03F         	movff	_studyGoal,_oldStudyGoal
  2532  0069E0  C044  F040         	movff	_studyGoal+1,_oldStudyGoal+1
  2533  0069E4  C045  F041         	movff	_studyGoal+2,_oldStudyGoal+2
  2534  0069E8  C046  F042         	movff	_studyGoal+3,_oldStudyGoal+3
  2535  0069EC                     
  2536                           ;main.c: 117:         lcdCommand(0x80);
  2537  0069EC  0E80               	movlw	128
  2538  0069EE  EC6F  F031         	call	_lcdCommand
  2539  0069F2                     
  2540                           ;main.c: 118:         lcdString("Atual meta:");
  2541  0069F2  0ECD               	movlw	low STR_2
  2542  0069F4  6E0F               	movwf	lcdString@msg^0,c
  2543  0069F6  0E7F               	movlw	high STR_2
  2544  0069F8  6E10               	movwf	(lcdString@msg+1)^0,c
  2545  0069FA  ECC9  F032         	call	_lcdString	;wreg free
  2546  0069FE                     
  2547                           ;main.c: 119:         lcdCommand(0xC0);
  2548  0069FE  0EC0               	movlw	192
  2549  006A00  EC6F  F031         	call	_lcdCommand
  2550  006A04                     
  2551                           ;main.c: 120:         lcdNumber(studyGoal);
  2552  006A04  C043  F00F         	movff	_studyGoal,lcdNumber@value
  2553  006A08  C044  F010         	movff	_studyGoal+1,lcdNumber@value+1
  2554  006A0C  ECAD  F033         	call	_lcdNumber	;wreg free
  2555  006A10                     
  2556                           ;main.c: 121:         lcdString(" minutos");
  2557  006A10  0EE5               	movlw	low STR_3
  2558  006A12  6E0F               	movwf	lcdString@msg^0,c
  2559  006A14  0E7F               	movlw	high STR_3
  2560  006A16  6E10               	movwf	(lcdString@msg+1)^0,c
  2561  006A18  ECC9  F032         	call	_lcdString	;wreg free
  2562  006A1C                     
  2563                           ;main.c: 122:         for (int i = 0; i < 8; i++) {
  2564  006A1C  0E00               	movlw	0
  2565  006A1E  6E16               	movwf	(SetaMeta@i+1)^0,c
  2566  006A20  0E00               	movlw	0
  2567  006A22  6E15               	movwf	SetaMeta@i^0,c
  2568  006A24                     l2655:
  2569                           
  2570                           ;main.c: 123:             DesligarLed(i);
  2571  006A24  5015               	movf	SetaMeta@i^0,w,c
  2572  006A26  EC58  F031         	call	_DesligarLed
  2573  006A2A                     
  2574                           ;main.c: 124:         }
  2575  006A2A  4A15               	infsnz	SetaMeta@i^0,f,c
  2576  006A2C  2A16               	incf	(SetaMeta@i+1)^0,f,c
  2577  006A2E  BE16               	btfsc	(SetaMeta@i+1)^0,7,c
  2578  006A30  EF23  F035         	goto	u2421
  2579  006A34  5016               	movf	(SetaMeta@i+1)^0,w,c
  2580  006A36  E109               	bnz	u2420
  2581  006A38  0E08               	movlw	8
  2582  006A3A  5C15               	subwf	SetaMeta@i^0,w,c
  2583  006A3C  A0D8               	btfss	status,0,c
  2584  006A3E  EF23  F035         	goto	u2421
  2585  006A42  EF25  F035         	goto	u2420
  2586  006A46                     u2421:
  2587  006A46  EF12  F035         	goto	l2655
  2588  006A4A                     u2420:
  2589  006A4A                     l104:
  2590  006A4A  0012               	return		;funcret
  2591  006A4C                     __end_of_SetaMeta:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function _adcRead *****************
  2595 ;; Defined at:
  2596 ;;		line 38 in file "adc.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  channel         2    0[COMRAM] unsigned int 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  ADvalor         2    2[COMRAM] unsigned int 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  2    0[COMRAM] int 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2610 ;;      Params:         2       0       0       0       0       0       0
  2611 ;;      Locals:         2       0       0       0       0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0
  2613 ;;      Totals:         4       0       0       0       0       0       0
  2614 ;;Total ram usage:        4 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_SetaMeta
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text11
  2624  006542                     __ptext11:
  2625                           	callstack 0
  2626  006542                     _adcRead:
  2627                           	callstack 29
  2628  006542                     
  2629                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  2630  006542  0EC3               	movlw	195
  2631  006544  16C2               	andwf	194,f,c	;volatile
  2632                           
  2633                           ;adc.c: 41:     if (channel < 3) {
  2634  006546  5002               	movf	(adcRead@channel+1)^0,w,c
  2635  006548  E107               	bnz	u2261
  2636  00654A  0E03               	movlw	3
  2637  00654C  5C01               	subwf	adcRead@channel^0,w,c
  2638  00654E  B0D8               	btfsc	status,0,c
  2639  006550  EFAC  F032         	goto	u2261
  2640  006554  EFAE  F032         	goto	u2260
  2641  006558                     u2261:
  2642  006558  EFB2  F032         	goto	l2561
  2643  00655C                     u2260:
  2644  00655C                     
  2645                           ;adc.c: 42:         ADCON0 |= channel << 2;
  2646  00655C  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  2647  00655E  46E8               	rlncf	wreg,f,c
  2648  006560  0BFC               	andlw	252
  2649  006562  12C2               	iorwf	194,f,c	;volatile
  2650  006564                     l2561:
  2651                           
  2652                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  2653  006564  82C2               	bsf	194,1,c	;volatile
  2654  006566                     l162:
  2655  006566  B2C2               	btfsc	194,1,c	;volatile
  2656  006568  EFB8  F032         	goto	u2271
  2657  00656C  EFBA  F032         	goto	u2270
  2658  006570                     u2271:
  2659  006570  EFB3  F032         	goto	l162
  2660  006574                     u2270:
  2661  006574                     
  2662                           ;adc.c: 49:     ADvalor = ADRESH;
  2663  006574  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  2664  006578  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  2665  00657A                     
  2666                           ;adc.c: 50:     ADvalor <<= 8;
  2667  00657A  5003               	movf	adcRead@ADvalor^0,w,c
  2668  00657C  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  2669  00657E  6A03               	clrf	adcRead@ADvalor^0,c
  2670  006580                     
  2671                           ;adc.c: 51:     ADvalor += ADRESL;
  2672  006580  50C3               	movf	195,w,c	;volatile
  2673  006582  2603               	addwf	adcRead@ADvalor^0,f,c
  2674  006584  0E00               	movlw	0
  2675  006586  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  2676  006588                     
  2677                           ;adc.c: 52:     return ADvalor;
  2678  006588  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  2679  00658C  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  2680  006590  0012               	return		;funcret
  2681  006592                     __end_of_adcRead:
  2682                           	callstack 0
  2683                           
  2684 ;; *************** function _DesligarLed *****************
  2685 ;; Defined at:
  2686 ;;		line 19 in file "led.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  num             1    wreg     unsigned char 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  num             1    0[COMRAM] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2700 ;;      Params:         0       0       0       0       0       0       0
  2701 ;;      Locals:         1       0       0       0       0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0
  2703 ;;      Totals:         1       0       0       0       0       0       0
  2704 ;;Total ram usage:        1 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_SetaMeta
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text12
  2714  0062B0                     __ptext12:
  2715                           	callstack 0
  2716  0062B0                     _DesligarLed:
  2717                           	callstack 29
  2718                           
  2719                           ;incstack = 0
  2720                           ;DesligarLed@num stored from wreg
  2721  0062B0  6E01               	movwf	DesligarLed@num^0,c
  2722  0062B2                     
  2723                           ;led.c: 20:     (*(volatile __near unsigned char*) 0xF83) &= ~led[num];
  2724  0062B2  0E63               	movlw	low _led
  2725  0062B4  2401               	addwf	DesligarLed@num^0,w,c
  2726  0062B6  6ED9               	movwf	fsr2l,c
  2727  0062B8  6ADA               	clrf	fsr2h,c
  2728  0062BA  0E00               	movlw	high _led
  2729  0062BC  22DA               	addwfc	fsr2h,f,c
  2730  0062BE  50DF               	movf	indf2,w,c
  2731  0062C0  0AFF               	xorlw	255
  2732  0062C2  1683               	andwf	131,f,c	;volatile
  2733  0062C4  0012               	return		;funcret
  2734  0062C6                     __end_of_DesligarLed:
  2735                           	callstack 0
  2736                           
  2737 ;; *************** function _LeTeclado *****************
  2738 ;; Defined at:
  2739 ;;		line 97 in file "main.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;		None
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2753 ;;      Params:         0       0       0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 8
  2760 ;; This function calls:
  2761 ;;		_kpRead
  2762 ;;		_kpReadKey
  2763 ;;		_operate
  2764 ;; This function is called by:
  2765 ;;		_main
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text13
  2770  006846                     __ptext13:
  2771                           	callstack 0
  2772  006846                     _LeTeclado:
  2773                           	callstack 22
  2774  006846                     
  2775                           ;main.c: 98:     if (kpRead() != oldValue) {
  2776  006846  EC49  F031         	call	_kpRead	;wreg free
  2777  00684A  5059               	movf	_oldValue^0,w,c
  2778  00684C  1801               	xorwf	?_kpRead^0,w,c
  2779  00684E  E109               	bnz	u2380
  2780  006850  505A               	movf	(_oldValue+1)^0,w,c
  2781  006852  1802               	xorwf	(?_kpRead+1)^0,w,c
  2782  006854  B4D8               	btfsc	status,2,c
  2783  006856  EF2F  F034         	goto	u2381
  2784  00685A  EF31  F034         	goto	u2380
  2785  00685E                     u2381:
  2786  00685E  EF74  F034         	goto	l98
  2787  006862                     u2380:
  2788  006862                     
  2789                           ;main.c: 99:         oldValue = kpRead();
  2790  006862  EC49  F031         	call	_kpRead	;wreg free
  2791  006866  C001  F059         	movff	?_kpRead,_oldValue
  2792  00686A  C002  F05A         	movff	?_kpRead+1,_oldValue+1
  2793  00686E                     
  2794                           ;main.c: 100:         tecla = kpReadKey();
  2795  00686E  ECE7  F033         	call	_kpReadKey	;wreg free
  2796  006872  6E62               	movwf	_tecla^0,c
  2797  006874                     
  2798                           ;main.c: 101:         if (reset % 2 == 0) {
  2799  006874  B06B               	btfsc	_reset^0,0,c
  2800  006876  EF3F  F034         	goto	u2391
  2801  00687A  EF41  F034         	goto	u2390
  2802  00687E                     u2391:
  2803  00687E  EF4B  F034         	goto	l2625
  2804  006882                     u2390:
  2805  006882                     
  2806                           ;main.c: 102:             time = breakTime;
  2807  006882  C073  F04F         	movff	_breakTime,_time
  2808  006886  C074  F050         	movff	_breakTime+1,_time+1
  2809  00688A  C075  F051         	movff	_breakTime+2,_time+2
  2810  00688E  C076  F052         	movff	_breakTime+3,_time+3
  2811                           
  2812                           ;main.c: 103:         } else if (reset == 8) {
  2813  006892  EF71  F034         	goto	l2631
  2814  006896                     l2625:
  2815  006896  0E08               	movlw	8
  2816  006898  186B               	xorwf	_reset^0,w,c
  2817  00689A  106C               	iorwf	(_reset+1)^0,w,c
  2818  00689C  106D               	iorwf	(_reset+2)^0,w,c
  2819  00689E  106E               	iorwf	(_reset+3)^0,w,c
  2820  0068A0  A4D8               	btfss	status,2,c
  2821  0068A2  EF55  F034         	goto	u2401
  2822  0068A6  EF57  F034         	goto	u2400
  2823  0068AA                     u2401:
  2824  0068AA  EF69  F034         	goto	l96
  2825  0068AE                     u2400:
  2826  0068AE                     
  2827                           ;main.c: 104:             time = bigBreak;
  2828  0068AE  C06F  F04F         	movff	_bigBreak,_time
  2829  0068B2  C070  F050         	movff	_bigBreak+1,_time+1
  2830  0068B6  C071  F051         	movff	_bigBreak+2,_time+2
  2831  0068BA  C072  F052         	movff	_bigBreak+3,_time+3
  2832  0068BE                     
  2833                           ;main.c: 105:             reset = 0;
  2834  0068BE  0E00               	movlw	0
  2835  0068C0  6E6B               	movwf	_reset^0,c
  2836  0068C2  0E00               	movlw	0
  2837  0068C4  6E6C               	movwf	(_reset+1)^0,c
  2838  0068C6  0E00               	movlw	0
  2839  0068C8  6E6D               	movwf	(_reset+2)^0,c
  2840  0068CA  0E00               	movlw	0
  2841  0068CC  6E6E               	movwf	(_reset+3)^0,c
  2842                           
  2843                           ;main.c: 106:         } else {
  2844  0068CE  EF71  F034         	goto	l2631
  2845  0068D2                     l96:
  2846                           
  2847                           ;main.c: 107:             time = studyTime;
  2848  0068D2  C077  F04F         	movff	_studyTime,_time
  2849  0068D6  C078  F050         	movff	_studyTime+1,_time+1
  2850  0068DA  C079  F051         	movff	_studyTime+2,_time+2
  2851  0068DE  C07A  F052         	movff	_studyTime+3,_time+3
  2852  0068E2                     l2631:
  2853                           
  2854                           ;main.c: 109:         operate(tecla);
  2855  0068E2  5062               	movf	_tecla^0,w,c
  2856  0068E4  EC5E  F03D         	call	_operate
  2857  0068E8                     l98:
  2858  0068E8  0012               	return		;funcret
  2859  0068EA                     __end_of_LeTeclado:
  2860                           	callstack 0
  2861                           
  2862 ;; *************** function _operate *****************
  2863 ;; Defined at:
  2864 ;;		line 24 in file "main.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  op              1    wreg     unsigned char 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  op              1   48[COMRAM] unsigned char 
  2869 ;;  tempo           2   49[COMRAM] int 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2879 ;;      Params:         0       0       0       0       0       0       0
  2880 ;;      Locals:        11       0       0       0       0       0       0
  2881 ;;      Temps:          2       0       0       0       0       0       0
  2882 ;;      Totals:        13       0       0       0       0       0       0
  2883 ;;Total ram usage:       13 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 7
  2886 ;; This function calls:
  2887 ;;		___aldiv
  2888 ;;		___almod
  2889 ;;		_lcdCommand
  2890 ;;		_lcdNumber
  2891 ;;		_lcdString
  2892 ;;		_ssdDigit
  2893 ;;		_ssdUpdate
  2894 ;;		_verifyGoal
  2895 ;; This function is called by:
  2896 ;;		_LeTeclado
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text14
  2901  007ABC                     __ptext14:
  2902                           	callstack 0
  2903  007ABC                     _operate:
  2904                           	callstack 22
  2905                           
  2906                           ;incstack = 0
  2907                           ;operate@op stored from wreg
  2908  007ABC  6E31               	movwf	operate@op^0,c
  2909  007ABE                     
  2910                           ;main.c: 25:     switch (op) {
  2911  007ABE  EF41  F03F         	goto	l2529
  2912  007AC2                     l66:
  2913                           
  2914                           ;main.c: 27:             if (reset % 2 == 0) {
  2915  007AC2  B06B               	btfsc	_reset^0,0,c
  2916  007AC4  EF66  F03D         	goto	u2141
  2917  007AC8  EF68  F03D         	goto	u2140
  2918  007ACC                     u2141:
  2919  007ACC  EF78  F03D         	goto	l2453
  2920  007AD0                     u2140:
  2921  007AD0                     
  2922                           ;main.c: 28:                 breakTime += 60;
  2923  007AD0  0E3C               	movlw	60
  2924  007AD2  2673               	addwf	_breakTime^0,f,c
  2925  007AD4  0E00               	movlw	0
  2926  007AD6  2274               	addwfc	(_breakTime+1)^0,f,c
  2927  007AD8  2275               	addwfc	(_breakTime+2)^0,f,c
  2928  007ADA  2276               	addwfc	(_breakTime+3)^0,f,c
  2929  007ADC                     l2451:
  2930                           
  2931                           ;main.c: 29:                 time = breakTime;
  2932  007ADC  C073  F04F         	movff	_breakTime,_time
  2933  007AE0  C074  F050         	movff	_breakTime+1,_time+1
  2934  007AE4  C075  F051         	movff	_breakTime+2,_time+2
  2935  007AE8  C076  F052         	movff	_breakTime+3,_time+3
  2936                           
  2937                           ;main.c: 30:             } else if (reset == 8) {
  2938  007AEC  EF62  F03F         	goto	l90
  2939  007AF0                     l2453:
  2940  007AF0  0E08               	movlw	8
  2941  007AF2  186B               	xorwf	_reset^0,w,c
  2942  007AF4  106C               	iorwf	(_reset+1)^0,w,c
  2943  007AF6  106D               	iorwf	(_reset+2)^0,w,c
  2944  007AF8  106E               	iorwf	(_reset+3)^0,w,c
  2945  007AFA  A4D8               	btfss	status,2,c
  2946  007AFC  EF82  F03D         	goto	u2151
  2947  007B00  EF84  F03D         	goto	u2150
  2948  007B04                     u2151:
  2949  007B04  EF94  F03D         	goto	l2459
  2950  007B08                     u2150:
  2951  007B08                     
  2952                           ;main.c: 31:                 bigBreak += 60;
  2953  007B08  0E3C               	movlw	60
  2954  007B0A  266F               	addwf	_bigBreak^0,f,c
  2955  007B0C  0E00               	movlw	0
  2956  007B0E  2270               	addwfc	(_bigBreak+1)^0,f,c
  2957  007B10  2271               	addwfc	(_bigBreak+2)^0,f,c
  2958  007B12  2272               	addwfc	(_bigBreak+3)^0,f,c
  2959  007B14                     l2457:
  2960                           
  2961                           ;main.c: 32:                 time = bigBreak;
  2962  007B14  C06F  F04F         	movff	_bigBreak,_time
  2963  007B18  C070  F050         	movff	_bigBreak+1,_time+1
  2964  007B1C  C071  F051         	movff	_bigBreak+2,_time+2
  2965  007B20  C072  F052         	movff	_bigBreak+3,_time+3
  2966                           
  2967                           ;main.c: 33:             } else {
  2968  007B24  EF62  F03F         	goto	l90
  2969  007B28                     l2459:
  2970                           
  2971                           ;main.c: 34:                 studyTime += 60;
  2972  007B28  0E3C               	movlw	60
  2973  007B2A  2677               	addwf	_studyTime^0,f,c
  2974  007B2C  0E00               	movlw	0
  2975  007B2E  2278               	addwfc	(_studyTime+1)^0,f,c
  2976  007B30  2279               	addwfc	(_studyTime+2)^0,f,c
  2977  007B32  227A               	addwfc	(_studyTime+3)^0,f,c
  2978  007B34                     l2461:
  2979                           
  2980                           ;main.c: 35:                 time = studyTime;
  2981  007B34  C077  F04F         	movff	_studyTime,_time
  2982  007B38  C078  F050         	movff	_studyTime+1,_time+1
  2983  007B3C  C079  F051         	movff	_studyTime+2,_time+2
  2984  007B40  C07A  F052         	movff	_studyTime+3,_time+3
  2985  007B44  EF62  F03F         	goto	l90
  2986  007B48                     l72:
  2987                           
  2988                           ;main.c: 40:             if (reset % 2 == 0) {
  2989  007B48  B06B               	btfsc	_reset^0,0,c
  2990  007B4A  EFA9  F03D         	goto	u2161
  2991  007B4E  EFAB  F03D         	goto	u2160
  2992  007B52                     u2161:
  2993  007B52  EFB5  F03D         	goto	l2467
  2994  007B56                     u2160:
  2995  007B56                     
  2996                           ;main.c: 41:                 breakTime -= 60;
  2997  007B56  0EC4               	movlw	196
  2998  007B58  2673               	addwf	_breakTime^0,f,c
  2999  007B5A  0EFF               	movlw	255
  3000  007B5C  2274               	addwfc	(_breakTime+1)^0,f,c
  3001  007B5E  0EFF               	movlw	255
  3002  007B60  2275               	addwfc	(_breakTime+2)^0,f,c
  3003  007B62  0EFF               	movlw	255
  3004  007B64  2276               	addwfc	(_breakTime+3)^0,f,c
  3005  007B66  EF6E  F03D         	goto	l2451
  3006  007B6A                     l2467:
  3007  007B6A  0E08               	movlw	8
  3008  007B6C  186B               	xorwf	_reset^0,w,c
  3009  007B6E  106C               	iorwf	(_reset+1)^0,w,c
  3010  007B70  106D               	iorwf	(_reset+2)^0,w,c
  3011  007B72  106E               	iorwf	(_reset+3)^0,w,c
  3012  007B74  A4D8               	btfss	status,2,c
  3013  007B76  EFBF  F03D         	goto	u2171
  3014  007B7A  EFC1  F03D         	goto	u2170
  3015  007B7E                     u2171:
  3016  007B7E  EFCB  F03D         	goto	l2473
  3017  007B82                     u2170:
  3018  007B82                     
  3019                           ;main.c: 44:                 bigBreak -= 60;
  3020  007B82  0EC4               	movlw	196
  3021  007B84  266F               	addwf	_bigBreak^0,f,c
  3022  007B86  0EFF               	movlw	255
  3023  007B88  2270               	addwfc	(_bigBreak+1)^0,f,c
  3024  007B8A  0EFF               	movlw	255
  3025  007B8C  2271               	addwfc	(_bigBreak+2)^0,f,c
  3026  007B8E  0EFF               	movlw	255
  3027  007B90  2272               	addwfc	(_bigBreak+3)^0,f,c
  3028  007B92  EF8A  F03D         	goto	l2457
  3029  007B96                     l2473:
  3030                           
  3031                           ;main.c: 47:                 studyTime -= 60;
  3032  007B96  0EC4               	movlw	196
  3033  007B98  2677               	addwf	_studyTime^0,f,c
  3034  007B9A  0EFF               	movlw	255
  3035  007B9C  2278               	addwfc	(_studyTime+1)^0,f,c
  3036  007B9E  0EFF               	movlw	255
  3037  007BA0  2279               	addwfc	(_studyTime+2)^0,f,c
  3038  007BA2  0EFF               	movlw	255
  3039  007BA4  227A               	addwfc	(_studyTime+3)^0,f,c
  3040  007BA6  EF9A  F03D         	goto	l2461
  3041  007BAA                     l77:
  3042                           
  3043                           ;main.c: 53:             if (reset % 2 == 0) {
  3044  007BAA  B06B               	btfsc	_reset^0,0,c
  3045  007BAC  EFDA  F03D         	goto	u2181
  3046  007BB0  EFDC  F03D         	goto	u2180
  3047  007BB4                     u2181:
  3048  007BB4  EFE7  F03D         	goto	l2481
  3049  007BB8                     u2180:
  3050  007BB8                     
  3051                           ;main.c: 54:                 lcdCommand(0x01);
  3052  007BB8  0E01               	movlw	1
  3053  007BBA  EC6F  F031         	call	_lcdCommand
  3054  007BBE                     
  3055                           ;main.c: 55:                 lcdString("Hora do descanso!");
  3056  007BBE  0EE1               	movlw	low STR_1
  3057  007BC0  6E0F               	movwf	lcdString@msg^0,c
  3058  007BC2  0E7E               	movlw	high STR_1
  3059  007BC4  6E10               	movwf	(lcdString@msg+1)^0,c
  3060  007BC6  ECC9  F032         	call	_lcdString	;wreg free
  3061                           
  3062                           ;main.c: 56:             } else if (studyGoal != 0) {
  3063  007BCA  EF19  F03F         	goto	l81
  3064  007BCE                     l2481:
  3065  007BCE  5043               	movf	_studyGoal^0,w,c
  3066  007BD0  1044               	iorwf	(_studyGoal+1)^0,w,c
  3067  007BD2  1045               	iorwf	(_studyGoal+2)^0,w,c
  3068  007BD4  1046               	iorwf	(_studyGoal+3)^0,w,c
  3069  007BD6  B4D8               	btfsc	status,2,c
  3070  007BD8  EFF0  F03D         	goto	u2191
  3071  007BDC  EFF2  F03D         	goto	u2190
  3072  007BE0                     u2191:
  3073  007BE0  EF19  F03F         	goto	l81
  3074  007BE4                     u2190:
  3075  007BE4                     
  3076                           ;main.c: 57:                 lcdCommand(0x01);
  3077  007BE4  0E01               	movlw	1
  3078  007BE6  EC6F  F031         	call	_lcdCommand
  3079  007BEA                     
  3080                           ;main.c: 58:                 lcdString("Atual meta:");
  3081  007BEA  0ECD               	movlw	low STR_2
  3082  007BEC  6E0F               	movwf	lcdString@msg^0,c
  3083  007BEE  0E7F               	movlw	high STR_2
  3084  007BF0  6E10               	movwf	(lcdString@msg+1)^0,c
  3085  007BF2  ECC9  F032         	call	_lcdString	;wreg free
  3086  007BF6                     
  3087                           ;main.c: 59:                 lcdCommand(0xC0);
  3088  007BF6  0EC0               	movlw	192
  3089  007BF8  EC6F  F031         	call	_lcdCommand
  3090  007BFC                     
  3091                           ;main.c: 60:                 lcdNumber(studyGoal);
  3092  007BFC  C043  F00F         	movff	_studyGoal,lcdNumber@value
  3093  007C00  C044  F010         	movff	_studyGoal+1,lcdNumber@value+1
  3094  007C04  ECAD  F033         	call	_lcdNumber	;wreg free
  3095  007C08                     
  3096                           ;main.c: 61:                 lcdString(" minutos");
  3097  007C08  0EE5               	movlw	low STR_3
  3098  007C0A  6E0F               	movwf	lcdString@msg^0,c
  3099  007C0C  0E7F               	movlw	high STR_3
  3100  007C0E  6E10               	movwf	(lcdString@msg+1)^0,c
  3101  007C10  ECC9  F032         	call	_lcdString	;wreg free
  3102  007C14                     
  3103                           ;main.c: 62:                 enable = 0;
  3104  007C14  0E00               	movlw	0
  3105  007C16  6E61               	movwf	_enable^0,c
  3106  007C18  EF19  F03F         	goto	l81
  3107  007C1C                     l2495:
  3108                           
  3109                           ;main.c: 65:                 ssdDigit(((time / 3600) % 24) / 10, 0);
  3110  007C1C  0E18               	movlw	24
  3111  007C1E  6E1F               	movwf	___almod@divisor^0,c
  3112  007C20  0E00               	movlw	0
  3113  007C22  6E20               	movwf	(___almod@divisor+1)^0,c
  3114  007C24  0E00               	movlw	0
  3115  007C26  6E21               	movwf	(___almod@divisor+2)^0,c
  3116  007C28  0E00               	movlw	0
  3117  007C2A  6E22               	movwf	(___almod@divisor+3)^0,c
  3118  007C2C  0E10               	movlw	16
  3119  007C2E  6E11               	movwf	___aldiv@divisor^0,c
  3120  007C30  0E0E               	movlw	14
  3121  007C32  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3122  007C34  0E00               	movlw	0
  3123  007C36  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3124  007C38  0E00               	movlw	0
  3125  007C3A  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3126  007C3C  C04F  F00D         	movff	_time,___aldiv@dividend
  3127  007C40  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  3128  007C44  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  3129  007C48  C052  F010         	movff	_time+3,___aldiv@dividend+3
  3130  007C4C  EC58  F036         	call	___aldiv	;wreg free
  3131  007C50  C00D  F01B         	movff	?___aldiv,___almod@dividend
  3132  007C54  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  3133  007C58  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  3134  007C5C  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  3135  007C60  ECE2  F035         	call	___almod	;wreg free
  3136  007C64  C01B  F029         	movff	?___almod,_operate$1189
  3137  007C68  C01C  F02A         	movff	?___almod+1,_operate$1189+1
  3138  007C6C  C01D  F02B         	movff	?___almod+2,_operate$1189+2
  3139  007C70  C01E  F02C         	movff	?___almod+3,_operate$1189+3
  3140                           
  3141                           ;main.c: 65:                 ssdDigit(((time / 3600) % 24) / 10, 0);
  3142  007C74  0E00               	movlw	0
  3143  007C76  6E25               	movwf	ssdDigit@pos^0,c
  3144  007C78  C029  F00D         	movff	_operate$1189,___aldiv@dividend
  3145  007C7C  C02A  F00E         	movff	_operate$1189+1,___aldiv@dividend+1
  3146  007C80  C02B  F00F         	movff	_operate$1189+2,___aldiv@dividend+2
  3147  007C84  C02C  F010         	movff	_operate$1189+3,___aldiv@dividend+3
  3148  007C88  0E0A               	movlw	10
  3149  007C8A  6E11               	movwf	___aldiv@divisor^0,c
  3150  007C8C  0E00               	movlw	0
  3151  007C8E  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3152  007C90  0E00               	movlw	0
  3153  007C92  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3154  007C94  0E00               	movlw	0
  3155  007C96  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3156  007C98  EC58  F036         	call	___aldiv	;wreg free
  3157  007C9C  500D               	movf	?___aldiv^0,w,c
  3158  007C9E  EC1F  F033         	call	_ssdDigit
  3159                           
  3160                           ;main.c: 66:                 ssdDigit(((time / 3600) % 24) % 10, 1);
  3161  007CA2  0E18               	movlw	24
  3162  007CA4  6E1F               	movwf	___almod@divisor^0,c
  3163  007CA6  0E00               	movlw	0
  3164  007CA8  6E20               	movwf	(___almod@divisor+1)^0,c
  3165  007CAA  0E00               	movlw	0
  3166  007CAC  6E21               	movwf	(___almod@divisor+2)^0,c
  3167  007CAE  0E00               	movlw	0
  3168  007CB0  6E22               	movwf	(___almod@divisor+3)^0,c
  3169  007CB2  0E10               	movlw	16
  3170  007CB4  6E11               	movwf	___aldiv@divisor^0,c
  3171  007CB6  0E0E               	movlw	14
  3172  007CB8  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3173  007CBA  0E00               	movlw	0
  3174  007CBC  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3175  007CBE  0E00               	movlw	0
  3176  007CC0  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3177  007CC2  C04F  F00D         	movff	_time,___aldiv@dividend
  3178  007CC6  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  3179  007CCA  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  3180  007CCE  C052  F010         	movff	_time+3,___aldiv@dividend+3
  3181  007CD2  EC58  F036         	call	___aldiv	;wreg free
  3182  007CD6  C00D  F01B         	movff	?___aldiv,___almod@dividend
  3183  007CDA  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  3184  007CDE  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  3185  007CE2  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  3186  007CE6  ECE2  F035         	call	___almod	;wreg free
  3187  007CEA  C01B  F02D         	movff	?___almod,_operate$1190
  3188  007CEE  C01C  F02E         	movff	?___almod+1,_operate$1190+1
  3189  007CF2  C01D  F02F         	movff	?___almod+2,_operate$1190+2
  3190  007CF6  C01E  F030         	movff	?___almod+3,_operate$1190+3
  3191                           
  3192                           ;main.c: 66:                 ssdDigit(((time / 3600) % 24) % 10, 1);
  3193  007CFA  0E01               	movlw	1
  3194  007CFC  6E25               	movwf	ssdDigit@pos^0,c
  3195  007CFE  C02D  F01B         	movff	_operate$1190,___almod@dividend
  3196  007D02  C02E  F01C         	movff	_operate$1190+1,___almod@dividend+1
  3197  007D06  C02F  F01D         	movff	_operate$1190+2,___almod@dividend+2
  3198  007D0A  C030  F01E         	movff	_operate$1190+3,___almod@dividend+3
  3199  007D0E  0E0A               	movlw	10
  3200  007D10  6E1F               	movwf	___almod@divisor^0,c
  3201  007D12  0E00               	movlw	0
  3202  007D14  6E20               	movwf	(___almod@divisor+1)^0,c
  3203  007D16  0E00               	movlw	0
  3204  007D18  6E21               	movwf	(___almod@divisor+2)^0,c
  3205  007D1A  0E00               	movlw	0
  3206  007D1C  6E22               	movwf	(___almod@divisor+3)^0,c
  3207  007D1E  ECE2  F035         	call	___almod	;wreg free
  3208  007D22  501B               	movf	?___almod^0,w,c
  3209  007D24  EC1F  F033         	call	_ssdDigit
  3210                           
  3211                           ;main.c: 67:                 ssdDigit((time / 600) % 6, 2);
  3212  007D28  0E02               	movlw	2
  3213  007D2A  6E25               	movwf	ssdDigit@pos^0,c
  3214  007D2C  0E58               	movlw	88
  3215  007D2E  6E11               	movwf	___aldiv@divisor^0,c
  3216  007D30  0E02               	movlw	2
  3217  007D32  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3218  007D34  0E00               	movlw	0
  3219  007D36  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3220  007D38  0E00               	movlw	0
  3221  007D3A  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3222  007D3C  C04F  F00D         	movff	_time,___aldiv@dividend
  3223  007D40  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  3224  007D44  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  3225  007D48  C052  F010         	movff	_time+3,___aldiv@dividend+3
  3226  007D4C  EC58  F036         	call	___aldiv	;wreg free
  3227  007D50  C00D  F01B         	movff	?___aldiv,___almod@dividend
  3228  007D54  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  3229  007D58  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  3230  007D5C  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  3231  007D60  0E06               	movlw	6
  3232  007D62  6E1F               	movwf	___almod@divisor^0,c
  3233  007D64  0E00               	movlw	0
  3234  007D66  6E20               	movwf	(___almod@divisor+1)^0,c
  3235  007D68  0E00               	movlw	0
  3236  007D6A  6E21               	movwf	(___almod@divisor+2)^0,c
  3237  007D6C  0E00               	movlw	0
  3238  007D6E  6E22               	movwf	(___almod@divisor+3)^0,c
  3239  007D70  ECE2  F035         	call	___almod	;wreg free
  3240  007D74  501B               	movf	?___almod^0,w,c
  3241  007D76  EC1F  F033         	call	_ssdDigit
  3242                           
  3243                           ;main.c: 68:                 ssdDigit((time / 60) % 10, 3);
  3244  007D7A  0E03               	movlw	3
  3245  007D7C  6E25               	movwf	ssdDigit@pos^0,c
  3246  007D7E  0E3C               	movlw	60
  3247  007D80  6E11               	movwf	___aldiv@divisor^0,c
  3248  007D82  0E00               	movlw	0
  3249  007D84  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3250  007D86  0E00               	movlw	0
  3251  007D88  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3252  007D8A  0E00               	movlw	0
  3253  007D8C  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3254  007D8E  C04F  F00D         	movff	_time,___aldiv@dividend
  3255  007D92  C050  F00E         	movff	_time+1,___aldiv@dividend+1
  3256  007D96  C051  F00F         	movff	_time+2,___aldiv@dividend+2
  3257  007D9A  C052  F010         	movff	_time+3,___aldiv@dividend+3
  3258  007D9E  EC58  F036         	call	___aldiv	;wreg free
  3259  007DA2  C00D  F01B         	movff	?___aldiv,___almod@dividend
  3260  007DA6  C00E  F01C         	movff	?___aldiv+1,___almod@dividend+1
  3261  007DAA  C00F  F01D         	movff	?___aldiv+2,___almod@dividend+2
  3262  007DAE  C010  F01E         	movff	?___aldiv+3,___almod@dividend+3
  3263  007DB2  0E0A               	movlw	10
  3264  007DB4  6E1F               	movwf	___almod@divisor^0,c
  3265  007DB6  0E00               	movlw	0
  3266  007DB8  6E20               	movwf	(___almod@divisor+1)^0,c
  3267  007DBA  0E00               	movlw	0
  3268  007DBC  6E21               	movwf	(___almod@divisor+2)^0,c
  3269  007DBE  0E00               	movlw	0
  3270  007DC0  6E22               	movwf	(___almod@divisor+3)^0,c
  3271  007DC2  ECE2  F035         	call	___almod	;wreg free
  3272  007DC6  501B               	movf	?___almod^0,w,c
  3273  007DC8  EC1F  F033         	call	_ssdDigit
  3274  007DCC                     
  3275                           ;main.c: 69:                 if (reset % 2 != 0) {
  3276  007DCC  A06B               	btfss	_reset^0,0,c
  3277  007DCE  EFEB  F03E         	goto	u2201
  3278  007DD2  EFED  F03E         	goto	u2200
  3279  007DD6                     u2201:
  3280  007DD6  EFF5  F03E         	goto	l2501
  3281  007DDA                     u2200:
  3282  007DDA                     
  3283                           ;main.c: 70:                     totalStudied++;
  3284  007DDA  0E01               	movlw	1
  3285  007DDC  264B               	addwf	_totalStudied^0,f,c
  3286  007DDE  0E00               	movlw	0
  3287  007DE0  224C               	addwfc	(_totalStudied+1)^0,f,c
  3288  007DE2  224D               	addwfc	(_totalStudied+2)^0,f,c
  3289  007DE4  224E               	addwfc	(_totalStudied+3)^0,f,c
  3290                           
  3291                           ;main.c: 71:                 } else {
  3292  007DE6  EFFB  F03E         	goto	l2503
  3293  007DEA                     l2501:
  3294                           
  3295                           ;main.c: 72:                     totalBreak++;
  3296  007DEA  0E01               	movlw	1
  3297  007DEC  2647               	addwf	_totalBreak^0,f,c
  3298  007DEE  0E00               	movlw	0
  3299  007DF0  2248               	addwfc	(_totalBreak+1)^0,f,c
  3300  007DF2  2249               	addwfc	(_totalBreak+2)^0,f,c
  3301  007DF4  224A               	addwfc	(_totalBreak+3)^0,f,c
  3302  007DF6                     l2503:
  3303                           
  3304                           ;main.c: 74:                 ssdUpdate();
  3305  007DF6  EC2E  F038         	call	_ssdUpdate	;wreg free
  3306  007DFA                     
  3307                           ;main.c: 75:                 for (int tempo = 0; tempo < 500; tempo++);
  3308  007DFA  0E00               	movlw	0
  3309  007DFC  6E33               	movwf	(operate@tempo+1)^0,c
  3310  007DFE  0E00               	movlw	0
  3311  007E00  6E32               	movwf	operate@tempo^0,c
  3312  007E02                     l2511:
  3313  007E02  4A32               	infsnz	operate@tempo^0,f,c
  3314  007E04  2A33               	incf	(operate@tempo+1)^0,f,c
  3315  007E06  BE33               	btfsc	(operate@tempo+1)^0,7,c
  3316  007E08  EF0F  F03F         	goto	u2211
  3317  007E0C  0EF4               	movlw	244
  3318  007E0E  5C32               	subwf	operate@tempo^0,w,c
  3319  007E10  0E01               	movlw	1
  3320  007E12  5833               	subwfb	(operate@tempo+1)^0,w,c
  3321  007E14  A0D8               	btfss	status,0,c
  3322  007E16  EF0F  F03F         	goto	u2211
  3323  007E1A  EF11  F03F         	goto	u2210
  3324  007E1E                     u2211:
  3325  007E1E  EF01  F03F         	goto	l2511
  3326  007E22                     u2210:
  3327  007E22                     
  3328                           ;main.c: 76:             }
  3329  007E22  0EFF               	movlw	255
  3330  007E24  264F               	addwf	_time^0,f,c
  3331  007E26  0EFF               	movlw	255
  3332  007E28  2250               	addwfc	(_time+1)^0,f,c
  3333  007E2A  0EFF               	movlw	255
  3334  007E2C  2251               	addwfc	(_time+2)^0,f,c
  3335  007E2E  0EFF               	movlw	255
  3336  007E30  2252               	addwfc	(_time+3)^0,f,c
  3337  007E32                     l81:
  3338  007E32  BE52               	btfsc	(_time+3)^0,7,c
  3339  007E34  EF28  F03F         	goto	u2220
  3340  007E38  5052               	movf	(_time+3)^0,w,c
  3341  007E3A  1051               	iorwf	(_time+2)^0,w,c
  3342  007E3C  1050               	iorwf	(_time+1)^0,w,c
  3343  007E3E  E106               	bnz	u2221
  3344  007E40  044F               	decf	_time^0,w,c
  3345  007E42  B0D8               	btfsc	status,0,c
  3346  007E44  EF26  F03F         	goto	u2221
  3347  007E48  EF28  F03F         	goto	u2220
  3348  007E4C                     u2221:
  3349  007E4C  EF0E  F03E         	goto	l2495
  3350  007E50                     u2220:
  3351  007E50                     
  3352                           ;main.c: 77:             reset++;
  3353  007E50  0E01               	movlw	1
  3354  007E52  266B               	addwf	_reset^0,f,c
  3355  007E54  0E00               	movlw	0
  3356  007E56  226C               	addwfc	(_reset+1)^0,f,c
  3357  007E58  226D               	addwfc	(_reset+2)^0,f,c
  3358  007E5A  226E               	addwfc	(_reset+3)^0,f,c
  3359  007E5C                     
  3360                           ;main.c: 78:             verifyGoal();
  3361  007E5C  ECE4  F038         	call	_verifyGoal	;wreg free
  3362                           
  3363                           ;main.c: 84:             break;
  3364  007E60  EF62  F03F         	goto	l90
  3365  007E64                     l2521:
  3366                           
  3367                           ;main.c: 87:             lcdCommand(0x01);
  3368  007E64  0E01               	movlw	1
  3369  007E66  EC6F  F031         	call	_lcdCommand
  3370  007E6A                     
  3371                           ;main.c: 88:             enable = 1;
  3372  007E6A  0E01               	movlw	1
  3373  007E6C  6E61               	movwf	_enable^0,c
  3374                           
  3375                           ;main.c: 89:             break;
  3376  007E6E  EF62  F03F         	goto	l90
  3377  007E72                     l2525:
  3378                           
  3379                           ;main.c: 92:             reset++;
  3380  007E72  0E01               	movlw	1
  3381  007E74  266B               	addwf	_reset^0,f,c
  3382  007E76  0E00               	movlw	0
  3383  007E78  226C               	addwfc	(_reset+1)^0,f,c
  3384  007E7A  226D               	addwfc	(_reset+2)^0,f,c
  3385  007E7C  226E               	addwfc	(_reset+3)^0,f,c
  3386                           
  3387                           ;main.c: 93:             break;
  3388  007E7E  EF62  F03F         	goto	l90
  3389  007E82                     l2529:
  3390  007E82  5031               	movf	operate@op^0,w,c
  3391  007E84  6E27               	movwf	??_operate^0,c
  3392  007E86  6A28               	clrf	(??_operate+1)^0,c
  3393                           
  3394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3395                           ; Switch size 1, requested type "simple"
  3396                           ; Number of cases is 1, Range of values is 0 to 0
  3397                           ; switch strategies available:
  3398                           ; Name         Instructions Cycles
  3399                           ; simple_byte            4     3 (average)
  3400                           ;	Chosen strategy is simple_byte
  3401  007E88  5028               	movf	(??_operate+1)^0,w,c
  3402  007E8A  0A00               	xorlw	0	; case 0
  3403  007E8C  B4D8               	btfsc	status,2,c
  3404  007E8E  EF4B  F03F         	goto	l2841
  3405  007E92  EF62  F03F         	goto	l90
  3406  007E96                     l2841:
  3407                           
  3408                           ; Switch size 1, requested type "simple"
  3409                           ; Number of cases is 5, Range of values is 68 to 115
  3410                           ; switch strategies available:
  3411                           ; Name         Instructions Cycles
  3412                           ; simple_byte           16     9 (average)
  3413                           ;	Chosen strategy is simple_byte
  3414  007E96  5027               	movf	??_operate^0,w,c
  3415  007E98  0A44               	xorlw	68	; case 68
  3416  007E9A  B4D8               	btfsc	status,2,c
  3417  007E9C  EFA4  F03D         	goto	l72
  3418  007EA0  0A08               	xorlw	8	; case 76
  3419  007EA2  B4D8               	btfsc	status,2,c
  3420  007EA4  EF32  F03F         	goto	l2521
  3421  007EA8  0A1F               	xorlw	31	; case 83
  3422  007EAA  B4D8               	btfsc	status,2,c
  3423  007EAC  EFD5  F03D         	goto	l77
  3424  007EB0  0A06               	xorlw	6	; case 85
  3425  007EB2  B4D8               	btfsc	status,2,c
  3426  007EB4  EF61  F03D         	goto	l66
  3427  007EB8  0A26               	xorlw	38	; case 115
  3428  007EBA  B4D8               	btfsc	status,2,c
  3429  007EBC  EF39  F03F         	goto	l2525
  3430  007EC0  EF62  F03F         	goto	l90
  3431  007EC4                     l90:
  3432  007EC4  0012               	return		;funcret
  3433  007EC6                     __end_of_operate:
  3434                           	callstack 0
  3435                           
  3436 ;; *************** function _verifyGoal *****************
  3437 ;; Defined at:
  3438 ;;		line 128 in file "main.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  i               2   27[COMRAM] int 
  3443 ;;  test            2   31[COMRAM] int 
  3444 ;;  j               2   29[COMRAM] int 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3454 ;;      Params:         0       0       0       0       0       0       0
  3455 ;;      Locals:         6       0       0       0       0       0       0
  3456 ;;      Temps:          1       0       0       0       0       0       0
  3457 ;;      Totals:         7       0       0       0       0       0       0
  3458 ;;Total ram usage:        7 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 6
  3461 ;; This function calls:
  3462 ;;		_LigarLed
  3463 ;;		___aldiv
  3464 ;;		___lmul
  3465 ;;		_lcdChar
  3466 ;;		_lcdCommand
  3467 ;;		_lcdNumber
  3468 ;;		_lcdString
  3469 ;; This function is called by:
  3470 ;;		_operate
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text15
  3475  0071C8                     __ptext15:
  3476                           	callstack 0
  3477  0071C8                     _verifyGoal:
  3478                           	callstack 22
  3479  0071C8                     
  3480                           ;main.c: 129:     if (studyGoal != 0) {
  3481  0071C8  5043               	movf	_studyGoal^0,w,c
  3482  0071CA  1044               	iorwf	(_studyGoal+1)^0,w,c
  3483  0071CC  1045               	iorwf	(_studyGoal+2)^0,w,c
  3484  0071CE  1046               	iorwf	(_studyGoal+3)^0,w,c
  3485  0071D0  B4D8               	btfsc	status,2,c
  3486  0071D2  EFED  F038         	goto	u1791
  3487  0071D6  EFEF  F038         	goto	u1790
  3488  0071DA                     u1791:
  3489  0071DA  EFEE  F039         	goto	l125
  3490  0071DE                     u1790:
  3491  0071DE                     
  3492                           ;main.c: 130:         int test = (totalStudied * 100) / (studyGoal * 3600);
  3493  0071DE  C04B  F001         	movff	_totalStudied,___lmul@multiplier
  3494  0071E2  C04C  F002         	movff	_totalStudied+1,___lmul@multiplier+1
  3495  0071E6  C04D  F003         	movff	_totalStudied+2,___lmul@multiplier+2
  3496  0071EA  C04E  F004         	movff	_totalStudied+3,___lmul@multiplier+3
  3497  0071EE  0E64               	movlw	100
  3498  0071F0  6E05               	movwf	___lmul@multiplicand^0,c
  3499  0071F2  0E00               	movlw	0
  3500  0071F4  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3501  0071F6  0E00               	movlw	0
  3502  0071F8  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3503  0071FA  0E00               	movlw	0
  3504  0071FC  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3505  0071FE  EC78  F033         	call	___lmul	;wreg free
  3506  007202  C001  F00D         	movff	?___lmul,___aldiv@dividend
  3507  007206  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  3508  00720A  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  3509  00720E  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  3510  007212  C043  F001         	movff	_studyGoal,___lmul@multiplier
  3511  007216  C044  F002         	movff	_studyGoal+1,___lmul@multiplier+1
  3512  00721A  C045  F003         	movff	_studyGoal+2,___lmul@multiplier+2
  3513  00721E  C046  F004         	movff	_studyGoal+3,___lmul@multiplier+3
  3514  007222  0E10               	movlw	16
  3515  007224  6E05               	movwf	___lmul@multiplicand^0,c
  3516  007226  0E0E               	movlw	14
  3517  007228  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3518  00722A  0E00               	movlw	0
  3519  00722C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3520  00722E  0E00               	movlw	0
  3521  007230  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3522  007232  EC78  F033         	call	___lmul	;wreg free
  3523  007236  C001  F011         	movff	?___lmul,___aldiv@divisor
  3524  00723A  C002  F012         	movff	?___lmul+1,___aldiv@divisor+1
  3525  00723E  C003  F013         	movff	?___lmul+2,___aldiv@divisor+2
  3526  007242  C004  F014         	movff	?___lmul+3,___aldiv@divisor+3
  3527  007246  EC58  F036         	call	___aldiv	;wreg free
  3528  00724A  C00D  F020         	movff	?___aldiv,verifyGoal@test
  3529  00724E  C00E  F021         	movff	?___aldiv+1,verifyGoal@test+1
  3530  007252                     
  3531                           ;main.c: 132:         lcdCommand(0x01);
  3532  007252  0E01               	movlw	1
  3533  007254  EC6F  F031         	call	_lcdCommand
  3534  007258                     
  3535                           ;main.c: 133:         lcdString("test: ");
  3536  007258  0EF5               	movlw	low STR_6
  3537  00725A  6E0F               	movwf	lcdString@msg^0,c
  3538  00725C  0E7F               	movlw	high STR_6
  3539  00725E  6E10               	movwf	(lcdString@msg+1)^0,c
  3540  007260  ECC9  F032         	call	_lcdString	;wreg free
  3541  007264                     
  3542                           ;main.c: 134:         lcdNumber(test);
  3543  007264  C020  F00F         	movff	verifyGoal@test,lcdNumber@value
  3544  007268  C021  F010         	movff	verifyGoal@test+1,lcdNumber@value+1
  3545  00726C  ECAD  F033         	call	_lcdNumber	;wreg free
  3546  007270                     
  3547                           ;main.c: 135:         if (test > 87) {
  3548  007270  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3549  007272  EF44  F039         	goto	u1801
  3550  007276  5021               	movf	(verifyGoal@test+1)^0,w,c
  3551  007278  E109               	bnz	u1800
  3552  00727A  0E58               	movlw	88
  3553  00727C  5C20               	subwf	verifyGoal@test^0,w,c
  3554  00727E  A0D8               	btfss	status,0,c
  3555  007280  EF44  F039         	goto	u1801
  3556  007284  EF46  F039         	goto	u1800
  3557  007288                     u1801:
  3558  007288  EF4C  F039         	goto	l2333
  3559  00728C                     u1800:
  3560  00728C                     
  3561                           ;main.c: 136:             j = 8;
  3562  00728C  0E00               	movlw	0
  3563  00728E  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3564  007290  0E08               	movlw	8
  3565  007292  6E1E               	movwf	verifyGoal@j^0,c
  3566                           
  3567                           ;main.c: 137:         } else if (test >= 75) {
  3568  007294  EFD1  F039         	goto	l109
  3569  007298                     l2333:
  3570  007298  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3571  00729A  EF58  F039         	goto	u1811
  3572  00729E  5021               	movf	(verifyGoal@test+1)^0,w,c
  3573  0072A0  E109               	bnz	u1810
  3574  0072A2  0E4B               	movlw	75
  3575  0072A4  5C20               	subwf	verifyGoal@test^0,w,c
  3576  0072A6  A0D8               	btfss	status,0,c
  3577  0072A8  EF58  F039         	goto	u1811
  3578  0072AC  EF5A  F039         	goto	u1810
  3579  0072B0                     u1811:
  3580  0072B0  EF60  F039         	goto	l2337
  3581  0072B4                     u1810:
  3582  0072B4                     
  3583                           ;main.c: 138:             j = 7;
  3584  0072B4  0E00               	movlw	0
  3585  0072B6  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3586  0072B8  0E07               	movlw	7
  3587  0072BA  6E1E               	movwf	verifyGoal@j^0,c
  3588                           
  3589                           ;main.c: 139:         } else if (test >= 62) {
  3590  0072BC  EFD1  F039         	goto	l109
  3591  0072C0                     l2337:
  3592  0072C0  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3593  0072C2  EF6C  F039         	goto	u1821
  3594  0072C6  5021               	movf	(verifyGoal@test+1)^0,w,c
  3595  0072C8  E109               	bnz	u1820
  3596  0072CA  0E3E               	movlw	62
  3597  0072CC  5C20               	subwf	verifyGoal@test^0,w,c
  3598  0072CE  A0D8               	btfss	status,0,c
  3599  0072D0  EF6C  F039         	goto	u1821
  3600  0072D4  EF6E  F039         	goto	u1820
  3601  0072D8                     u1821:
  3602  0072D8  EF74  F039         	goto	l2341
  3603  0072DC                     u1820:
  3604  0072DC                     
  3605                           ;main.c: 140:             j = 6;
  3606  0072DC  0E00               	movlw	0
  3607  0072DE  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3608  0072E0  0E06               	movlw	6
  3609  0072E2  6E1E               	movwf	verifyGoal@j^0,c
  3610                           
  3611                           ;main.c: 141:         } else if (test >= 50) {
  3612  0072E4  EFD1  F039         	goto	l109
  3613  0072E8                     l2341:
  3614  0072E8  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3615  0072EA  EF80  F039         	goto	u1831
  3616  0072EE  5021               	movf	(verifyGoal@test+1)^0,w,c
  3617  0072F0  E109               	bnz	u1830
  3618  0072F2  0E32               	movlw	50
  3619  0072F4  5C20               	subwf	verifyGoal@test^0,w,c
  3620  0072F6  A0D8               	btfss	status,0,c
  3621  0072F8  EF80  F039         	goto	u1831
  3622  0072FC  EF82  F039         	goto	u1830
  3623  007300                     u1831:
  3624  007300  EF91  F039         	goto	l2349
  3625  007304                     u1830:
  3626  007304                     
  3627                           ;main.c: 142:             lcdCommand(0xC0);
  3628  007304  0EC0               	movlw	192
  3629  007306  EC6F  F031         	call	_lcdCommand
  3630  00730A                     
  3631                           ;main.c: 143:             lcdString("aqui: ");
  3632  00730A  0EEE               	movlw	low STR_7
  3633  00730C  6E0F               	movwf	lcdString@msg^0,c
  3634  00730E  0E7F               	movlw	high STR_7
  3635  007310  6E10               	movwf	(lcdString@msg+1)^0,c
  3636  007312  ECC9  F032         	call	_lcdString	;wreg free
  3637  007316                     
  3638                           ;main.c: 144:             j = 5;
  3639  007316  0E00               	movlw	0
  3640  007318  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3641  00731A  0E05               	movlw	5
  3642  00731C  6E1E               	movwf	verifyGoal@j^0,c
  3643                           
  3644                           ;main.c: 145:         } else if (test >= 37) {
  3645  00731E  EFD1  F039         	goto	l109
  3646  007322                     l2349:
  3647  007322  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3648  007324  EF9D  F039         	goto	u1841
  3649  007328  5021               	movf	(verifyGoal@test+1)^0,w,c
  3650  00732A  E109               	bnz	u1840
  3651  00732C  0E25               	movlw	37
  3652  00732E  5C20               	subwf	verifyGoal@test^0,w,c
  3653  007330  A0D8               	btfss	status,0,c
  3654  007332  EF9D  F039         	goto	u1841
  3655  007336  EF9F  F039         	goto	u1840
  3656  00733A                     u1841:
  3657  00733A  EFA5  F039         	goto	l2353
  3658  00733E                     u1840:
  3659  00733E                     
  3660                           ;main.c: 146:             j = 4;
  3661  00733E  0E00               	movlw	0
  3662  007340  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3663  007342  0E04               	movlw	4
  3664  007344  6E1E               	movwf	verifyGoal@j^0,c
  3665                           
  3666                           ;main.c: 147:         } else if (test >= 25) {
  3667  007346  EFD1  F039         	goto	l109
  3668  00734A                     l2353:
  3669  00734A  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3670  00734C  EFB1  F039         	goto	u1851
  3671  007350  5021               	movf	(verifyGoal@test+1)^0,w,c
  3672  007352  E109               	bnz	u1850
  3673  007354  0E19               	movlw	25
  3674  007356  5C20               	subwf	verifyGoal@test^0,w,c
  3675  007358  A0D8               	btfss	status,0,c
  3676  00735A  EFB1  F039         	goto	u1851
  3677  00735E  EFB3  F039         	goto	u1850
  3678  007362                     u1851:
  3679  007362  EFB9  F039         	goto	l2357
  3680  007366                     u1850:
  3681  007366                     
  3682                           ;main.c: 148:             j = 3;
  3683  007366  0E00               	movlw	0
  3684  007368  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3685  00736A  0E03               	movlw	3
  3686  00736C  6E1E               	movwf	verifyGoal@j^0,c
  3687                           
  3688                           ;main.c: 149:         } else if (test >= 12) {
  3689  00736E  EFD1  F039         	goto	l109
  3690  007372                     l2357:
  3691  007372  BE21               	btfsc	(verifyGoal@test+1)^0,7,c
  3692  007374  EFC5  F039         	goto	u1861
  3693  007378  5021               	movf	(verifyGoal@test+1)^0,w,c
  3694  00737A  E109               	bnz	u1860
  3695  00737C  0E0C               	movlw	12
  3696  00737E  5C20               	subwf	verifyGoal@test^0,w,c
  3697  007380  A0D8               	btfss	status,0,c
  3698  007382  EFC5  F039         	goto	u1861
  3699  007386  EFC7  F039         	goto	u1860
  3700  00738A                     u1861:
  3701  00738A  EFCD  F039         	goto	l2361
  3702  00738E                     u1860:
  3703  00738E                     
  3704                           ;main.c: 150:             j = 2;
  3705  00738E  0E00               	movlw	0
  3706  007390  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3707  007392  0E02               	movlw	2
  3708  007394  6E1E               	movwf	verifyGoal@j^0,c
  3709                           
  3710                           ;main.c: 151:         } else {
  3711  007396  EFD1  F039         	goto	l109
  3712  00739A                     l2361:
  3713                           
  3714                           ;main.c: 152:             j = 1;
  3715  00739A  0E00               	movlw	0
  3716  00739C  6E1F               	movwf	(verifyGoal@j+1)^0,c
  3717  00739E  0E01               	movlw	1
  3718  0073A0  6E1E               	movwf	verifyGoal@j^0,c
  3719  0073A2                     l109:
  3720                           
  3721                           ;main.c: 155:         for (int i = 0; i < j; i++) {
  3722  0073A2  0E00               	movlw	0
  3723  0073A4  6E1D               	movwf	(verifyGoal@i+1)^0,c
  3724  0073A6  0E00               	movlw	0
  3725  0073A8  6E1C               	movwf	verifyGoal@i^0,c
  3726  0073AA  EFDF  F039         	goto	l2369
  3727  0073AE                     l2363:
  3728                           
  3729                           ;main.c: 156:             lcdChar("A");
  3730  0073AE  0EFC               	movlw	STR_8& (0+255)
  3731  0073B0  EC7E  F031         	call	_lcdChar
  3732  0073B4                     
  3733                           ;main.c: 157:             LigarLed(i);
  3734  0073B4  501C               	movf	verifyGoal@i^0,w,c
  3735  0073B6  EC4E  F031         	call	_LigarLed
  3736  0073BA                     
  3737                           ;main.c: 158:         }
  3738  0073BA  4A1C               	infsnz	verifyGoal@i^0,f,c
  3739  0073BC  2A1D               	incf	(verifyGoal@i+1)^0,f,c
  3740  0073BE                     l2369:
  3741  0073BE  501E               	movf	verifyGoal@j^0,w,c
  3742  0073C0  5C1C               	subwf	verifyGoal@i^0,w,c
  3743  0073C2  501D               	movf	(verifyGoal@i+1)^0,w,c
  3744  0073C4  0A80               	xorlw	128
  3745  0073C6  6E1B               	movwf	??_verifyGoal^0,c
  3746  0073C8  501F               	movf	(verifyGoal@j+1)^0,w,c
  3747  0073CA  0A80               	xorlw	128
  3748  0073CC  581B               	subwfb	??_verifyGoal^0,w,c
  3749  0073CE  A0D8               	btfss	status,0,c
  3750  0073D0  EFEC  F039         	goto	u1871
  3751  0073D4  EFEE  F039         	goto	u1870
  3752  0073D8                     u1871:
  3753  0073D8  EFD7  F039         	goto	l2363
  3754  0073DC                     u1870:
  3755  0073DC                     l125:
  3756  0073DC  0012               	return		;funcret
  3757  0073DE                     __end_of_verifyGoal:
  3758                           	callstack 0
  3759                           
  3760 ;; *************** function _lcdString *****************
  3761 ;; Defined at:
  3762 ;;		line 57 in file "lcd.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  msg             2   14[COMRAM] PTR unsigned char 
  3765 ;;		 -> STR_23(14), STR_22(14), STR_21(16), STR_20(18), 
  3766 ;;		 -> STR_19(13), STR_18(16), STR_17(16), STR_16(16), 
  3767 ;;		 -> STR_15(17), STR_14(16), STR_13(17), STR_12(16), 
  3768 ;;		 -> STR_11(12), STR_10(16), STR_9(13), STR_7(7), 
  3769 ;;		 -> STR_6(7), STR_5(9), STR_4(12), STR_3(9), 
  3770 ;;		 -> STR_2(12), STR_1(18), 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  i               2   18[COMRAM] int 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3782 ;;      Params:         2       0       0       0       0       0       0
  3783 ;;      Locals:         2       0       0       0       0       0       0
  3784 ;;      Temps:          2       0       0       0       0       0       0
  3785 ;;      Totals:         6       0       0       0       0       0       0
  3786 ;;Total ram usage:        6 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; Hardware stack levels required when called: 5
  3789 ;; This function calls:
  3790 ;;		_lcdChar
  3791 ;; This function is called by:
  3792 ;;		_operate
  3793 ;;		_SetaMeta
  3794 ;;		_verifyGoal
  3795 ;;		_instructions
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text16
  3800  006592                     __ptext16:
  3801                           	callstack 0
  3802  006592                     _lcdString:
  3803                           	callstack 24
  3804  006592                     
  3805                           ;lcd.c: 58:  int i = 0;
  3806  006592  0E00               	movlw	0
  3807  006594  6E14               	movwf	(lcdString@i+1)^0,c
  3808  006596  0E00               	movlw	0
  3809  006598  6E13               	movwf	lcdString@i^0,c
  3810                           
  3811                           ;lcd.c: 59:  while (msg[i] != 0) {
  3812  00659A  EFDF  F032         	goto	l2201
  3813  00659E                     l2197:
  3814                           
  3815                           ;lcd.c: 60:   lcdChar(msg[i]);
  3816  00659E  5013               	movf	lcdString@i^0,w,c
  3817  0065A0  240F               	addwf	lcdString@msg^0,w,c
  3818  0065A2  6E11               	movwf	??_lcdString^0,c
  3819  0065A4  5014               	movf	(lcdString@i+1)^0,w,c
  3820  0065A6  2010               	addwfc	(lcdString@msg+1)^0,w,c
  3821  0065A8  6E12               	movwf	(??_lcdString+1)^0,c
  3822  0065AA  C011  FFF6         	movff	??_lcdString,tblptrl
  3823  0065AE  C012  FFF7         	movff	??_lcdString+1,tblptrh
  3824  0065B2                     	if	0	;tblptru may be non-zero
  3825  0065B2                     	endif
  3826  0065B2                     	if	0	;tblptru may be non-zero
  3827  0065B2                     	endif
  3828  0065B2  0008               	tblrd		*
  3829  0065B4  50F5               	movf	tablat,w,c
  3830  0065B6  EC7E  F031         	call	_lcdChar
  3831  0065BA                     
  3832                           ;lcd.c: 61:   i++;
  3833  0065BA  4A13               	infsnz	lcdString@i^0,f,c
  3834  0065BC  2A14               	incf	(lcdString@i+1)^0,f,c
  3835  0065BE                     l2201:
  3836                           
  3837                           ;lcd.c: 59:  while (msg[i] != 0) {
  3838  0065BE  5013               	movf	lcdString@i^0,w,c
  3839  0065C0  240F               	addwf	lcdString@msg^0,w,c
  3840  0065C2  6E11               	movwf	??_lcdString^0,c
  3841  0065C4  5014               	movf	(lcdString@i+1)^0,w,c
  3842  0065C6  2010               	addwfc	(lcdString@msg+1)^0,w,c
  3843  0065C8  6E12               	movwf	(??_lcdString+1)^0,c
  3844  0065CA  C011  FFF6         	movff	??_lcdString,tblptrl
  3845  0065CE  C012  FFF7         	movff	??_lcdString+1,tblptrh
  3846  0065D2                     	if	0	;tblptru may be non-zero
  3847  0065D2                     	endif
  3848  0065D2                     	if	0	;tblptru may be non-zero
  3849  0065D2                     	endif
  3850  0065D2  0008               	tblrd		*
  3851  0065D4  50F5               	movf	tablat,w,c
  3852  0065D6  0900               	iorlw	0
  3853  0065D8  A4D8               	btfss	status,2,c
  3854  0065DA  EFF1  F032         	goto	u1651
  3855  0065DE  EFF3  F032         	goto	u1650
  3856  0065E2                     u1651:
  3857  0065E2  EFCF  F032         	goto	l2197
  3858  0065E6                     u1650:
  3859  0065E6  0012               	return		;funcret
  3860  0065E8                     __end_of_lcdString:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _lcdNumber *****************
  3864 ;; Defined at:
  3865 ;;		line 64 in file "lcd.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  value           2   14[COMRAM] int 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  i               2   16[COMRAM] int 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  1    wreg      void 
  3872 ;; Registers used:
  3873 ;;		wreg, status,2, status,0, cstack
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3879 ;;      Params:         2       0       0       0       0       0       0
  3880 ;;      Locals:         2       0       0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0
  3882 ;;      Totals:         4       0       0       0       0       0       0
  3883 ;;Total ram usage:        4 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; Hardware stack levels required when called: 5
  3886 ;; This function calls:
  3887 ;;		___awdiv
  3888 ;;		___awmod
  3889 ;;		_lcdChar
  3890 ;; This function is called by:
  3891 ;;		_operate
  3892 ;;		_SetaMeta
  3893 ;;		_verifyGoal
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text17
  3898  00675A                     __ptext17:
  3899                           	callstack 0
  3900  00675A                     _lcdNumber:
  3901                           	callstack 24
  3902  00675A                     
  3903                           ;lcd.c: 65:  int i = 10000;
  3904  00675A  0E27               	movlw	39
  3905  00675C  6E12               	movwf	(lcdNumber@i+1)^0,c
  3906  00675E  0E10               	movlw	16
  3907  006760  6E11               	movwf	lcdNumber@i^0,c
  3908                           
  3909                           ;lcd.c: 66:  while (i > 0) {
  3910  006762  EFD9  F033         	goto	l2207
  3911  006766                     l2205:
  3912                           
  3913                           ;lcd.c: 67:   lcdChar((value / i) % 10 + 48);
  3914  006766  C011  F003         	movff	lcdNumber@i,___awdiv@divisor
  3915  00676A  C012  F004         	movff	lcdNumber@i+1,___awdiv@divisor+1
  3916  00676E  C00F  F001         	movff	lcdNumber@value,___awdiv@dividend
  3917  006772  C010  F002         	movff	lcdNumber@value+1,___awdiv@dividend+1
  3918  006776  EC80  F035         	call	___awdiv	;wreg free
  3919  00677A  C001  F009         	movff	?___awdiv,___awmod@dividend
  3920  00677E  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  3921  006782  0E00               	movlw	0
  3922  006784  6E0C               	movwf	(___awmod@divisor+1)^0,c
  3923  006786  0E0A               	movlw	10
  3924  006788  6E0B               	movwf	___awmod@divisor^0,c
  3925  00678A  EC75  F034         	call	___awmod	;wreg free
  3926  00678E  5009               	movf	?___awmod^0,w,c
  3927  006790  0F30               	addlw	48
  3928  006792  EC7E  F031         	call	_lcdChar
  3929                           
  3930                           ;lcd.c: 68:   i /= 10;
  3931  006796  C011  F001         	movff	lcdNumber@i,___awdiv@dividend
  3932  00679A  C012  F002         	movff	lcdNumber@i+1,___awdiv@dividend+1
  3933  00679E  0E00               	movlw	0
  3934  0067A0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3935  0067A2  0E0A               	movlw	10
  3936  0067A4  6E03               	movwf	___awdiv@divisor^0,c
  3937  0067A6  EC80  F035         	call	___awdiv	;wreg free
  3938  0067AA  C001  F011         	movff	?___awdiv,lcdNumber@i
  3939  0067AE  C002  F012         	movff	?___awdiv+1,lcdNumber@i+1
  3940  0067B2                     l2207:
  3941                           
  3942                           ;lcd.c: 66:  while (i > 0) {
  3943  0067B2  BE12               	btfsc	(lcdNumber@i+1)^0,7,c
  3944  0067B4  EFE6  F033         	goto	u1660
  3945  0067B8  5012               	movf	(lcdNumber@i+1)^0,w,c
  3946  0067BA  E106               	bnz	u1661
  3947  0067BC  0411               	decf	lcdNumber@i^0,w,c
  3948  0067BE  B0D8               	btfsc	status,0,c
  3949  0067C0  EFE4  F033         	goto	u1661
  3950  0067C4  EFE6  F033         	goto	u1660
  3951  0067C8                     u1661:
  3952  0067C8  EFB3  F033         	goto	l2205
  3953  0067CC                     u1660:
  3954  0067CC  0012               	return		;funcret
  3955  0067CE                     __end_of_lcdNumber:
  3956                           	callstack 0
  3957                           
  3958 ;; *************** function _lcdChar *****************
  3959 ;; Defined at:
  3960 ;;		line 52 in file "lcd.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  value           1    wreg     unsigned char 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  value           1   13[COMRAM] unsigned char 
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1    wreg      void 
  3967 ;; Registers used:
  3968 ;;		wreg, status,2, status,0, cstack
  3969 ;; Tracked objects:
  3970 ;;		On entry : 0/0
  3971 ;;		On exit  : 0/0
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3974 ;;      Params:         0       0       0       0       0       0       0
  3975 ;;      Locals:         1       0       0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0
  3977 ;;      Totals:         1       0       0       0       0       0       0
  3978 ;;Total ram usage:        1 bytes
  3979 ;; Hardware stack levels used: 1
  3980 ;; Hardware stack levels required when called: 4
  3981 ;; This function calls:
  3982 ;;		_delayMicro
  3983 ;;		_pushByte
  3984 ;; This function is called by:
  3985 ;;		_verifyGoal
  3986 ;;		_lcdString
  3987 ;;		_lcdNumber
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text18
  3992  0062FC                     __ptext18:
  3993                           	callstack 0
  3994  0062FC                     _lcdChar:
  3995                           	callstack 24
  3996                           
  3997                           ;incstack = 0
  3998                           ;lcdChar@value stored from wreg
  3999  0062FC  6E0E               	movwf	lcdChar@value^0,c
  4000  0062FE                     
  4001                           ;lcd.c: 53:  pushByte(value, 1);
  4002  0062FE  0E00               	movlw	0
  4003  006300  6E0B               	movwf	(pushByte@rs+1)^0,c
  4004  006302  0E01               	movlw	1
  4005  006304  6E0A               	movwf	pushByte@rs^0,c
  4006  006306  500E               	movf	lcdChar@value^0,w,c
  4007  006308  EC4B  F033         	call	_pushByte
  4008  00630C                     
  4009                           ;lcd.c: 54:  delayMicro(80);
  4010  00630C  0E00               	movlw	0
  4011  00630E  6E02               	movwf	(delayMicro@a+1)^0,c
  4012  006310  0E50               	movlw	80
  4013  006312  6E01               	movwf	delayMicro@a^0,c
  4014  006314  EC43  F031         	call	_delayMicro	;wreg free
  4015  006318  0012               	return		;funcret
  4016  00631A                     __end_of_lcdChar:
  4017                           	callstack 0
  4018                           
  4019 ;; *************** function ___awmod *****************
  4020 ;; Defined at:
  4021 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  dividend        2    8[COMRAM] int 
  4024 ;;  divisor         2   10[COMRAM] int 
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  sign            1   13[COMRAM] unsigned char 
  4027 ;;  counter         1   12[COMRAM] unsigned char 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  2    8[COMRAM] int 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4037 ;;      Params:         4       0       0       0       0       0       0
  4038 ;;      Locals:         2       0       0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0
  4040 ;;      Totals:         6       0       0       0       0       0       0
  4041 ;;Total ram usage:        6 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_lcdNumber
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text19
  4051  0068EA                     __ptext19:
  4052                           	callstack 0
  4053  0068EA                     ___awmod:
  4054                           	callstack 28
  4055  0068EA  0E00               	movlw	0
  4056  0068EC  6E0E               	movwf	___awmod@sign^0,c
  4057  0068EE  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  4058  0068F0  EF7E  F034         	goto	u1590
  4059  0068F4  EF7C  F034         	goto	u1591
  4060  0068F8                     u1591:
  4061  0068F8  EF84  F034         	goto	l2165
  4062  0068FC                     u1590:
  4063  0068FC  6C09               	negf	___awmod@dividend^0,c
  4064  0068FE  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4065  006900  B0D8               	btfsc	status,0,c
  4066  006902  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4067  006904  0E01               	movlw	1
  4068  006906  6E0E               	movwf	___awmod@sign^0,c
  4069  006908                     l2165:
  4070  006908  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  4071  00690A  EF8B  F034         	goto	u1600
  4072  00690E  EF89  F034         	goto	u1601
  4073  006912                     u1601:
  4074  006912  EF8F  F034         	goto	l2169
  4075  006916                     u1600:
  4076  006916  6C0B               	negf	___awmod@divisor^0,c
  4077  006918  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  4078  00691A  B0D8               	btfsc	status,0,c
  4079  00691C  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  4080  00691E                     l2169:
  4081  00691E  500B               	movf	___awmod@divisor^0,w,c
  4082  006920  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  4083  006922  B4D8               	btfsc	status,2,c
  4084  006924  EF96  F034         	goto	u1611
  4085  006928  EF98  F034         	goto	u1610
  4086  00692C                     u1611:
  4087  00692C  EFBC  F034         	goto	l2185
  4088  006930                     u1610:
  4089  006930  0E01               	movlw	1
  4090  006932  6E0D               	movwf	___awmod@counter^0,c
  4091  006934  EFA0  F034         	goto	l2175
  4092  006938                     l2173:
  4093  006938  90D8               	bcf	status,0,c
  4094  00693A  360B               	rlcf	___awmod@divisor^0,f,c
  4095  00693C  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  4096  00693E  2A0D               	incf	___awmod@counter^0,f,c
  4097  006940                     l2175:
  4098  006940  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  4099  006942  EFA5  F034         	goto	u1621
  4100  006946  EFA7  F034         	goto	u1620
  4101  00694A                     u1621:
  4102  00694A  EF9C  F034         	goto	l2173
  4103  00694E                     u1620:
  4104  00694E                     l2177:
  4105  00694E  500B               	movf	___awmod@divisor^0,w,c
  4106  006950  5C09               	subwf	___awmod@dividend^0,w,c
  4107  006952  500C               	movf	(___awmod@divisor+1)^0,w,c
  4108  006954  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  4109  006956  A0D8               	btfss	status,0,c
  4110  006958  EFB0  F034         	goto	u1631
  4111  00695C  EFB2  F034         	goto	u1630
  4112  006960                     u1631:
  4113  006960  EFB6  F034         	goto	l2181
  4114  006964                     u1630:
  4115  006964  500B               	movf	___awmod@divisor^0,w,c
  4116  006966  5E09               	subwf	___awmod@dividend^0,f,c
  4117  006968  500C               	movf	(___awmod@divisor+1)^0,w,c
  4118  00696A  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  4119  00696C                     l2181:
  4120  00696C  90D8               	bcf	status,0,c
  4121  00696E  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  4122  006970  320B               	rrcf	___awmod@divisor^0,f,c
  4123  006972  2E0D               	decfsz	___awmod@counter^0,f,c
  4124  006974  EFA7  F034         	goto	l2177
  4125  006978                     l2185:
  4126  006978  500E               	movf	___awmod@sign^0,w,c
  4127  00697A  B4D8               	btfsc	status,2,c
  4128  00697C  EFC2  F034         	goto	u1641
  4129  006980  EFC4  F034         	goto	u1640
  4130  006984                     u1641:
  4131  006984  EFC8  F034         	goto	l2189
  4132  006988                     u1640:
  4133  006988  6C09               	negf	___awmod@dividend^0,c
  4134  00698A  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  4135  00698C  B0D8               	btfsc	status,0,c
  4136  00698E  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  4137  006990                     l2189:
  4138  006990  C009  F009         	movff	___awmod@dividend,?___awmod
  4139  006994  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  4140  006998  0012               	return		;funcret
  4141  00699A                     __end_of___awmod:
  4142                           	callstack 0
  4143                           
  4144 ;; *************** function ___awdiv *****************
  4145 ;; Defined at:
  4146 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  dividend        2    0[COMRAM] int 
  4149 ;;  divisor         2    2[COMRAM] int 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  quotient        2    6[COMRAM] int 
  4152 ;;  sign            1    5[COMRAM] unsigned char 
  4153 ;;  counter         1    4[COMRAM] unsigned char 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  2    0[COMRAM] int 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2, status,0
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4163 ;;      Params:         4       0       0       0       0       0       0
  4164 ;;      Locals:         4       0       0       0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0       0       0
  4166 ;;      Totals:         8       0       0       0       0       0       0
  4167 ;;Total ram usage:        8 bytes
  4168 ;; Hardware stack levels used: 1
  4169 ;; This function calls:
  4170 ;;		Nothing
  4171 ;; This function is called by:
  4172 ;;		_lcdNumber
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text20
  4177  006B00                     __ptext20:
  4178                           	callstack 0
  4179  006B00                     ___awdiv:
  4180                           	callstack 28
  4181  006B00  0E00               	movlw	0
  4182  006B02  6E06               	movwf	___awdiv@sign^0,c
  4183  006B04  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4184  006B06  EF89  F035         	goto	u1530
  4185  006B0A  EF87  F035         	goto	u1531
  4186  006B0E                     u1531:
  4187  006B0E  EF8F  F035         	goto	l2121
  4188  006B12                     u1530:
  4189  006B12  6C03               	negf	___awdiv@divisor^0,c
  4190  006B14  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4191  006B16  B0D8               	btfsc	status,0,c
  4192  006B18  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4193  006B1A  0E01               	movlw	1
  4194  006B1C  6E06               	movwf	___awdiv@sign^0,c
  4195  006B1E                     l2121:
  4196  006B1E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4197  006B20  EF96  F035         	goto	u1540
  4198  006B24  EF94  F035         	goto	u1541
  4199  006B28                     u1541:
  4200  006B28  EF9C  F035         	goto	l2127
  4201  006B2C                     u1540:
  4202  006B2C  6C01               	negf	___awdiv@dividend^0,c
  4203  006B2E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4204  006B30  B0D8               	btfsc	status,0,c
  4205  006B32  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4206  006B34  0E01               	movlw	1
  4207  006B36  1A06               	xorwf	___awdiv@sign^0,f,c
  4208  006B38                     l2127:
  4209  006B38  0E00               	movlw	0
  4210  006B3A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4211  006B3C  0E00               	movlw	0
  4212  006B3E  6E07               	movwf	___awdiv@quotient^0,c
  4213  006B40  5003               	movf	___awdiv@divisor^0,w,c
  4214  006B42  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4215  006B44  B4D8               	btfsc	status,2,c
  4216  006B46  EFA7  F035         	goto	u1551
  4217  006B4A  EFA9  F035         	goto	u1550
  4218  006B4E                     u1551:
  4219  006B4E  EFD1  F035         	goto	l2149
  4220  006B52                     u1550:
  4221  006B52  0E01               	movlw	1
  4222  006B54  6E05               	movwf	___awdiv@counter^0,c
  4223  006B56  EFB1  F035         	goto	l2135
  4224  006B5A                     l2133:
  4225  006B5A  90D8               	bcf	status,0,c
  4226  006B5C  3603               	rlcf	___awdiv@divisor^0,f,c
  4227  006B5E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4228  006B60  2A05               	incf	___awdiv@counter^0,f,c
  4229  006B62                     l2135:
  4230  006B62  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4231  006B64  EFB6  F035         	goto	u1561
  4232  006B68  EFB8  F035         	goto	u1560
  4233  006B6C                     u1561:
  4234  006B6C  EFAD  F035         	goto	l2133
  4235  006B70                     u1560:
  4236  006B70                     l2137:
  4237  006B70  90D8               	bcf	status,0,c
  4238  006B72  3607               	rlcf	___awdiv@quotient^0,f,c
  4239  006B74  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4240  006B76  5003               	movf	___awdiv@divisor^0,w,c
  4241  006B78  5C01               	subwf	___awdiv@dividend^0,w,c
  4242  006B7A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4243  006B7C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4244  006B7E  A0D8               	btfss	status,0,c
  4245  006B80  EFC4  F035         	goto	u1571
  4246  006B84  EFC6  F035         	goto	u1570
  4247  006B88                     u1571:
  4248  006B88  EFCB  F035         	goto	l2145
  4249  006B8C                     u1570:
  4250  006B8C  5003               	movf	___awdiv@divisor^0,w,c
  4251  006B8E  5E01               	subwf	___awdiv@dividend^0,f,c
  4252  006B90  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4253  006B92  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4254  006B94  8007               	bsf	___awdiv@quotient^0,0,c
  4255  006B96                     l2145:
  4256  006B96  90D8               	bcf	status,0,c
  4257  006B98  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4258  006B9A  3203               	rrcf	___awdiv@divisor^0,f,c
  4259  006B9C  2E05               	decfsz	___awdiv@counter^0,f,c
  4260  006B9E  EFB8  F035         	goto	l2137
  4261  006BA2                     l2149:
  4262  006BA2  5006               	movf	___awdiv@sign^0,w,c
  4263  006BA4  B4D8               	btfsc	status,2,c
  4264  006BA6  EFD7  F035         	goto	u1581
  4265  006BAA  EFD9  F035         	goto	u1580
  4266  006BAE                     u1581:
  4267  006BAE  EFDD  F035         	goto	l2153
  4268  006BB2                     u1580:
  4269  006BB2  6C07               	negf	___awdiv@quotient^0,c
  4270  006BB4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4271  006BB6  B0D8               	btfsc	status,0,c
  4272  006BB8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4273  006BBA                     l2153:
  4274  006BBA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4275  006BBE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4276  006BC2  0012               	return		;funcret
  4277  006BC4                     __end_of___awdiv:
  4278                           	callstack 0
  4279                           
  4280 ;; *************** function _lcdCommand *****************
  4281 ;; Defined at:
  4282 ;;		line 40 in file "lcd.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;  value           1    wreg     unsigned char 
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;  value           1   13[COMRAM] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4296 ;;      Params:         0       0       0       0       0       0       0
  4297 ;;      Locals:         1       0       0       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0       0       0
  4299 ;;      Totals:         1       0       0       0       0       0       0
  4300 ;;Total ram usage:        1 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; Hardware stack levels required when called: 4
  4303 ;; This function calls:
  4304 ;;		_delayMili
  4305 ;;		_pushByte
  4306 ;; This function is called by:
  4307 ;;		_operate
  4308 ;;		_SetaMeta
  4309 ;;		_verifyGoal
  4310 ;;		_lcdInit
  4311 ;;		_instructions
  4312 ;;		_lcdPosition
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text21
  4317  0062DE                     __ptext21:
  4318                           	callstack 0
  4319  0062DE                     _lcdCommand:
  4320                           	callstack 25
  4321                           
  4322                           ;incstack = 0
  4323                           ;lcdCommand@value stored from wreg
  4324  0062DE  6E0E               	movwf	lcdCommand@value^0,c
  4325  0062E0                     
  4326                           ;lcd.c: 41:  pushByte(value, 0);
  4327  0062E0  0E00               	movlw	0
  4328  0062E2  6E0B               	movwf	(pushByte@rs+1)^0,c
  4329  0062E4  0E00               	movlw	0
  4330  0062E6  6E0A               	movwf	pushByte@rs^0,c
  4331  0062E8  500E               	movf	lcdCommand@value^0,w,c
  4332  0062EA  EC4B  F033         	call	_pushByte
  4333                           
  4334                           ;lcd.c: 42:  delayMili(2);
  4335  0062EE  0E00               	movlw	0
  4336  0062F0  6E02               	movwf	(delayMili@a+1)^0,c
  4337  0062F2  0E02               	movlw	2
  4338  0062F4  6E01               	movwf	delayMili@a^0,c
  4339  0062F6  ECCA  F031         	call	_delayMili	;wreg free
  4340  0062FA  0012               	return		;funcret
  4341  0062FC                     __end_of_lcdCommand:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _pushByte *****************
  4345 ;; Defined at:
  4346 ;;		line 31 in file "lcd.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  value           1    wreg     unsigned char 
  4349 ;;  rs              2    9[COMRAM] int 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  value           1   12[COMRAM] unsigned char 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		wreg, status,2, status,0, cstack
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4361 ;;      Params:         2       0       0       0       0       0       0
  4362 ;;      Locals:         1       0       0       0       0       0       0
  4363 ;;      Temps:          1       0       0       0       0       0       0
  4364 ;;      Totals:         4       0       0       0       0       0       0
  4365 ;;Total ram usage:        4 bytes
  4366 ;; Hardware stack levels used: 1
  4367 ;; Hardware stack levels required when called: 3
  4368 ;; This function calls:
  4369 ;;		_digitalWrite
  4370 ;;		_pulseEnablePin
  4371 ;;		_soWrite
  4372 ;; This function is called by:
  4373 ;;		_lcdCommand
  4374 ;;		_lcdChar
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           
  4378                           	psect	text22
  4379  006696                     __ptext22:
  4380                           	callstack 0
  4381  006696                     _pushByte:
  4382                           	callstack 25
  4383                           
  4384                           ;incstack = 0
  4385                           ;pushByte@value stored from wreg
  4386  006696  6E0D               	movwf	pushByte@value^0,c
  4387  006698                     
  4388                           ;lcd.c: 32:  soWrite(value >> 4);
  4389  006698  C00D  F00C         	movff	pushByte@value,??_pushByte
  4390  00669C  3A0C               	swapf	??_pushByte^0,f,c
  4391  00669E  0E0F               	movlw	15
  4392  0066A0  160C               	andwf	??_pushByte^0,f,c
  4393  0066A2  500C               	movf	??_pushByte^0,w,c
  4394  0066A4  6E07               	movwf	soWrite@value^0,c
  4395  0066A6  6A08               	clrf	(soWrite@value+1)^0,c
  4396  0066A8  EC7A  F032         	call	_soWrite	;wreg free
  4397                           
  4398                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  4399  0066AC  0E00               	movlw	0
  4400  0066AE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4401  0066B0  0E1D               	movlw	29
  4402  0066B2  6E01               	movwf	digitalWrite@pin^0,c
  4403  0066B4  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  4404  0066B8  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  4405  0066BC  EC10  F03B         	call	_digitalWrite	;wreg free
  4406                           
  4407                           ;lcd.c: 34:  pulseEnablePin();
  4408  0066C0  EC35  F032         	call	_pulseEnablePin	;wreg free
  4409                           
  4410                           ;lcd.c: 36:  soWrite(value & 0x0F);
  4411  0066C4  C00D  F00C         	movff	pushByte@value,??_pushByte
  4412  0066C8  0E0F               	movlw	15
  4413  0066CA  160C               	andwf	??_pushByte^0,f,c
  4414  0066CC  500C               	movf	??_pushByte^0,w,c
  4415  0066CE  6E07               	movwf	soWrite@value^0,c
  4416  0066D0  6A08               	clrf	(soWrite@value+1)^0,c
  4417  0066D2  EC7A  F032         	call	_soWrite	;wreg free
  4418                           
  4419                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  4420  0066D6  0E00               	movlw	0
  4421  0066D8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4422  0066DA  0E1D               	movlw	29
  4423  0066DC  6E01               	movwf	digitalWrite@pin^0,c
  4424  0066DE  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  4425  0066E2  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  4426  0066E6  EC10  F03B         	call	_digitalWrite	;wreg free
  4427                           
  4428                           ;lcd.c: 38:  pulseEnablePin();
  4429  0066EA  EC35  F032         	call	_pulseEnablePin	;wreg free
  4430  0066EE  0012               	return		;funcret
  4431  0066F0                     __end_of_pushByte:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function _pulseEnablePin *****************
  4435 ;; Defined at:
  4436 ;;		line 18 in file "lcd.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;		None
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4450 ;;      Params:         0       0       0       0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0
  4453 ;;      Totals:         0       0       0       0       0       0       0
  4454 ;;Total ram usage:        0 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 1
  4457 ;; This function calls:
  4458 ;;		_delayMicro
  4459 ;;		_digitalWrite
  4460 ;; This function is called by:
  4461 ;;		_pushNibble
  4462 ;;		_pushByte
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text23
  4467  00646A                     __ptext23:
  4468                           	callstack 0
  4469  00646A                     _pulseEnablePin:
  4470                           	callstack 27
  4471  00646A                     
  4472                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  4473  00646A  0E00               	movlw	0
  4474  00646C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4475  00646E  0E1C               	movlw	28
  4476  006470  6E01               	movwf	digitalWrite@pin^0,c
  4477  006472  0E00               	movlw	0
  4478  006474  6E04               	movwf	(digitalWrite@value+1)^0,c
  4479  006476  0E01               	movlw	1
  4480  006478  6E03               	movwf	digitalWrite@value^0,c
  4481  00647A  EC10  F03B         	call	_digitalWrite	;wreg free
  4482  00647E                     
  4483                           ;lcd.c: 20:  delayMicro(5);
  4484  00647E  0E00               	movlw	0
  4485  006480  6E02               	movwf	(delayMicro@a+1)^0,c
  4486  006482  0E05               	movlw	5
  4487  006484  6E01               	movwf	delayMicro@a^0,c
  4488  006486  EC43  F031         	call	_delayMicro	;wreg free
  4489  00648A                     
  4490                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  4491  00648A  0E00               	movlw	0
  4492  00648C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4493  00648E  0E1C               	movlw	28
  4494  006490  6E01               	movwf	digitalWrite@pin^0,c
  4495  006492  0E00               	movlw	0
  4496  006494  6E04               	movwf	(digitalWrite@value+1)^0,c
  4497  006496  0E00               	movlw	0
  4498  006498  6E03               	movwf	digitalWrite@value^0,c
  4499  00649A  EC10  F03B         	call	_digitalWrite	;wreg free
  4500                           
  4501                           ;lcd.c: 22:  delayMicro(5);
  4502  00649E  0E00               	movlw	0
  4503  0064A0  6E02               	movwf	(delayMicro@a+1)^0,c
  4504  0064A2  0E05               	movlw	5
  4505  0064A4  6E01               	movwf	delayMicro@a^0,c
  4506  0064A6  EC43  F031         	call	_delayMicro	;wreg free
  4507  0064AA  0012               	return		;funcret
  4508  0064AC                     __end_of_pulseEnablePin:
  4509                           	callstack 0
  4510                           
  4511 ;; *************** function _delayMicro *****************
  4512 ;; Defined at:
  4513 ;;		line 5 in file "lcd.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  a               2    0[COMRAM] int 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  i               2    0        volatile int 
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		None
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4527 ;;      Params:         2       0       0       0       0       0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0
  4530 ;;      Totals:         2       0       0       0       0       0       0
  4531 ;;Total ram usage:        2 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_pulseEnablePin
  4537 ;;		_lcdChar
  4538 ;;		_lcdInit
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text24
  4543  006286                     __ptext24:
  4544                           	callstack 0
  4545  006286                     _delayMicro:
  4546                           	callstack 27
  4547  006286  0012               	return		;funcret
  4548  006288                     __end_of_delayMicro:
  4549                           	callstack 0
  4550                           
  4551 ;; *************** function _delayMili *****************
  4552 ;; Defined at:
  4553 ;;		line 10 in file "lcd.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  a               2    0[COMRAM] int 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  i               2    3[COMRAM] volatile int 
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg, status,2, status,0
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4567 ;;      Params:         2       0       0       0       0       0       0
  4568 ;;      Locals:         2       0       0       0       0       0       0
  4569 ;;      Temps:          1       0       0       0       0       0       0
  4570 ;;      Totals:         5       0       0       0       0       0       0
  4571 ;;Total ram usage:        5 bytes
  4572 ;; Hardware stack levels used: 1
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_lcdCommand
  4577 ;;		_lcdInit
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text25
  4582  006394                     __ptext25:
  4583                           	callstack 0
  4584  006394                     _delayMili:
  4585                           	callstack 28
  4586  006394                     
  4587                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  4588  006394  0E00               	movlw	0
  4589  006396  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  4590  006398  0E00               	movlw	0
  4591  00639A  6E04               	movwf	delayMili@i^0,c	;volatile
  4592  00639C  EFD2  F031         	goto	l2111
  4593  0063A0                     l2109:
  4594                           
  4595                           ;lcd.c: 15:  }
  4596  0063A0  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  4597  0063A2  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  4598  0063A4                     l2111:
  4599  0063A4  5001               	movf	delayMili@a^0,w,c
  4600  0063A6  5C04               	subwf	delayMili@i^0,w,c	;volatile
  4601  0063A8  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  4602  0063AA  0A80               	xorlw	128
  4603  0063AC  6E03               	movwf	??_delayMili^0,c
  4604  0063AE  5002               	movf	(delayMili@a+1)^0,w,c
  4605  0063B0  0A80               	xorlw	128
  4606  0063B2  5803               	subwfb	??_delayMili^0,w,c
  4607  0063B4  A0D8               	btfss	status,0,c
  4608  0063B6  EFDF  F031         	goto	u1521
  4609  0063BA  EFE1  F031         	goto	u1520
  4610  0063BE                     u1521:
  4611  0063BE  EFD0  F031         	goto	l2109
  4612  0063C2                     u1520:
  4613  0063C2  0012               	return		;funcret
  4614  0063C4                     __end_of_delayMili:
  4615                           	callstack 0
  4616                           
  4617 ;; *************** function ___lmul *****************
  4618 ;; Defined at:
  4619 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  multiplier      4    0[COMRAM] unsigned long 
  4622 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  product         4    8[COMRAM] unsigned long 
  4625 ;; Return value:  Size  Location     Type
  4626 ;;                  4    0[COMRAM] unsigned long 
  4627 ;; Registers used:
  4628 ;;		wreg, status,2, status,0
  4629 ;; Tracked objects:
  4630 ;;		On entry : 0/0
  4631 ;;		On exit  : 0/0
  4632 ;;		Unchanged: 0/0
  4633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4634 ;;      Params:         8       0       0       0       0       0       0
  4635 ;;      Locals:         4       0       0       0       0       0       0
  4636 ;;      Temps:          0       0       0       0       0       0       0
  4637 ;;      Totals:        12       0       0       0       0       0       0
  4638 ;;Total ram usage:       12 bytes
  4639 ;; Hardware stack levels used: 1
  4640 ;; This function calls:
  4641 ;;		Nothing
  4642 ;; This function is called by:
  4643 ;;		_verifyGoal
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text26
  4648  0066F0                     __ptext26:
  4649                           	callstack 0
  4650  0066F0                     ___lmul:
  4651                           	callstack 27
  4652  0066F0  0E00               	movlw	0
  4653  0066F2  6E09               	movwf	___lmul@product^0,c
  4654  0066F4  0E00               	movlw	0
  4655  0066F6  6E0A               	movwf	(___lmul@product+1)^0,c
  4656  0066F8  0E00               	movlw	0
  4657  0066FA  6E0B               	movwf	(___lmul@product+2)^0,c
  4658  0066FC  0E00               	movlw	0
  4659  0066FE  6E0C               	movwf	(___lmul@product+3)^0,c
  4660  006700                     l2213:
  4661  006700  A001               	btfss	___lmul@multiplier^0,0,c
  4662  006702  EF85  F033         	goto	u1671
  4663  006706  EF87  F033         	goto	u1670
  4664  00670A                     u1671:
  4665  00670A  EF8F  F033         	goto	l2217
  4666  00670E                     u1670:
  4667  00670E  5005               	movf	___lmul@multiplicand^0,w,c
  4668  006710  2609               	addwf	___lmul@product^0,f,c
  4669  006712  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4670  006714  220A               	addwfc	(___lmul@product+1)^0,f,c
  4671  006716  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4672  006718  220B               	addwfc	(___lmul@product+2)^0,f,c
  4673  00671A  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4674  00671C  220C               	addwfc	(___lmul@product+3)^0,f,c
  4675  00671E                     l2217:
  4676  00671E  90D8               	bcf	status,0,c
  4677  006720  3605               	rlcf	___lmul@multiplicand^0,f,c
  4678  006722  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4679  006724  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4680  006726  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4681  006728  90D8               	bcf	status,0,c
  4682  00672A  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4683  00672C  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4684  00672E  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4685  006730  3201               	rrcf	___lmul@multiplier^0,f,c
  4686  006732  5001               	movf	___lmul@multiplier^0,w,c
  4687  006734  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4688  006736  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4689  006738  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4690  00673A  A4D8               	btfss	status,2,c
  4691  00673C  EFA2  F033         	goto	u1681
  4692  006740  EFA4  F033         	goto	u1680
  4693  006744                     u1681:
  4694  006744  EF80  F033         	goto	l2213
  4695  006748                     u1680:
  4696  006748  C009  F001         	movff	___lmul@product,?___lmul
  4697  00674C  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4698  006750  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4699  006754  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4700  006758  0012               	return		;funcret
  4701  00675A                     __end_of___lmul:
  4702                           	callstack 0
  4703                           
  4704 ;; *************** function ___aldiv *****************
  4705 ;; Defined at:
  4706 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  dividend        4   12[COMRAM] long 
  4709 ;;  divisor         4   16[COMRAM] long 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  quotient        4   22[COMRAM] long 
  4712 ;;  sign            1   21[COMRAM] unsigned char 
  4713 ;;  counter         1   20[COMRAM] unsigned char 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  4   12[COMRAM] long 
  4716 ;; Registers used:
  4717 ;;		wreg, status,2, status,0
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4723 ;;      Params:         8       0       0       0       0       0       0
  4724 ;;      Locals:         6       0       0       0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0
  4726 ;;      Totals:        14       0       0       0       0       0       0
  4727 ;;Total ram usage:       14 bytes
  4728 ;; Hardware stack levels used: 1
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_operate
  4733 ;;		_verifyGoal
  4734 ;;		_main
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text27
  4739  006CB0                     __ptext27:
  4740                           	callstack 0
  4741  006CB0                     ___aldiv:
  4742                           	callstack 30
  4743  006CB0  0E00               	movlw	0
  4744  006CB2  6E16               	movwf	___aldiv@sign^0,c
  4745  006CB4  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
  4746  006CB6  EF61  F036         	goto	u1690
  4747  006CBA  EF5F  F036         	goto	u1691
  4748  006CBE                     u1691:
  4749  006CBE  EF6B  F036         	goto	l2229
  4750  006CC2                     u1690:
  4751  006CC2  1E14               	comf	(___aldiv@divisor+3)^0,f,c
  4752  006CC4  1E13               	comf	(___aldiv@divisor+2)^0,f,c
  4753  006CC6  1E12               	comf	(___aldiv@divisor+1)^0,f,c
  4754  006CC8  6C11               	negf	___aldiv@divisor^0,c
  4755  006CCA  0E00               	movlw	0
  4756  006CCC  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
  4757  006CCE  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
  4758  006CD0  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
  4759  006CD2  0E01               	movlw	1
  4760  006CD4  6E16               	movwf	___aldiv@sign^0,c
  4761  006CD6                     l2229:
  4762  006CD6  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
  4763  006CD8  EF72  F036         	goto	u1700
  4764  006CDC  EF70  F036         	goto	u1701
  4765  006CE0                     u1701:
  4766  006CE0  EF7C  F036         	goto	l2235
  4767  006CE4                     u1700:
  4768  006CE4  1E10               	comf	(___aldiv@dividend+3)^0,f,c
  4769  006CE6  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
  4770  006CE8  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
  4771  006CEA  6C0D               	negf	___aldiv@dividend^0,c
  4772  006CEC  0E00               	movlw	0
  4773  006CEE  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
  4774  006CF0  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
  4775  006CF2  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
  4776  006CF4  0E01               	movlw	1
  4777  006CF6  1A16               	xorwf	___aldiv@sign^0,f,c
  4778  006CF8                     l2235:
  4779  006CF8  0E00               	movlw	0
  4780  006CFA  6E17               	movwf	___aldiv@quotient^0,c
  4781  006CFC  0E00               	movlw	0
  4782  006CFE  6E18               	movwf	(___aldiv@quotient+1)^0,c
  4783  006D00  0E00               	movlw	0
  4784  006D02  6E19               	movwf	(___aldiv@quotient+2)^0,c
  4785  006D04  0E00               	movlw	0
  4786  006D06  6E1A               	movwf	(___aldiv@quotient+3)^0,c
  4787  006D08  5011               	movf	___aldiv@divisor^0,w,c
  4788  006D0A  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
  4789  006D0C  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
  4790  006D0E  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
  4791  006D10  B4D8               	btfsc	status,2,c
  4792  006D12  EF8D  F036         	goto	u1711
  4793  006D16  EF8F  F036         	goto	u1710
  4794  006D1A                     u1711:
  4795  006D1A  EFC5  F036         	goto	l2257
  4796  006D1E                     u1710:
  4797  006D1E  0E01               	movlw	1
  4798  006D20  6E15               	movwf	___aldiv@counter^0,c
  4799  006D22  EF99  F036         	goto	l2243
  4800  006D26                     l2241:
  4801  006D26  90D8               	bcf	status,0,c
  4802  006D28  3611               	rlcf	___aldiv@divisor^0,f,c
  4803  006D2A  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
  4804  006D2C  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
  4805  006D2E  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
  4806  006D30  2A15               	incf	___aldiv@counter^0,f,c
  4807  006D32                     l2243:
  4808  006D32  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
  4809  006D34  EF9E  F036         	goto	u1721
  4810  006D38  EFA0  F036         	goto	u1720
  4811  006D3C                     u1721:
  4812  006D3C  EF93  F036         	goto	l2241
  4813  006D40                     u1720:
  4814  006D40                     l2245:
  4815  006D40  90D8               	bcf	status,0,c
  4816  006D42  3617               	rlcf	___aldiv@quotient^0,f,c
  4817  006D44  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
  4818  006D46  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
  4819  006D48  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
  4820  006D4A  5011               	movf	___aldiv@divisor^0,w,c
  4821  006D4C  5C0D               	subwf	___aldiv@dividend^0,w,c
  4822  006D4E  5012               	movf	(___aldiv@divisor+1)^0,w,c
  4823  006D50  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
  4824  006D52  5013               	movf	(___aldiv@divisor+2)^0,w,c
  4825  006D54  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
  4826  006D56  5014               	movf	(___aldiv@divisor+3)^0,w,c
  4827  006D58  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
  4828  006D5A  A0D8               	btfss	status,0,c
  4829  006D5C  EFB2  F036         	goto	u1731
  4830  006D60  EFB4  F036         	goto	u1730
  4831  006D64                     u1731:
  4832  006D64  EFBD  F036         	goto	l2253
  4833  006D68                     u1730:
  4834  006D68  5011               	movf	___aldiv@divisor^0,w,c
  4835  006D6A  5E0D               	subwf	___aldiv@dividend^0,f,c
  4836  006D6C  5012               	movf	(___aldiv@divisor+1)^0,w,c
  4837  006D6E  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
  4838  006D70  5013               	movf	(___aldiv@divisor+2)^0,w,c
  4839  006D72  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
  4840  006D74  5014               	movf	(___aldiv@divisor+3)^0,w,c
  4841  006D76  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
  4842  006D78  8017               	bsf	___aldiv@quotient^0,0,c
  4843  006D7A                     l2253:
  4844  006D7A  90D8               	bcf	status,0,c
  4845  006D7C  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
  4846  006D7E  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
  4847  006D80  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
  4848  006D82  3211               	rrcf	___aldiv@divisor^0,f,c
  4849  006D84  2E15               	decfsz	___aldiv@counter^0,f,c
  4850  006D86  EFA0  F036         	goto	l2245
  4851  006D8A                     l2257:
  4852  006D8A  5016               	movf	___aldiv@sign^0,w,c
  4853  006D8C  B4D8               	btfsc	status,2,c
  4854  006D8E  EFCB  F036         	goto	u1741
  4855  006D92  EFCD  F036         	goto	u1740
  4856  006D96                     u1741:
  4857  006D96  EFD5  F036         	goto	l2261
  4858  006D9A                     u1740:
  4859  006D9A  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
  4860  006D9C  1E19               	comf	(___aldiv@quotient+2)^0,f,c
  4861  006D9E  1E18               	comf	(___aldiv@quotient+1)^0,f,c
  4862  006DA0  6C17               	negf	___aldiv@quotient^0,c
  4863  006DA2  0E00               	movlw	0
  4864  006DA4  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
  4865  006DA6  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
  4866  006DA8  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
  4867  006DAA                     l2261:
  4868  006DAA  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  4869  006DAE  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  4870  006DB2  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  4871  006DB6  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  4872  006DBA  0012               	return		;funcret
  4873  006DBC                     __end_of___aldiv:
  4874                           	callstack 0
  4875                           
  4876 ;; *************** function _LigarLed *****************
  4877 ;; Defined at:
  4878 ;;		line 15 in file "led.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  num             1    wreg     unsigned char 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  num             1    0[COMRAM] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4892 ;;      Params:         0       0       0       0       0       0       0
  4893 ;;      Locals:         1       0       0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0
  4895 ;;      Totals:         1       0       0       0       0       0       0
  4896 ;;Total ram usage:        1 bytes
  4897 ;; Hardware stack levels used: 1
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_verifyGoal
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text28
  4906  00629C                     __ptext28:
  4907                           	callstack 0
  4908  00629C                     _LigarLed:
  4909                           	callstack 27
  4910                           
  4911                           ;incstack = 0
  4912                           ;LigarLed@num stored from wreg
  4913  00629C  6E01               	movwf	LigarLed@num^0,c
  4914  00629E                     
  4915                           ;led.c: 16:     (*(volatile __near unsigned char*) 0xF83) |= led[num];
  4916  00629E  0E63               	movlw	low _led
  4917  0062A0  2401               	addwf	LigarLed@num^0,w,c
  4918  0062A2  6ED9               	movwf	fsr2l,c
  4919  0062A4  6ADA               	clrf	fsr2h,c
  4920  0062A6  0E00               	movlw	high _led
  4921  0062A8  22DA               	addwfc	fsr2h,f,c
  4922  0062AA  50DF               	movf	indf2,w,c
  4923  0062AC  1283               	iorwf	131,f,c	;volatile
  4924  0062AE  0012               	return		;funcret
  4925  0062B0                     __end_of_LigarLed:
  4926                           	callstack 0
  4927                           
  4928 ;; *************** function _ssdUpdate *****************
  4929 ;; Defined at:
  4930 ;;		line 50 in file "ssd.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;		None
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;		None
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      void 
  4937 ;; Registers used:
  4938 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4944 ;;      Params:         0       0       0       0       0       0       0
  4945 ;;      Locals:         0       0       0       0       0       0       0
  4946 ;;      Temps:          2       0       0       0       0       0       0
  4947 ;;      Totals:         2       0       0       0       0       0       0
  4948 ;;Total ram usage:        2 bytes
  4949 ;; Hardware stack levels used: 1
  4950 ;; Hardware stack levels required when called: 3
  4951 ;; This function calls:
  4952 ;;		_digitalWrite
  4953 ;;		_soWrite
  4954 ;; This function is called by:
  4955 ;;		_operate
  4956 ;;		_main
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text29
  4961  00705C                     __ptext29:
  4962                           	callstack 0
  4963  00705C                     _ssdUpdate:
  4964                           	callstack 27
  4965  00705C                     
  4966                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  4967  00705C  0E00               	movlw	0
  4968  00705E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4969  007060  0E18               	movlw	24
  4970  007062  6E01               	movwf	digitalWrite@pin^0,c
  4971  007064  0E00               	movlw	0
  4972  007066  6E04               	movwf	(digitalWrite@value+1)^0,c
  4973  007068  0E00               	movlw	0
  4974  00706A  6E03               	movwf	digitalWrite@value^0,c
  4975  00706C  EC10  F03B         	call	_digitalWrite	;wreg free
  4976                           
  4977                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  4978  007070  0E00               	movlw	0
  4979  007072  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4980  007074  0E19               	movlw	25
  4981  007076  6E01               	movwf	digitalWrite@pin^0,c
  4982  007078  0E00               	movlw	0
  4983  00707A  6E04               	movwf	(digitalWrite@value+1)^0,c
  4984  00707C  0E00               	movlw	0
  4985  00707E  6E03               	movwf	digitalWrite@value^0,c
  4986  007080  EC10  F03B         	call	_digitalWrite	;wreg free
  4987                           
  4988                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  4989  007084  0E00               	movlw	0
  4990  007086  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4991  007088  0E1A               	movlw	26
  4992  00708A  6E01               	movwf	digitalWrite@pin^0,c
  4993  00708C  0E00               	movlw	0
  4994  00708E  6E04               	movwf	(digitalWrite@value+1)^0,c
  4995  007090  0E00               	movlw	0
  4996  007092  6E03               	movwf	digitalWrite@value^0,c
  4997  007094  EC10  F03B         	call	_digitalWrite	;wreg free
  4998                           
  4999                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  5000  007098  0E00               	movlw	0
  5001  00709A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5002  00709C  0E1B               	movlw	27
  5003  00709E  6E01               	movwf	digitalWrite@pin^0,c
  5004  0070A0  0E00               	movlw	0
  5005  0070A2  6E04               	movwf	(digitalWrite@value+1)^0,c
  5006  0070A4  0E00               	movlw	0
  5007  0070A6  6E03               	movwf	digitalWrite@value^0,c
  5008  0070A8  EC10  F03B         	call	_digitalWrite	;wreg free
  5009                           
  5010                           ;ssd.c: 60:     soWrite(0x00);
  5011  0070AC  0E00               	movlw	0
  5012  0070AE  6E08               	movwf	(soWrite@value+1)^0,c
  5013  0070B0  0E00               	movlw	0
  5014  0070B2  6E07               	movwf	soWrite@value^0,c
  5015  0070B4  EC7A  F032         	call	_soWrite	;wreg free
  5016                           
  5017                           ;ssd.c: 62:     switch (display)
  5018  0070B8  EFC6  F038         	goto	l2311
  5019  0070BC                     l2283:
  5020                           
  5021                           ;ssd.c: 65:             soWrite(valor[v0]);
  5022  0070BC  0EC7               	movlw	low _valor
  5023  0070BE  245E               	addwf	_v0^0,w,c
  5024  0070C0  6EF6               	movwf	tblptrl,c
  5025  0070C2  6AF7               	clrf	tblptrh,c
  5026  0070C4  0E7E               	movlw	high _valor
  5027  0070C6  22F7               	addwfc	tblptrh,f,c
  5028  0070C8                     	if	0	;There are less than 3 active tblptr bytes
  5029  0070C8                     	endif
  5030  0070C8  0008               	tblrd		*
  5031  0070CA  50F5               	movf	tablat,w,c
  5032  0070CC  6E07               	movwf	soWrite@value^0,c
  5033  0070CE  6A08               	clrf	(soWrite@value+1)^0,c
  5034  0070D0  EC7A  F032         	call	_soWrite	;wreg free
  5035  0070D4                     
  5036                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  5037  0070D4  0E00               	movlw	0
  5038  0070D6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5039  0070D8  0E18               	movlw	24
  5040  0070DA  6E01               	movwf	digitalWrite@pin^0,c
  5041  0070DC  0E00               	movlw	0
  5042  0070DE  6E04               	movwf	(digitalWrite@value+1)^0,c
  5043  0070E0  0E01               	movlw	1
  5044  0070E2  6E03               	movwf	digitalWrite@value^0,c
  5045  0070E4  EC10  F03B         	call	_digitalWrite	;wreg free
  5046  0070E8                     
  5047                           ;ssd.c: 67:             display = 1;
  5048  0070E8  0E01               	movlw	1
  5049  0070EA  6E5F               	movwf	_display^0,c
  5050                           
  5051                           ;ssd.c: 68:             break;
  5052  0070EC  EFE3  F038         	goto	l296
  5053  0070F0                     l2289:
  5054                           
  5055                           ;ssd.c: 71:             soWrite(valor[v1]);
  5056  0070F0  0EC7               	movlw	low _valor
  5057  0070F2  245D               	addwf	_v1^0,w,c
  5058  0070F4  6EF6               	movwf	tblptrl,c
  5059  0070F6  6AF7               	clrf	tblptrh,c
  5060  0070F8  0E7E               	movlw	high _valor
  5061  0070FA  22F7               	addwfc	tblptrh,f,c
  5062  0070FC                     	if	0	;There are less than 3 active tblptr bytes
  5063  0070FC                     	endif
  5064  0070FC  0008               	tblrd		*
  5065  0070FE  50F5               	movf	tablat,w,c
  5066  007100  6E07               	movwf	soWrite@value^0,c
  5067  007102  6A08               	clrf	(soWrite@value+1)^0,c
  5068  007104  EC7A  F032         	call	_soWrite	;wreg free
  5069  007108                     
  5070                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  5071  007108  0E00               	movlw	0
  5072  00710A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5073  00710C  0E19               	movlw	25
  5074  00710E  6E01               	movwf	digitalWrite@pin^0,c
  5075  007110  0E00               	movlw	0
  5076  007112  6E04               	movwf	(digitalWrite@value+1)^0,c
  5077  007114  0E01               	movlw	1
  5078  007116  6E03               	movwf	digitalWrite@value^0,c
  5079  007118  EC10  F03B         	call	_digitalWrite	;wreg free
  5080  00711C                     
  5081                           ;ssd.c: 73:             display = 2;
  5082  00711C  0E02               	movlw	2
  5083  00711E  6E5F               	movwf	_display^0,c
  5084                           
  5085                           ;ssd.c: 74:             break;
  5086  007120  EFE3  F038         	goto	l296
  5087  007124                     l2295:
  5088                           
  5089                           ;ssd.c: 77:             soWrite(valor[v2]);
  5090  007124  0EC7               	movlw	low _valor
  5091  007126  245C               	addwf	_v2^0,w,c
  5092  007128  6EF6               	movwf	tblptrl,c
  5093  00712A  6AF7               	clrf	tblptrh,c
  5094  00712C  0E7E               	movlw	high _valor
  5095  00712E  22F7               	addwfc	tblptrh,f,c
  5096  007130                     	if	0	;There are less than 3 active tblptr bytes
  5097  007130                     	endif
  5098  007130  0008               	tblrd		*
  5099  007132  50F5               	movf	tablat,w,c
  5100  007134  6E07               	movwf	soWrite@value^0,c
  5101  007136  6A08               	clrf	(soWrite@value+1)^0,c
  5102  007138  EC7A  F032         	call	_soWrite	;wreg free
  5103  00713C                     
  5104                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  5105  00713C  0E00               	movlw	0
  5106  00713E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5107  007140  0E1A               	movlw	26
  5108  007142  6E01               	movwf	digitalWrite@pin^0,c
  5109  007144  0E00               	movlw	0
  5110  007146  6E04               	movwf	(digitalWrite@value+1)^0,c
  5111  007148  0E01               	movlw	1
  5112  00714A  6E03               	movwf	digitalWrite@value^0,c
  5113  00714C  EC10  F03B         	call	_digitalWrite	;wreg free
  5114  007150                     
  5115                           ;ssd.c: 79:             display = 3;
  5116  007150  0E03               	movlw	3
  5117  007152  6E5F               	movwf	_display^0,c
  5118                           
  5119                           ;ssd.c: 80:             break;
  5120  007154  EFE3  F038         	goto	l296
  5121  007158                     l2301:
  5122                           
  5123                           ;ssd.c: 83:             soWrite(valor[v3]);
  5124  007158  0EC7               	movlw	low _valor
  5125  00715A  245B               	addwf	_v3^0,w,c
  5126  00715C  6EF6               	movwf	tblptrl,c
  5127  00715E  6AF7               	clrf	tblptrh,c
  5128  007160  0E7E               	movlw	high _valor
  5129  007162  22F7               	addwfc	tblptrh,f,c
  5130  007164                     	if	0	;There are less than 3 active tblptr bytes
  5131  007164                     	endif
  5132  007164  0008               	tblrd		*
  5133  007166  50F5               	movf	tablat,w,c
  5134  007168  6E07               	movwf	soWrite@value^0,c
  5135  00716A  6A08               	clrf	(soWrite@value+1)^0,c
  5136  00716C  EC7A  F032         	call	_soWrite	;wreg free
  5137  007170                     
  5138                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  5139  007170  0E00               	movlw	0
  5140  007172  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5141  007174  0E1B               	movlw	27
  5142  007176  6E01               	movwf	digitalWrite@pin^0,c
  5143  007178  0E00               	movlw	0
  5144  00717A  6E04               	movwf	(digitalWrite@value+1)^0,c
  5145  00717C  0E01               	movlw	1
  5146  00717E  6E03               	movwf	digitalWrite@value^0,c
  5147  007180  EC10  F03B         	call	_digitalWrite	;wreg free
  5148  007184                     l2305:
  5149                           
  5150                           ;ssd.c: 85:             display = 0;
  5151  007184  0E00               	movlw	0
  5152  007186  6E5F               	movwf	_display^0,c
  5153                           
  5154                           ;ssd.c: 86:             break;
  5155  007188  EFE3  F038         	goto	l296
  5156  00718C                     l2311:
  5157  00718C  505F               	movf	_display^0,w,c
  5158  00718E  6E0A               	movwf	??_ssdUpdate^0,c
  5159  007190  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  5160                           
  5161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5162                           ; Switch size 1, requested type "simple"
  5163                           ; Number of cases is 1, Range of values is 0 to 0
  5164                           ; switch strategies available:
  5165                           ; Name         Instructions Cycles
  5166                           ; simple_byte            4     3 (average)
  5167                           ;	Chosen strategy is simple_byte
  5168  007192  500B               	movf	(??_ssdUpdate+1)^0,w,c
  5169  007194  0A00               	xorlw	0	; case 0
  5170  007196  B4D8               	btfsc	status,2,c
  5171  007198  EFD0  F038         	goto	l2843
  5172  00719C  EFC2  F038         	goto	l2305
  5173  0071A0                     l2843:
  5174                           
  5175                           ; Switch size 1, requested type "simple"
  5176                           ; Number of cases is 4, Range of values is 0 to 3
  5177                           ; switch strategies available:
  5178                           ; Name         Instructions Cycles
  5179                           ; simple_byte           13     7 (average)
  5180                           ;	Chosen strategy is simple_byte
  5181  0071A0  500A               	movf	??_ssdUpdate^0,w,c
  5182  0071A2  0A00               	xorlw	0	; case 0
  5183  0071A4  B4D8               	btfsc	status,2,c
  5184  0071A6  EF5E  F038         	goto	l2283
  5185  0071AA  0A01               	xorlw	1	; case 1
  5186  0071AC  B4D8               	btfsc	status,2,c
  5187  0071AE  EF78  F038         	goto	l2289
  5188  0071B2  0A03               	xorlw	3	; case 2
  5189  0071B4  B4D8               	btfsc	status,2,c
  5190  0071B6  EF92  F038         	goto	l2295
  5191  0071BA  0A01               	xorlw	1	; case 3
  5192  0071BC  B4D8               	btfsc	status,2,c
  5193  0071BE  EFAC  F038         	goto	l2301
  5194  0071C2  EFC2  F038         	goto	l2305
  5195  0071C6                     l296:
  5196  0071C6  0012               	return		;funcret
  5197  0071C8                     __end_of_ssdUpdate:
  5198                           	callstack 0
  5199                           
  5200 ;; *************** function _soWrite *****************
  5201 ;; Defined at:
  5202 ;;		line 18 in file "so.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  value           2    6[COMRAM] int 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  i               1    8[COMRAM] unsigned char 
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  1    wreg      void 
  5209 ;; Registers used:
  5210 ;;		wreg, status,2, status,0, cstack
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5216 ;;      Params:         2       0       0       0       0       0       0
  5217 ;;      Locals:         1       0       0       0       0       0       0
  5218 ;;      Temps:          0       0       0       0       0       0       0
  5219 ;;      Totals:         3       0       0       0       0       0       0
  5220 ;;Total ram usage:        3 bytes
  5221 ;; Hardware stack levels used: 1
  5222 ;; Hardware stack levels required when called: 2
  5223 ;; This function calls:
  5224 ;;		_PulseClockData
  5225 ;;		_PulseEnClock
  5226 ;;		_digitalWrite
  5227 ;; This function is called by:
  5228 ;;		_kpDebounce
  5229 ;;		_pushNibble
  5230 ;;		_pushByte
  5231 ;;		_ssdUpdate
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text30
  5236  0064F4                     __ptext30:
  5237                           	callstack 0
  5238  0064F4                     _soWrite:
  5239                           	callstack 27
  5240  0064F4                     
  5241                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  5242  0064F4  0E00               	movlw	0
  5243  0064F6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5244  0064F8  0E08               	movlw	8
  5245  0064FA  6E01               	movwf	digitalWrite@pin^0,c
  5246  0064FC  0E00               	movlw	0
  5247  0064FE  6E04               	movwf	(digitalWrite@value+1)^0,c
  5248  006500  0E00               	movlw	0
  5249  006502  6E03               	movwf	digitalWrite@value^0,c
  5250  006504  EC10  F03B         	call	_digitalWrite	;wreg free
  5251  006508                     
  5252                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  5253  006508  0E00               	movlw	0
  5254  00650A  6E09               	movwf	soWrite@i^0,c
  5255  00650C                     l2085:
  5256                           
  5257                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  5258  00650C  0E00               	movlw	0
  5259  00650E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5260  006510  0E1E               	movlw	30
  5261  006512  6E01               	movwf	digitalWrite@pin^0,c
  5262  006514  0E80               	movlw	128
  5263  006516  1407               	andwf	soWrite@value^0,w,c
  5264  006518  6E03               	movwf	digitalWrite@value^0,c
  5265  00651A  6A04               	clrf	(digitalWrite@value+1)^0,c
  5266  00651C  EC10  F03B         	call	_digitalWrite	;wreg free
  5267                           
  5268                           ;so.c: 23:   PulseClockData();
  5269  006520  ECA0  F031         	call	_PulseClockData	;wreg free
  5270  006524                     
  5271                           ;so.c: 24:   value <<= 1;
  5272  006524  90D8               	bcf	status,0,c
  5273  006526  3607               	rlcf	soWrite@value^0,f,c
  5274  006528  3608               	rlcf	(soWrite@value+1)^0,f,c
  5275  00652A                     
  5276                           ;so.c: 25:  }
  5277  00652A  2A09               	incf	soWrite@i^0,f,c
  5278  00652C  0E07               	movlw	7
  5279  00652E  6409               	cpfsgt	soWrite@i^0,c
  5280  006530  EF9C  F032         	goto	u1511
  5281  006534  EF9E  F032         	goto	u1510
  5282  006538                     u1511:
  5283  006538  EF86  F032         	goto	l2085
  5284  00653C                     u1510:
  5285  00653C                     
  5286                           ;so.c: 26:  PulseEnClock();
  5287  00653C  ECB5  F031         	call	_PulseEnClock	;wreg free
  5288  006540  0012               	return		;funcret
  5289  006542                     __end_of_soWrite:
  5290                           	callstack 0
  5291                           
  5292 ;; *************** function _PulseEnClock *****************
  5293 ;; Defined at:
  5294 ;;		line 9 in file "so.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;		None
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;		None
  5299 ;; Return value:  Size  Location     Type
  5300 ;;                  1    wreg      void 
  5301 ;; Registers used:
  5302 ;;		wreg, status,2, status,0, cstack
  5303 ;; Tracked objects:
  5304 ;;		On entry : 0/0
  5305 ;;		On exit  : 0/0
  5306 ;;		Unchanged: 0/0
  5307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5308 ;;      Params:         0       0       0       0       0       0       0
  5309 ;;      Locals:         0       0       0       0       0       0       0
  5310 ;;      Temps:          0       0       0       0       0       0       0
  5311 ;;      Totals:         0       0       0       0       0       0       0
  5312 ;;Total ram usage:        0 bytes
  5313 ;; Hardware stack levels used: 1
  5314 ;; Hardware stack levels required when called: 1
  5315 ;; This function calls:
  5316 ;;		_digitalWrite
  5317 ;; This function is called by:
  5318 ;;		_soWrite
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text31
  5323  00636A                     __ptext31:
  5324                           	callstack 0
  5325  00636A                     _PulseEnClock:
  5326                           	callstack 27
  5327  00636A                     
  5328                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  5329  00636A  0E00               	movlw	0
  5330  00636C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5331  00636E  0E1F               	movlw	31
  5332  006370  6E01               	movwf	digitalWrite@pin^0,c
  5333  006372  0E00               	movlw	0
  5334  006374  6E04               	movwf	(digitalWrite@value+1)^0,c
  5335  006376  0E01               	movlw	1
  5336  006378  6E03               	movwf	digitalWrite@value^0,c
  5337  00637A  EC10  F03B         	call	_digitalWrite	;wreg free
  5338                           
  5339                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  5340  00637E  0E00               	movlw	0
  5341  006380  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5342  006382  0E1F               	movlw	31
  5343  006384  6E01               	movwf	digitalWrite@pin^0,c
  5344  006386  0E00               	movlw	0
  5345  006388  6E04               	movwf	(digitalWrite@value+1)^0,c
  5346  00638A  0E00               	movlw	0
  5347  00638C  6E03               	movwf	digitalWrite@value^0,c
  5348  00638E  EC10  F03B         	call	_digitalWrite	;wreg free
  5349  006392  0012               	return		;funcret
  5350  006394                     __end_of_PulseEnClock:
  5351                           	callstack 0
  5352                           
  5353 ;; *************** function _PulseClockData *****************
  5354 ;; Defined at:
  5355 ;;		line 14 in file "so.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;		None
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;		None
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg, status,2, status,0, cstack
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5369 ;;      Params:         0       0       0       0       0       0       0
  5370 ;;      Locals:         0       0       0       0       0       0       0
  5371 ;;      Temps:          0       0       0       0       0       0       0
  5372 ;;      Totals:         0       0       0       0       0       0       0
  5373 ;;Total ram usage:        0 bytes
  5374 ;; Hardware stack levels used: 1
  5375 ;; Hardware stack levels required when called: 1
  5376 ;; This function calls:
  5377 ;;		_digitalWrite
  5378 ;; This function is called by:
  5379 ;;		_soWrite
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           	psect	text32
  5384  006340                     __ptext32:
  5385                           	callstack 0
  5386  006340                     _PulseClockData:
  5387                           	callstack 27
  5388  006340                     
  5389                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  5390  006340  0E00               	movlw	0
  5391  006342  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5392  006344  0E08               	movlw	8
  5393  006346  6E01               	movwf	digitalWrite@pin^0,c
  5394  006348  0E00               	movlw	0
  5395  00634A  6E04               	movwf	(digitalWrite@value+1)^0,c
  5396  00634C  0E01               	movlw	1
  5397  00634E  6E03               	movwf	digitalWrite@value^0,c
  5398  006350  EC10  F03B         	call	_digitalWrite	;wreg free
  5399                           
  5400                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  5401  006354  0E00               	movlw	0
  5402  006356  6E02               	movwf	(digitalWrite@pin+1)^0,c
  5403  006358  0E08               	movlw	8
  5404  00635A  6E01               	movwf	digitalWrite@pin^0,c
  5405  00635C  0E00               	movlw	0
  5406  00635E  6E04               	movwf	(digitalWrite@value+1)^0,c
  5407  006360  0E00               	movlw	0
  5408  006362  6E03               	movwf	digitalWrite@value^0,c
  5409  006364  EC10  F03B         	call	_digitalWrite	;wreg free
  5410  006368  0012               	return		;funcret
  5411  00636A                     __end_of_PulseClockData:
  5412                           	callstack 0
  5413                           
  5414 ;; *************** function _digitalWrite *****************
  5415 ;; Defined at:
  5416 ;;		line 14 in file "io.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;  pin             2    0[COMRAM] int 
  5419 ;;  value           2    2[COMRAM] int 
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5431 ;;      Params:         4       0       0       0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0       0       0
  5433 ;;      Temps:          2       0       0       0       0       0       0
  5434 ;;      Totals:         6       0       0       0       0       0       0
  5435 ;;Total ram usage:        6 bytes
  5436 ;; Hardware stack levels used: 1
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_pulseEnablePin
  5441 ;;		_pushNibble
  5442 ;;		_pushByte
  5443 ;;		_ssdUpdate
  5444 ;;		_PulseEnClock
  5445 ;;		_PulseClockData
  5446 ;;		_soWrite
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           	psect	text33
  5451  007620                     __ptext33:
  5452                           	callstack 0
  5453  007620                     _digitalWrite:
  5454                           	callstack 28
  5455  007620                     
  5456                           ;io.c: 16:     if(pin <8){
  5457  007620  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5458  007622  EF1E  F03B         	goto	u1310
  5459  007626  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5460  007628  E107               	bnz	u1311
  5461  00762A  0E08               	movlw	8
  5462  00762C  5C01               	subwf	digitalWrite@pin^0,w,c
  5463  00762E  B0D8               	btfsc	status,0,c
  5464  007630  EF1C  F03B         	goto	u1311
  5465  007634  EF1E  F03B         	goto	u1310
  5466  007638                     u1311:
  5467  007638  EF48  F03B         	goto	l2041
  5468  00763C                     u1310:
  5469  00763C                     
  5470                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  5471  00763C  5003               	movf	digitalWrite@value^0,w,c
  5472  00763E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5473  007640  B4D8               	btfsc	status,2,c
  5474  007642  EF25  F03B         	goto	u1321
  5475  007646  EF27  F03B         	goto	u1320
  5476  00764A                     u1321:
  5477  00764A  EF37  F03B         	goto	l2039
  5478  00764E                     u1320:
  5479  00764E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5480  007652  0E01               	movlw	1
  5481  007654  6E06               	movwf	(??_digitalWrite+1)^0,c
  5482  007656  2A05               	incf	??_digitalWrite^0,f,c
  5483  007658  EF30  F03B         	goto	u1334
  5484  00765C                     u1335:
  5485  00765C  90D8               	bcf	status,0,c
  5486  00765E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5487  007660                     u1334:
  5488  007660  2E05               	decfsz	??_digitalWrite^0,f,c
  5489  007662  EF2E  F03B         	goto	u1335
  5490  007666  5006               	movf	(??_digitalWrite+1)^0,w,c
  5491  007668  1280               	iorwf	128,f,c	;volatile
  5492  00766A  EF36  F03C         	goto	l364
  5493  00766E                     l2039:
  5494  00766E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5495  007672  0E01               	movlw	1
  5496  007674  6E06               	movwf	(??_digitalWrite+1)^0,c
  5497  007676  2A05               	incf	??_digitalWrite^0,f,c
  5498  007678  EF40  F03B         	goto	u1344
  5499  00767C                     u1345:
  5500  00767C  90D8               	bcf	status,0,c
  5501  00767E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5502  007680                     u1344:
  5503  007680  2E05               	decfsz	??_digitalWrite^0,f,c
  5504  007682  EF3E  F03B         	goto	u1345
  5505  007686  5006               	movf	(??_digitalWrite+1)^0,w,c
  5506  007688  0AFF               	xorlw	255
  5507  00768A  1680               	andwf	128,f,c	;volatile
  5508  00768C  EF36  F03C         	goto	l364
  5509  007690                     l2041:
  5510  007690  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5511  007692  EF56  F03B         	goto	u1350
  5512  007696  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5513  007698  E107               	bnz	u1351
  5514  00769A  0E10               	movlw	16
  5515  00769C  5C01               	subwf	digitalWrite@pin^0,w,c
  5516  00769E  B0D8               	btfsc	status,0,c
  5517  0076A0  EF54  F03B         	goto	u1351
  5518  0076A4  EF56  F03B         	goto	u1350
  5519  0076A8                     u1351:
  5520  0076A8  EF84  F03B         	goto	l2049
  5521  0076AC                     u1350:
  5522  0076AC                     
  5523                           ;io.c: 20:         pin -=8;
  5524  0076AC  0EF8               	movlw	248
  5525  0076AE  2601               	addwf	digitalWrite@pin^0,f,c
  5526  0076B0  0EFF               	movlw	255
  5527  0076B2  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5528                           
  5529                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  5530  0076B4  5003               	movf	digitalWrite@value^0,w,c
  5531  0076B6  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5532  0076B8  B4D8               	btfsc	status,2,c
  5533  0076BA  EF61  F03B         	goto	u1361
  5534  0076BE  EF63  F03B         	goto	u1360
  5535  0076C2                     u1361:
  5536  0076C2  EF73  F03B         	goto	l2047
  5537  0076C6                     u1360:
  5538  0076C6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5539  0076CA  0E01               	movlw	1
  5540  0076CC  6E06               	movwf	(??_digitalWrite+1)^0,c
  5541  0076CE  2A05               	incf	??_digitalWrite^0,f,c
  5542  0076D0  EF6C  F03B         	goto	u1374
  5543  0076D4                     u1375:
  5544  0076D4  90D8               	bcf	status,0,c
  5545  0076D6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5546  0076D8                     u1374:
  5547  0076D8  2E05               	decfsz	??_digitalWrite^0,f,c
  5548  0076DA  EF6A  F03B         	goto	u1375
  5549  0076DE  5006               	movf	(??_digitalWrite+1)^0,w,c
  5550  0076E0  1281               	iorwf	129,f,c	;volatile
  5551  0076E2  EF36  F03C         	goto	l364
  5552  0076E6                     l2047:
  5553  0076E6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5554  0076EA  0E01               	movlw	1
  5555  0076EC  6E06               	movwf	(??_digitalWrite+1)^0,c
  5556  0076EE  2A05               	incf	??_digitalWrite^0,f,c
  5557  0076F0  EF7C  F03B         	goto	u1384
  5558  0076F4                     u1385:
  5559  0076F4  90D8               	bcf	status,0,c
  5560  0076F6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5561  0076F8                     u1384:
  5562  0076F8  2E05               	decfsz	??_digitalWrite^0,f,c
  5563  0076FA  EF7A  F03B         	goto	u1385
  5564  0076FE  5006               	movf	(??_digitalWrite+1)^0,w,c
  5565  007700  0AFF               	xorlw	255
  5566  007702  1681               	andwf	129,f,c	;volatile
  5567  007704  EF36  F03C         	goto	l364
  5568  007708                     l2049:
  5569  007708  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5570  00770A  EF92  F03B         	goto	u1390
  5571  00770E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5572  007710  E107               	bnz	u1391
  5573  007712  0E18               	movlw	24
  5574  007714  5C01               	subwf	digitalWrite@pin^0,w,c
  5575  007716  B0D8               	btfsc	status,0,c
  5576  007718  EF90  F03B         	goto	u1391
  5577  00771C  EF92  F03B         	goto	u1390
  5578  007720                     u1391:
  5579  007720  EFC0  F03B         	goto	l2057
  5580  007724                     u1390:
  5581  007724                     
  5582                           ;io.c: 24:         pin -=16;
  5583  007724  0EF0               	movlw	240
  5584  007726  2601               	addwf	digitalWrite@pin^0,f,c
  5585  007728  0EFF               	movlw	255
  5586  00772A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5587                           
  5588                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  5589  00772C  5003               	movf	digitalWrite@value^0,w,c
  5590  00772E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5591  007730  B4D8               	btfsc	status,2,c
  5592  007732  EF9D  F03B         	goto	u1401
  5593  007736  EF9F  F03B         	goto	u1400
  5594  00773A                     u1401:
  5595  00773A  EFAF  F03B         	goto	l2055
  5596  00773E                     u1400:
  5597  00773E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5598  007742  0E01               	movlw	1
  5599  007744  6E06               	movwf	(??_digitalWrite+1)^0,c
  5600  007746  2A05               	incf	??_digitalWrite^0,f,c
  5601  007748  EFA8  F03B         	goto	u1414
  5602  00774C                     u1415:
  5603  00774C  90D8               	bcf	status,0,c
  5604  00774E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5605  007750                     u1414:
  5606  007750  2E05               	decfsz	??_digitalWrite^0,f,c
  5607  007752  EFA6  F03B         	goto	u1415
  5608  007756  5006               	movf	(??_digitalWrite+1)^0,w,c
  5609  007758  1282               	iorwf	130,f,c	;volatile
  5610  00775A  EF36  F03C         	goto	l364
  5611  00775E                     l2055:
  5612  00775E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5613  007762  0E01               	movlw	1
  5614  007764  6E06               	movwf	(??_digitalWrite+1)^0,c
  5615  007766  2A05               	incf	??_digitalWrite^0,f,c
  5616  007768  EFB8  F03B         	goto	u1424
  5617  00776C                     u1425:
  5618  00776C  90D8               	bcf	status,0,c
  5619  00776E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5620  007770                     u1424:
  5621  007770  2E05               	decfsz	??_digitalWrite^0,f,c
  5622  007772  EFB6  F03B         	goto	u1425
  5623  007776  5006               	movf	(??_digitalWrite+1)^0,w,c
  5624  007778  0AFF               	xorlw	255
  5625  00777A  1682               	andwf	130,f,c	;volatile
  5626  00777C  EF36  F03C         	goto	l364
  5627  007780                     l2057:
  5628  007780  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5629  007782  EFCE  F03B         	goto	u1430
  5630  007786  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5631  007788  E107               	bnz	u1431
  5632  00778A  0E20               	movlw	32
  5633  00778C  5C01               	subwf	digitalWrite@pin^0,w,c
  5634  00778E  B0D8               	btfsc	status,0,c
  5635  007790  EFCC  F03B         	goto	u1431
  5636  007794  EFCE  F03B         	goto	u1430
  5637  007798                     u1431:
  5638  007798  EFFC  F03B         	goto	l2065
  5639  00779C                     u1430:
  5640  00779C                     
  5641                           ;io.c: 28:         pin -=24;
  5642  00779C  0EE8               	movlw	232
  5643  00779E  2601               	addwf	digitalWrite@pin^0,f,c
  5644  0077A0  0EFF               	movlw	255
  5645  0077A2  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5646                           
  5647                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  5648  0077A4  5003               	movf	digitalWrite@value^0,w,c
  5649  0077A6  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5650  0077A8  B4D8               	btfsc	status,2,c
  5651  0077AA  EFD9  F03B         	goto	u1441
  5652  0077AE  EFDB  F03B         	goto	u1440
  5653  0077B2                     u1441:
  5654  0077B2  EFEB  F03B         	goto	l2063
  5655  0077B6                     u1440:
  5656  0077B6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5657  0077BA  0E01               	movlw	1
  5658  0077BC  6E06               	movwf	(??_digitalWrite+1)^0,c
  5659  0077BE  2A05               	incf	??_digitalWrite^0,f,c
  5660  0077C0  EFE4  F03B         	goto	u1454
  5661  0077C4                     u1455:
  5662  0077C4  90D8               	bcf	status,0,c
  5663  0077C6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5664  0077C8                     u1454:
  5665  0077C8  2E05               	decfsz	??_digitalWrite^0,f,c
  5666  0077CA  EFE2  F03B         	goto	u1455
  5667  0077CE  5006               	movf	(??_digitalWrite+1)^0,w,c
  5668  0077D0  1283               	iorwf	131,f,c	;volatile
  5669  0077D2  EF36  F03C         	goto	l364
  5670  0077D6                     l2063:
  5671  0077D6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5672  0077DA  0E01               	movlw	1
  5673  0077DC  6E06               	movwf	(??_digitalWrite+1)^0,c
  5674  0077DE  2A05               	incf	??_digitalWrite^0,f,c
  5675  0077E0  EFF4  F03B         	goto	u1464
  5676  0077E4                     u1465:
  5677  0077E4  90D8               	bcf	status,0,c
  5678  0077E6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5679  0077E8                     u1464:
  5680  0077E8  2E05               	decfsz	??_digitalWrite^0,f,c
  5681  0077EA  EFF2  F03B         	goto	u1465
  5682  0077EE  5006               	movf	(??_digitalWrite+1)^0,w,c
  5683  0077F0  0AFF               	xorlw	255
  5684  0077F2  1683               	andwf	131,f,c	;volatile
  5685  0077F4  EF36  F03C         	goto	l364
  5686  0077F8                     l2065:
  5687  0077F8  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  5688  0077FA  EF0A  F03C         	goto	u1470
  5689  0077FE  5002               	movf	(digitalWrite@pin+1)^0,w,c
  5690  007800  E107               	bnz	u1471
  5691  007802  0E28               	movlw	40
  5692  007804  5C01               	subwf	digitalWrite@pin^0,w,c
  5693  007806  B0D8               	btfsc	status,0,c
  5694  007808  EF08  F03C         	goto	u1471
  5695  00780C  EF0A  F03C         	goto	u1470
  5696  007810                     u1471:
  5697  007810  EF36  F03C         	goto	l364
  5698  007814                     u1470:
  5699  007814                     
  5700                           ;io.c: 32:         pin -=32;
  5701  007814  0EE0               	movlw	224
  5702  007816  2601               	addwf	digitalWrite@pin^0,f,c
  5703  007818  0EFF               	movlw	255
  5704  00781A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  5705                           
  5706                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  5707  00781C  5003               	movf	digitalWrite@value^0,w,c
  5708  00781E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  5709  007820  B4D8               	btfsc	status,2,c
  5710  007822  EF15  F03C         	goto	u1481
  5711  007826  EF17  F03C         	goto	u1480
  5712  00782A                     u1481:
  5713  00782A  EF27  F03C         	goto	l2071
  5714  00782E                     u1480:
  5715  00782E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5716  007832  0E01               	movlw	1
  5717  007834  6E06               	movwf	(??_digitalWrite+1)^0,c
  5718  007836  2A05               	incf	??_digitalWrite^0,f,c
  5719  007838  EF20  F03C         	goto	u1494
  5720  00783C                     u1495:
  5721  00783C  90D8               	bcf	status,0,c
  5722  00783E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5723  007840                     u1494:
  5724  007840  2E05               	decfsz	??_digitalWrite^0,f,c
  5725  007842  EF1E  F03C         	goto	u1495
  5726  007846  5006               	movf	(??_digitalWrite+1)^0,w,c
  5727  007848  1284               	iorwf	132,f,c	;volatile
  5728  00784A  EF36  F03C         	goto	l364
  5729  00784E                     l2071:
  5730  00784E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  5731  007852  0E01               	movlw	1
  5732  007854  6E06               	movwf	(??_digitalWrite+1)^0,c
  5733  007856  2A05               	incf	??_digitalWrite^0,f,c
  5734  007858  EF30  F03C         	goto	u1504
  5735  00785C                     u1505:
  5736  00785C  90D8               	bcf	status,0,c
  5737  00785E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  5738  007860                     u1504:
  5739  007860  2E05               	decfsz	??_digitalWrite^0,f,c
  5740  007862  EF2E  F03C         	goto	u1505
  5741  007866  5006               	movf	(??_digitalWrite+1)^0,w,c
  5742  007868  0AFF               	xorlw	255
  5743  00786A  1684               	andwf	132,f,c	;volatile
  5744  00786C                     l364:
  5745  00786C  0012               	return		;funcret
  5746  00786E                     __end_of_digitalWrite:
  5747                           	callstack 0
  5748                           
  5749 ;; *************** function _ssdDigit *****************
  5750 ;; Defined at:
  5751 ;;		line 34 in file "ssd.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  val             1    wreg     unsigned char 
  5754 ;;  pos             1   36[COMRAM] unsigned char 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  val             1   37[COMRAM] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5766 ;;      Params:         1       0       0       0       0       0       0
  5767 ;;      Locals:         1       0       0       0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0
  5769 ;;      Totals:         2       0       0       0       0       0       0
  5770 ;;Total ram usage:        2 bytes
  5771 ;; Hardware stack levels used: 1
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_operate
  5776 ;;		_main
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text34
  5781  00663E                     __ptext34:
  5782                           	callstack 0
  5783  00663E                     _ssdDigit:
  5784                           	callstack 30
  5785                           
  5786                           ;incstack = 0
  5787                           ;ssdDigit@val stored from wreg
  5788  00663E  6E26               	movwf	ssdDigit@val^0,c
  5789  006640                     
  5790                           ;ssd.c: 35:     if (pos == 0) {
  5791  006640  5025               	movf	ssdDigit@pos^0,w,c
  5792  006642  A4D8               	btfss	status,2,c
  5793  006644  EF26  F033         	goto	u1751
  5794  006648  EF28  F033         	goto	u1750
  5795  00664C                     u1751:
  5796  00664C  EF2A  F033         	goto	l2269
  5797  006650                     u1750:
  5798  006650                     
  5799                           ;ssd.c: 36:         v0 = val;
  5800  006650  C026  F05E         	movff	ssdDigit@val,_v0
  5801  006654                     l2269:
  5802                           
  5803                           ;ssd.c: 38:     if (pos == 1) {
  5804  006654  0425               	decf	ssdDigit@pos^0,w,c
  5805  006656  A4D8               	btfss	status,2,c
  5806  006658  EF30  F033         	goto	u1761
  5807  00665C  EF32  F033         	goto	u1760
  5808  006660                     u1761:
  5809  006660  EF34  F033         	goto	l2273
  5810  006664                     u1760:
  5811  006664                     
  5812                           ;ssd.c: 39:         v1 = val;
  5813  006664  C026  F05D         	movff	ssdDigit@val,_v1
  5814  006668                     l2273:
  5815                           
  5816                           ;ssd.c: 41:     if (pos == 2) {
  5817  006668  0E02               	movlw	2
  5818  00666A  1825               	xorwf	ssdDigit@pos^0,w,c
  5819  00666C  A4D8               	btfss	status,2,c
  5820  00666E  EF3B  F033         	goto	u1771
  5821  006672  EF3D  F033         	goto	u1770
  5822  006676                     u1771:
  5823  006676  EF3F  F033         	goto	l2277
  5824  00667A                     u1770:
  5825  00667A                     
  5826                           ;ssd.c: 42:         v2 = val;
  5827  00667A  C026  F05C         	movff	ssdDigit@val,_v2
  5828  00667E                     l2277:
  5829                           
  5830                           ;ssd.c: 44:     if (pos == 3) {
  5831  00667E  0E03               	movlw	3
  5832  006680  1825               	xorwf	ssdDigit@pos^0,w,c
  5833  006682  A4D8               	btfss	status,2,c
  5834  006684  EF46  F033         	goto	u1781
  5835  006688  EF48  F033         	goto	u1780
  5836  00668C                     u1781:
  5837  00668C  EF4A  F033         	goto	l286
  5838  006690                     u1780:
  5839  006690                     
  5840                           ;ssd.c: 45:         v3 = val;
  5841  006690  C026  F05B         	movff	ssdDigit@val,_v3
  5842  006694                     l286:
  5843  006694  0012               	return		;funcret
  5844  006696                     __end_of_ssdDigit:
  5845                           	callstack 0
  5846                           
  5847 ;; *************** function ___almod *****************
  5848 ;; Defined at:
  5849 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\almod.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  dividend        4   26[COMRAM] long 
  5852 ;;  divisor         4   30[COMRAM] long 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  sign            1   35[COMRAM] unsigned char 
  5855 ;;  counter         1   34[COMRAM] unsigned char 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  4   26[COMRAM] long 
  5858 ;; Registers used:
  5859 ;;		wreg, status,2, status,0
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5865 ;;      Params:         8       0       0       0       0       0       0
  5866 ;;      Locals:         2       0       0       0       0       0       0
  5867 ;;      Temps:          0       0       0       0       0       0       0
  5868 ;;      Totals:        10       0       0       0       0       0       0
  5869 ;;Total ram usage:       10 bytes
  5870 ;; Hardware stack levels used: 1
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_operate
  5875 ;;		_main
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           	psect	text35
  5880  006BC4                     __ptext35:
  5881                           	callstack 0
  5882  006BC4                     ___almod:
  5883                           	callstack 30
  5884  006BC4  0E00               	movlw	0
  5885  006BC6  6E24               	movwf	___almod@sign^0,c
  5886  006BC8  BE1E               	btfsc	(___almod@dividend+3)^0,7,c
  5887  006BCA  EFEB  F035         	goto	u2080
  5888  006BCE  EFE9  F035         	goto	u2081
  5889  006BD2                     u2081:
  5890  006BD2  EFF5  F035         	goto	l2419
  5891  006BD6                     u2080:
  5892  006BD6  1E1E               	comf	(___almod@dividend+3)^0,f,c
  5893  006BD8  1E1D               	comf	(___almod@dividend+2)^0,f,c
  5894  006BDA  1E1C               	comf	(___almod@dividend+1)^0,f,c
  5895  006BDC  6C1B               	negf	___almod@dividend^0,c
  5896  006BDE  0E00               	movlw	0
  5897  006BE0  221C               	addwfc	(___almod@dividend+1)^0,f,c
  5898  006BE2  221D               	addwfc	(___almod@dividend+2)^0,f,c
  5899  006BE4  221E               	addwfc	(___almod@dividend+3)^0,f,c
  5900  006BE6  0E01               	movlw	1
  5901  006BE8  6E24               	movwf	___almod@sign^0,c
  5902  006BEA                     l2419:
  5903  006BEA  BE22               	btfsc	(___almod@divisor+3)^0,7,c
  5904  006BEC  EFFC  F035         	goto	u2090
  5905  006BF0  EFFA  F035         	goto	u2091
  5906  006BF4                     u2091:
  5907  006BF4  EF04  F036         	goto	l2423
  5908  006BF8                     u2090:
  5909  006BF8  1E22               	comf	(___almod@divisor+3)^0,f,c
  5910  006BFA  1E21               	comf	(___almod@divisor+2)^0,f,c
  5911  006BFC  1E20               	comf	(___almod@divisor+1)^0,f,c
  5912  006BFE  6C1F               	negf	___almod@divisor^0,c
  5913  006C00  0E00               	movlw	0
  5914  006C02  2220               	addwfc	(___almod@divisor+1)^0,f,c
  5915  006C04  2221               	addwfc	(___almod@divisor+2)^0,f,c
  5916  006C06  2222               	addwfc	(___almod@divisor+3)^0,f,c
  5917  006C08                     l2423:
  5918  006C08  501F               	movf	___almod@divisor^0,w,c
  5919  006C0A  1020               	iorwf	(___almod@divisor+1)^0,w,c
  5920  006C0C  1021               	iorwf	(___almod@divisor+2)^0,w,c
  5921  006C0E  1022               	iorwf	(___almod@divisor+3)^0,w,c
  5922  006C10  B4D8               	btfsc	status,2,c
  5923  006C12  EF0D  F036         	goto	u2101
  5924  006C16  EF0F  F036         	goto	u2100
  5925  006C1A                     u2101:
  5926  006C1A  EF3F  F036         	goto	l2439
  5927  006C1E                     u2100:
  5928  006C1E  0E01               	movlw	1
  5929  006C20  6E23               	movwf	___almod@counter^0,c
  5930  006C22  EF19  F036         	goto	l2429
  5931  006C26                     l2427:
  5932  006C26  90D8               	bcf	status,0,c
  5933  006C28  361F               	rlcf	___almod@divisor^0,f,c
  5934  006C2A  3620               	rlcf	(___almod@divisor+1)^0,f,c
  5935  006C2C  3621               	rlcf	(___almod@divisor+2)^0,f,c
  5936  006C2E  3622               	rlcf	(___almod@divisor+3)^0,f,c
  5937  006C30  2A23               	incf	___almod@counter^0,f,c
  5938  006C32                     l2429:
  5939  006C32  AE22               	btfss	(___almod@divisor+3)^0,7,c
  5940  006C34  EF1E  F036         	goto	u2111
  5941  006C38  EF20  F036         	goto	u2110
  5942  006C3C                     u2111:
  5943  006C3C  EF13  F036         	goto	l2427
  5944  006C40                     u2110:
  5945  006C40                     l2431:
  5946  006C40  501F               	movf	___almod@divisor^0,w,c
  5947  006C42  5C1B               	subwf	___almod@dividend^0,w,c
  5948  006C44  5020               	movf	(___almod@divisor+1)^0,w,c
  5949  006C46  581C               	subwfb	(___almod@dividend+1)^0,w,c
  5950  006C48  5021               	movf	(___almod@divisor+2)^0,w,c
  5951  006C4A  581D               	subwfb	(___almod@dividend+2)^0,w,c
  5952  006C4C  5022               	movf	(___almod@divisor+3)^0,w,c
  5953  006C4E  581E               	subwfb	(___almod@dividend+3)^0,w,c
  5954  006C50  A0D8               	btfss	status,0,c
  5955  006C52  EF2D  F036         	goto	u2121
  5956  006C56  EF2F  F036         	goto	u2120
  5957  006C5A                     u2121:
  5958  006C5A  EF37  F036         	goto	l2435
  5959  006C5E                     u2120:
  5960  006C5E  501F               	movf	___almod@divisor^0,w,c
  5961  006C60  5E1B               	subwf	___almod@dividend^0,f,c
  5962  006C62  5020               	movf	(___almod@divisor+1)^0,w,c
  5963  006C64  5A1C               	subwfb	(___almod@dividend+1)^0,f,c
  5964  006C66  5021               	movf	(___almod@divisor+2)^0,w,c
  5965  006C68  5A1D               	subwfb	(___almod@dividend+2)^0,f,c
  5966  006C6A  5022               	movf	(___almod@divisor+3)^0,w,c
  5967  006C6C  5A1E               	subwfb	(___almod@dividend+3)^0,f,c
  5968  006C6E                     l2435:
  5969  006C6E  90D8               	bcf	status,0,c
  5970  006C70  3222               	rrcf	(___almod@divisor+3)^0,f,c
  5971  006C72  3221               	rrcf	(___almod@divisor+2)^0,f,c
  5972  006C74  3220               	rrcf	(___almod@divisor+1)^0,f,c
  5973  006C76  321F               	rrcf	___almod@divisor^0,f,c
  5974  006C78  2E23               	decfsz	___almod@counter^0,f,c
  5975  006C7A  EF20  F036         	goto	l2431
  5976  006C7E                     l2439:
  5977  006C7E  5024               	movf	___almod@sign^0,w,c
  5978  006C80  B4D8               	btfsc	status,2,c
  5979  006C82  EF45  F036         	goto	u2131
  5980  006C86  EF47  F036         	goto	u2130
  5981  006C8A                     u2131:
  5982  006C8A  EF4F  F036         	goto	l2443
  5983  006C8E                     u2130:
  5984  006C8E  1E1E               	comf	(___almod@dividend+3)^0,f,c
  5985  006C90  1E1D               	comf	(___almod@dividend+2)^0,f,c
  5986  006C92  1E1C               	comf	(___almod@dividend+1)^0,f,c
  5987  006C94  6C1B               	negf	___almod@dividend^0,c
  5988  006C96  0E00               	movlw	0
  5989  006C98  221C               	addwfc	(___almod@dividend+1)^0,f,c
  5990  006C9A  221D               	addwfc	(___almod@dividend+2)^0,f,c
  5991  006C9C  221E               	addwfc	(___almod@dividend+3)^0,f,c
  5992  006C9E                     l2443:
  5993  006C9E  C01B  F01B         	movff	___almod@dividend,?___almod
  5994  006CA2  C01C  F01C         	movff	___almod@dividend+1,?___almod+1
  5995  006CA6  C01D  F01D         	movff	___almod@dividend+2,?___almod+2
  5996  006CAA  C01E  F01E         	movff	___almod@dividend+3,?___almod+3
  5997  006CAE  0012               	return		;funcret
  5998  006CB0                     __end_of___almod:
  5999                           	callstack 0
  6000                           
  6001 ;; *************** function _kpReadKey *****************
  6002 ;; Defined at:
  6003 ;;		line 17 in file "keypad.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;		None
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;  i               2    3[COMRAM] int 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  1    wreg      unsigned char 
  6010 ;; Registers used:
  6011 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6017 ;;      Params:         0       0       0       0       0       0       0
  6018 ;;      Locals:         2       0       0       0       0       0       0
  6019 ;;      Temps:          3       0       0       0       0       0       0
  6020 ;;      Totals:         5       0       0       0       0       0       0
  6021 ;;Total ram usage:        5 bytes
  6022 ;; Hardware stack levels used: 1
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_LeTeclado
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text36
  6031  0067CE                     __ptext36:
  6032                           	callstack 0
  6033  0067CE                     _kpReadKey:
  6034                           	callstack 29
  6035  0067CE                     
  6036                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  6037  0067CE  0E00               	movlw	0
  6038  0067D0  6E05               	movwf	(kpReadKey@i+1)^0,c
  6039  0067D2  0E00               	movlw	0
  6040  0067D4  6E04               	movwf	kpReadKey@i^0,c
  6041  0067D6                     l2543:
  6042                           
  6043                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  6044  0067D6  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  6045  0067DA  0E01               	movlw	1
  6046  0067DC  6E02               	movwf	(??_kpReadKey+1)^0,c
  6047  0067DE  0E00               	movlw	0
  6048  0067E0  6E03               	movwf	(??_kpReadKey+2)^0,c
  6049  0067E2  2A01               	incf	??_kpReadKey^0,f,c
  6050  0067E4  EFF7  F033         	goto	u2234
  6051  0067E8                     u2235:
  6052  0067E8  90D8               	bcf	status,0,c
  6053  0067EA  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  6054  0067EC  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  6055  0067EE                     u2234:
  6056  0067EE  2E01               	decfsz	??_kpReadKey^0,f,c
  6057  0067F0  EFF4  F033         	goto	u2235
  6058  0067F4  5057               	movf	_keys^0,w,c
  6059  0067F6  1602               	andwf	(??_kpReadKey+1)^0,f,c
  6060  0067F8  5058               	movf	(_keys+1)^0,w,c
  6061  0067FA  1603               	andwf	(??_kpReadKey+2)^0,f,c
  6062  0067FC  5002               	movf	(??_kpReadKey+1)^0,w,c
  6063  0067FE  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  6064  006800  B4D8               	btfsc	status,2,c
  6065  006802  EF05  F034         	goto	u2241
  6066  006806  EF07  F034         	goto	u2240
  6067  00680A                     u2241:
  6068  00680A  EF11  F034         	goto	l2549
  6069  00680E                     u2240:
  6070  00680E                     
  6071                           ;keypad.c: 21:    return charKey[i];
  6072  00680E  0ED7               	movlw	low _charKey
  6073  006810  2404               	addwf	kpReadKey@i^0,w,c
  6074  006812  6EF6               	movwf	tblptrl,c
  6075  006814  0E7E               	movlw	high _charKey
  6076  006816  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  6077  006818  6EF7               	movwf	tblptrh,c
  6078  00681A                     	if	0	;There are less than 3 active tblptr bytes
  6079  00681A                     	endif
  6080  00681A  0008               	tblrd		*
  6081  00681C  50F5               	movf	tablat,w,c
  6082  00681E  EF22  F034         	goto	l188
  6083  006822                     l2549:
  6084                           
  6085                           ;keypad.c: 23:  }
  6086  006822  4A04               	infsnz	kpReadKey@i^0,f,c
  6087  006824  2A05               	incf	(kpReadKey@i+1)^0,f,c
  6088  006826  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  6089  006828  EF1F  F034         	goto	u2251
  6090  00682C  5005               	movf	(kpReadKey@i+1)^0,w,c
  6091  00682E  E109               	bnz	u2250
  6092  006830  0E0A               	movlw	10
  6093  006832  5C04               	subwf	kpReadKey@i^0,w,c
  6094  006834  A0D8               	btfss	status,0,c
  6095  006836  EF1F  F034         	goto	u2251
  6096  00683A  EF21  F034         	goto	u2250
  6097  00683E                     u2251:
  6098  00683E  EFEB  F033         	goto	l2543
  6099  006842                     u2250:
  6100  006842                     
  6101                           ;keypad.c: 25:  return 0;
  6102  006842  0E00               	movlw	0
  6103  006844                     l188:
  6104  006844  0012               	return		;funcret
  6105  006846                     __end_of_kpReadKey:
  6106                           	callstack 0
  6107                           
  6108 ;; *************** function _kpRead *****************
  6109 ;; Defined at:
  6110 ;;		line 14 in file "keypad.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  2    0[COMRAM] unsigned int 
  6117 ;; Registers used:
  6118 ;;		None
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6124 ;;      Params:         2       0       0       0       0       0       0
  6125 ;;      Locals:         0       0       0       0       0       0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0
  6127 ;;      Totals:         2       0       0       0       0       0       0
  6128 ;;Total ram usage:        2 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; This function calls:
  6131 ;;		Nothing
  6132 ;; This function is called by:
  6133 ;;		_LeTeclado
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           	psect	text37
  6138  006292                     __ptext37:
  6139                           	callstack 0
  6140  006292                     _kpRead:
  6141                           	callstack 29
  6142  006292                     
  6143                           ;keypad.c: 15:     return keys;
  6144  006292  C057  F001         	movff	_keys,?_kpRead
  6145  006296  C058  F002         	movff	_keys+1,?_kpRead+1
  6146  00629A  0012               	return		;funcret
  6147  00629C                     __end_of_kpRead:
  6148                           	callstack 0
  6149                           
  6150 ;; *************** function _ConfiguraLed *****************
  6151 ;; Defined at:
  6152 ;;		line 10 in file "led.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;		None
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      void 
  6159 ;; Registers used:
  6160 ;;		wreg, status,2
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6166 ;;      Params:         0       0       0       0       0       0       0
  6167 ;;      Locals:         0       0       0       0       0       0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0
  6169 ;;      Totals:         0       0       0       0       0       0       0
  6170 ;;Total ram usage:        0 bytes
  6171 ;; Hardware stack levels used: 1
  6172 ;; This function calls:
  6173 ;;		Nothing
  6174 ;; This function is called by:
  6175 ;;		_main
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text38
  6180  006288                     __ptext38:
  6181                           	callstack 0
  6182  006288                     _ConfiguraLed:
  6183                           	callstack 30
  6184  006288                     
  6185                           ;led.c: 11:     (*(volatile __near unsigned char*) 0xF95) = 0x00;
  6186  006288  0E00               	movlw	0
  6187  00628A  6E95               	movwf	149,c	;volatile
  6188                           
  6189                           ;led.c: 12:     (*(volatile __near unsigned char*) 0xF83) = 0x00;
  6190  00628C  0E00               	movlw	0
  6191  00628E  6E83               	movwf	131,c	;volatile
  6192  006290  0012               	return		;funcret
  6193  006292                     __end_of_ConfiguraLed:
  6194                           	callstack 0
  6195                           
  6196                           	psect	rparam
  6197  0000                     
  6198                           	psect	idloc
  6199                           
  6200                           ;Config register IDLOC0 @ 0x200000
  6201                           ;	unspecified, using default values
  6202  200000                     	org	2097152
  6203  200000  FF                 	db	255
  6204                           
  6205                           ;Config register IDLOC1 @ 0x200001
  6206                           ;	unspecified, using default values
  6207  200001                     	org	2097153
  6208  200001  FF                 	db	255
  6209                           
  6210                           ;Config register IDLOC2 @ 0x200002
  6211                           ;	unspecified, using default values
  6212  200002                     	org	2097154
  6213  200002  FF                 	db	255
  6214                           
  6215                           ;Config register IDLOC3 @ 0x200003
  6216                           ;	unspecified, using default values
  6217  200003                     	org	2097155
  6218  200003  FF                 	db	255
  6219                           
  6220                           ;Config register IDLOC4 @ 0x200004
  6221                           ;	unspecified, using default values
  6222  200004                     	org	2097156
  6223  200004  FF                 	db	255
  6224                           
  6225                           ;Config register IDLOC5 @ 0x200005
  6226                           ;	unspecified, using default values
  6227  200005                     	org	2097157
  6228  200005  FF                 	db	255
  6229                           
  6230                           ;Config register IDLOC6 @ 0x200006
  6231                           ;	unspecified, using default values
  6232  200006                     	org	2097158
  6233  200006  FF                 	db	255
  6234                           
  6235                           ;Config register IDLOC7 @ 0x200007
  6236                           ;	unspecified, using default values
  6237  200007                     	org	2097159
  6238  200007  FF                 	db	255
  6239                           
  6240                           	psect	config
  6241                           
  6242                           ; Padding undefined space
  6243  300000                     	org	3145728
  6244  300000  FF                 	db	255
  6245                           
  6246                           ;Config register CONFIG1H @ 0x300001
  6247                           ;	unspecified, using default values
  6248                           ;	Oscillator Selection bits
  6249                           ;	OSC = 0x7, unprogrammed default
  6250                           ;	Fail-Safe Clock Monitor Enable bit
  6251                           ;	FCMEN = 0x0, unprogrammed default
  6252                           ;	Internal/External Oscillator Switchover bit
  6253                           ;	IESO = 0x0, unprogrammed default
  6254  300001                     	org	3145729
  6255  300001  07                 	db	7
  6256                           
  6257                           ;Config register CONFIG2L @ 0x300002
  6258                           ;	unspecified, using default values
  6259                           ;	Power-up Timer Enable bit
  6260                           ;	PWRT = 0x1, unprogrammed default
  6261                           ;	Brown-out Reset Enable bits
  6262                           ;	BOREN = 0x3, unprogrammed default
  6263                           ;	Brown Out Reset Voltage bits
  6264                           ;	BORV = 0x3, unprogrammed default
  6265  300002                     	org	3145730
  6266  300002  1F                 	db	31
  6267                           
  6268                           ;Config register CONFIG2H @ 0x300003
  6269                           ;	unspecified, using default values
  6270                           ;	Watchdog Timer Enable bit
  6271                           ;	WDT = 0x1, unprogrammed default
  6272                           ;	Watchdog Timer Postscale Select bits
  6273                           ;	WDTPS = 0xF, unprogrammed default
  6274  300003                     	org	3145731
  6275  300003  1F                 	db	31
  6276                           
  6277                           ; Padding undefined space
  6278  300004                     	org	3145732
  6279  300004  FF                 	db	255
  6280                           
  6281                           ;Config register CONFIG3H @ 0x300005
  6282                           ;	unspecified, using default values
  6283                           ;	CCP2 MUX bit
  6284                           ;	CCP2MX = 0x1, unprogrammed default
  6285                           ;	PORTB A/D Enable bit
  6286                           ;	PBADEN = 0x1, unprogrammed default
  6287                           ;	Low-Power Timer1 Oscillator Enable bit
  6288                           ;	LPT1OSC = 0x0, unprogrammed default
  6289                           ;	MCLR Pin Enable bit
  6290                           ;	MCLRE = 0x1, unprogrammed default
  6291  300005                     	org	3145733
  6292  300005  83                 	db	131
  6293                           
  6294                           ;Config register CONFIG4L @ 0x300006
  6295                           ;	unspecified, using default values
  6296                           ;	Stack Full/Underflow Reset Enable bit
  6297                           ;	STVREN = 0x1, unprogrammed default
  6298                           ;	Single-Supply ICSP Enable bit
  6299                           ;	LVP = 0x1, unprogrammed default
  6300                           ;	Extended Instruction Set Enable bit
  6301                           ;	XINST = 0x0, unprogrammed default
  6302                           ;	Background Debugger Enable bit
  6303                           ;	DEBUG = 0x1, unprogrammed default
  6304  300006                     	org	3145734
  6305  300006  85                 	db	133
  6306                           
  6307                           ; Padding undefined space
  6308  300007                     	org	3145735
  6309  300007  FF                 	db	255
  6310                           
  6311                           ;Config register CONFIG5L @ 0x300008
  6312                           ;	unspecified, using default values
  6313                           ;	Code Protection bit
  6314                           ;	CP0 = 0x1, unprogrammed default
  6315                           ;	Code Protection bit
  6316                           ;	CP1 = 0x1, unprogrammed default
  6317                           ;	Code Protection bit
  6318                           ;	CP2 = 0x1, unprogrammed default
  6319                           ;	Code Protection bit
  6320                           ;	CP3 = 0x1, unprogrammed default
  6321  300008                     	org	3145736
  6322  300008  0F                 	db	15
  6323                           
  6324                           ;Config register CONFIG5H @ 0x300009
  6325                           ;	unspecified, using default values
  6326                           ;	Boot Block Code Protection bit
  6327                           ;	CPB = 0x1, unprogrammed default
  6328                           ;	Data EEPROM Code Protection bit
  6329                           ;	CPD = 0x1, unprogrammed default
  6330  300009                     	org	3145737
  6331  300009  C0                 	db	192
  6332                           
  6333                           ;Config register CONFIG6L @ 0x30000A
  6334                           ;	unspecified, using default values
  6335                           ;	Write Protection bit
  6336                           ;	WRT0 = 0x1, unprogrammed default
  6337                           ;	Write Protection bit
  6338                           ;	WRT1 = 0x1, unprogrammed default
  6339                           ;	Write Protection bit
  6340                           ;	WRT2 = 0x1, unprogrammed default
  6341                           ;	Write Protection bit
  6342                           ;	WRT3 = 0x1, unprogrammed default
  6343  30000A                     	org	3145738
  6344  30000A  0F                 	db	15
  6345                           
  6346                           ;Config register CONFIG6H @ 0x30000B
  6347                           ;	unspecified, using default values
  6348                           ;	Configuration Register Write Protection bit
  6349                           ;	WRTC = 0x1, unprogrammed default
  6350                           ;	Boot Block Write Protection bit
  6351                           ;	WRTB = 0x1, unprogrammed default
  6352                           ;	Data EEPROM Write Protection bit
  6353                           ;	WRTD = 0x1, unprogrammed default
  6354  30000B                     	org	3145739
  6355  30000B  E0                 	db	224
  6356                           
  6357                           ;Config register CONFIG7L @ 0x30000C
  6358                           ;	unspecified, using default values
  6359                           ;	Table Read Protection bit
  6360                           ;	EBTR0 = 0x1, unprogrammed default
  6361                           ;	Table Read Protection bit
  6362                           ;	EBTR1 = 0x1, unprogrammed default
  6363                           ;	Table Read Protection bit
  6364                           ;	EBTR2 = 0x1, unprogrammed default
  6365                           ;	Table Read Protection bit
  6366                           ;	EBTR3 = 0x1, unprogrammed default
  6367  30000C                     	org	3145740
  6368  30000C  0F                 	db	15
  6369                           
  6370                           ;Config register CONFIG7H @ 0x30000D
  6371                           ;	unspecified, using default values
  6372                           ;	Boot Block Table Read Protection bit
  6373                           ;	EBTRB = 0x1, unprogrammed default
  6374  30000D                     	org	3145741
  6375  30000D  40                 	db	64
  6376                           tosu	equ	0xFFF
  6377                           tosh	equ	0xFFE
  6378                           tosl	equ	0xFFD
  6379                           stkptr	equ	0xFFC
  6380                           pclatu	equ	0xFFB
  6381                           pclath	equ	0xFFA
  6382                           pcl	equ	0xFF9
  6383                           tblptru	equ	0xFF8
  6384                           tblptrh	equ	0xFF7
  6385                           tblptrl	equ	0xFF6
  6386                           tablat	equ	0xFF5
  6387                           prodh	equ	0xFF4
  6388                           prodl	equ	0xFF3
  6389                           indf0	equ	0xFEF
  6390                           postinc0	equ	0xFEE
  6391                           postdec0	equ	0xFED
  6392                           preinc0	equ	0xFEC
  6393                           plusw0	equ	0xFEB
  6394                           fsr0h	equ	0xFEA
  6395                           fsr0l	equ	0xFE9
  6396                           wreg	equ	0xFE8
  6397                           indf1	equ	0xFE7
  6398                           postinc1	equ	0xFE6
  6399                           postdec1	equ	0xFE5
  6400                           preinc1	equ	0xFE4
  6401                           plusw1	equ	0xFE3
  6402                           fsr1h	equ	0xFE2
  6403                           fsr1l	equ	0xFE1
  6404                           bsr	equ	0xFE0
  6405                           indf2	equ	0xFDF
  6406                           postinc2	equ	0xFDE
  6407                           postdec2	equ	0xFDD
  6408                           preinc2	equ	0xFDC
  6409                           plusw2	equ	0xFDB
  6410                           fsr2h	equ	0xFDA
  6411                           fsr2l	equ	0xFD9
  6412                           status	equ	0xFD8

Data Sizes:
    Strings     285
    Constant    26
    Data        24
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     62     122
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 18
		 -> STR_23(CODE[14]), STR_22(CODE[14]), STR_21(CODE[16]), STR_20(CODE[18]), 
		 -> STR_19(CODE[13]), STR_18(CODE[16]), STR_17(CODE[16]), STR_16(CODE[16]), 
		 -> STR_15(CODE[17]), STR_14(CODE[16]), STR_13(CODE[17]), STR_12(CODE[16]), 
		 -> STR_11(CODE[12]), STR_10(CODE[16]), STR_9(CODE[13]), STR_7(CODE[7]), 
		 -> STR_6(CODE[7]), STR_5(CODE[9]), STR_4(CODE[12]), STR_3(CODE[9]), 
		 -> STR_2(CODE[12]), STR_1(CODE[18]), 


Critical Paths under _main in COMRAM

    _ssdInit->_pinMode
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _adcInit->_pinMode
    _SetaMeta->_lcdString
    _LeTeclado->_operate
    _operate->_ssdDigit
    _verifyGoal->___aldiv
    _lcdString->_lcdChar
    _lcdNumber->___awmod
    _lcdNumber->_lcdChar
    _lcdChar->_pushByte
    ___awmod->___awdiv
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    ___aldiv->___lmul
    _ssdUpdate->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _ssdDigit->___almod
    ___almod->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0  300729
                                             51 COMRAM    11    11      0
                       _ConfiguraLed
                          _LeTeclado
                           _SetaMeta
                            ___aldiv
                            ___almod
                            _adcInit
                         _kpDebounce
                             _kpInit
                            _lcdInit
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   42412
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   18141
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   11233
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2568
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SetaMeta                                             2     2      0   58642
                                             20 COMRAM     2     2      0
                        _DesligarLed
                            _adcRead
                         _lcdCommand
                          _lcdNumber
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _adcRead                                              4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _DesligarLed                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LeTeclado                                            0     0      0  156876
                             _kpRead
                          _kpReadKey
                            _operate
 ---------------------------------------------------------------------------------
 (2) _operate                                             13    13      0  156786
                                             38 COMRAM    13    13      0
                            ___aldiv
                            ___almod
                         _lcdCommand
                          _lcdNumber
                          _lcdString
                           _ssdDigit
                          _ssdUpdate
                         _verifyGoal
 ---------------------------------------------------------------------------------
 (3) _verifyGoal                                           7     7      0   79612
                                             26 COMRAM     7     7      0
                           _LigarLed
                            ___aldiv
                             ___lmul
                            _lcdChar
                         _lcdCommand
                          _lcdNumber
                          _lcdString
 ---------------------------------------------------------------------------------
 (2) _lcdString                                            6     4      2   20197
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdNumber                                            4     2      2   19805
                                             14 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (3) _lcdChar                                              1     1      0   18435
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   18405
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   18033
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _pulseEnablePin                                       0     0      0    3712
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     522
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8    1972
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _LigarLed                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   14081
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   10749
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    3332
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     784
                                             36 COMRAM     2     1      1
                            ___aldiv (ARG)
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___almod                                             10     2      8    1816
                                             26 COMRAM    10     2      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      90
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLed                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiguraLed
   _LeTeclado
     _kpRead
     _kpReadKey
     _operate
       ___aldiv
         ___lmul (ARG)
       ___almod
         ___aldiv (ARG)
       _lcdCommand
         _delayMili
         _pushByte
           _digitalWrite
           _pulseEnablePin
             _delayMicro
             _digitalWrite
           _soWrite
             _PulseClockData
               _digitalWrite
             _PulseEnClock
               _digitalWrite
             _digitalWrite
       _lcdNumber
         ___awdiv
         ___awmod
           ___awdiv (ARG)
         _lcdChar
           _delayMicro
           _pushByte
       _lcdString
         _lcdChar
       _ssdDigit
         ___aldiv (ARG)
         ___almod (ARG)
       _ssdUpdate
         _digitalWrite
         _soWrite
       _verifyGoal
         _LigarLed
         ___aldiv
         ___lmul
         _lcdChar
         _lcdCommand
         _lcdNumber
         _lcdString
   _SetaMeta
     _DesligarLed
     _adcRead
     _lcdCommand
     _lcdNumber
     _lcdString
   ___aldiv
   ___almod
   _adcInit
     _pinMode
   _kpDebounce
     _digitalRead
     _soWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _ssdDigit
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     3E      7A       1       96.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7A      15        0.0%
DATA                 0      0      7A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 23:20:31 2021

         _pulseEnablePin 646A             lcdString@msg 000F                       l72 7B48  
                     l81 7E32                       l90 7EC4                       l66 7AC2  
                     l77 7BAA                       l96 68D2                       l98 68E8  
           ___awdiv@sign 0006                       _v0 005E                       _v1 005D  
                     _v2 005C                       _v3 005B                      l104 6A4A  
                    l202 6ED8                      l204 6EF0                      l109 73A2  
                    l125 73DC                      l230 633E                      l207 63F4  
                    l224 63C2                      l233 66EE                      l218 6286  
                    l250 65E6                      l162 6566                      l411 6368  
                    l227 64AA                      l236 62FA                      l244 6318  
                    l164 6574                      l165 6590                      l405 6468  
                    l182 629A                      l158 64F2                      l431 6290  
                    l408 6392                      l416 6540                      l256 67CC  
                    l434 62AE                      l259 6AFE                      l188 6844  
                    l364 786C           DesligarLed@num 0001                      l437 62C4  
                    l373 7056                      l286 6694                      l551 6DBA  
                    l703 6BC2                      l296 71C6                      l368 705A  
                    l369 7056                      l483 6748                      l299 663C  
                    l564 6CAE                      l484 6758                      l716 6998  
                    l398 7ABA                      _led 0063             ___awmod@sign 000E  
                    wreg 000FE8      __end_of_DesligarLed 62C6                     l2101 6698  
                   l2111 63A4                     l2103 62FE                     l2041 7690  
                   l2033 7620                     l2121 6B1E                     l2113 6B00  
                   l2105 630C                     l2201 65BE                     l2051 7724  
                   l2043 76AC                     l2035 763C                     l2211 66F0  
                   l2107 6394                     l2131 6B52                     l2123 6B2C  
                   l2115 6B04                     l2203 675A                     l2061 77B6  
                   l2053 773E                     l2045 76C6                     l2037 764E  
                   l2301 7158                     l2221 6CB0                     l2213 6700  
                   l2109 63A0                     l2141 6B8C                     l2133 6B5A  
                   l2125 6B34                     l2117 6B12                     l2205 6766  
                   l2071 784E                     l2063 77D6                     l2055 775E  
                   l2047 76E6                     l2039 766E                     l2303 7170  
                   l2311 718C                     l2231 6CE4                     l2223 6CB4  
                   l2215 670E                     l2151 6BB2                     l2143 6B94  
                   l2135 6B62                     l2127 6B38                     l2119 6B1A  
                   l2207 67B2                     l2065 77F8                     l2057 7780  
                   l2049 7708                     l2073 636A                     l2305 7184  
                   l2209 629E                     l2241 6D26                     l2233 6CF4  
                   l2225 6CC2                     l2217 671E                     l2153 6BBA  
                   l2145 6B96                     l2137 6B70                     l2129 6B40  
                   l2161 68FC                     l2321 7252                     l2401 7A20  
                   l2411 6BC4                     l2067 7814                     l2059 779C  
                   l2075 6340                     l2091 652C                     l2251 6D78  
                   l2243 6D32                     l2235 6CF8                     l2227 6CD2  
                   l2219 6728                     l2147 6B9C                     l2139 6B76  
                   l2171 6930                     l2163 6904                     l2331 728C  
                   l2323 7252                     l2403 7A46                     l2421 6BF8  
                   l2413 6BC8                     l2069 782E                     l2093 653C  
                   l2085 650C                     l2077 64F4                     l2261 6DAA  
                   l2253 6D7A                     l2245 6D40                     l2237 6D08  
                   l2229 6CD6                     l2149 6BA2                     l2181 696C  
                   l2173 6938                     l2165 6908                     l2157 68EA  
                   l2341 72E8                     l2333 7298                     l2325 7258  
                   l2317 71C8                     l2501 7DEA                     l2405 7A62  
                   l2431 6C40                     l2423 6C08                     l2415 6BD6  
                   l2271 6664                     l2087 6524                     l2079 6508  
                   l2255 6D84                     l2247 6D4A                     l2239 6D1E  
                   l2095 646A                     l2183 6972                     l2175 6940  
                   l2167 6916                     l2159 68EE                     l2351 733E  
                   l2343 7304                     l2335 72B4                     l2327 7264  
                   l2319 71DE                     l2511 7E02                     l2503 7DF6  
                   l2407 7A74                     l2441 6C8E                     l2433 6C5E  
                   l2425 6C1E                     l2417 6BE6                     l2273 6668  
                   l2265 6640                     l2089 652A                     l2281 705C  
                   l2249 6D68                     l2257 6D8A                     l2097 647E  
                   l2193 62E0                     l2177 694E                     l2185 6978  
                   l2169 691E                     l2361 739A                     l2353 734A  
                   l2345 730A                     l2337 72C0                     l2329 7270  
                   l2521 7E64                     l2513 7E06                     l2505 7DFA  
                   l2409 7A98                     l2443 6C9E                     l2435 6C6E  
                   l2427 6C26                     l2419 6BEA                     l2275 667A  
                   l2267 6650                     l2291 7108                     l2283 70BC  
                   l2259 6D9A                     l2099 648A                     l2187 6988  
                   l2179 6964                     l2195 6592                     l2363 73AE  
                   l2355 7366                     l2347 7316                     l2339 72DC  
                   l2523 7E6A                     l2515 7E22                     l2451 7ADC  
                   l2371 786E                     l2611 642C                     l2437 6C78  
                   l2429 6C32                     l2277 667E                     l2269 6654  
                   l2293 711C                     l2285 70D4                     l2189 6990  
                   l2197 659E                     l2365 73B4                     l2357 7372  
                   l2349 7322                     l2525 7E72                     l2517 7E50  
                   l2461 7B34                     l2453 7AF0                     l2621 6874  
                   l2381 78FA                     l2373 788A                     l2605 700E  
                   l2701 6E38                     l2613 631C                     l2535 6292  
                   l2551 6826                     l2543 67D6                     l2439 6C7E  
                   l2279 6690                     l2295 7124                     l2287 70E8  
                   l2199 65BA                     l2367 73BA                     l2359 738E  
                   l2519 7E5C                     l2463 7B56                     l2455 7B08  
                   l2447 7ABE                     l2631 68E2                     l2623 6882  
                   l2615 6846                     l2391 7984                     l2383 790C  
                   l2375 789C                     l2607 702A                     l2703 6E5E  
                   l2711 6EAE                     l2553 6842                     l2545 680E  
                   l2537 67CE                     l2297 713C                     l2289 70F0  
                   l2369 73BE                     l2481 7BCE                     l2473 7B96  
                   l2457 7B14                     l2449 7AD0                     l2529 7E82  
                   l2625 6896                     l2617 6862                     l2561 6564  
                   l2641 69F2                     l2633 699A                     l2393 79A8  
                   l2385 7930                     l2377 78BC                     l2713 6EC6  
                   l2705 6E7C                     l2721 73DE                     l2299 7150  
                   l2491 7C08                     l2483 7BE4                     l2467 7B6A  
                   l2459 7B28                     l2627 68AE                     l2619 686E  
                   l2571 62B2                     l2563 657A                     l2643 69FE  
                   l2635 69B8                     l2395 79CE                     l2387 7956  
                   l2379 78DE                     l2715 6ECC                     l2707 6EA6  
                   l2723 73EA                     l2549 6822                     l2493 7C14  
                   l2485 7BEA                     l2477 7BB8                     l2469 7B82  
                   l2629 68BE                     l2565 6580                     l2557 6542  
                   l2645 6A04                     l2637 69DC                     l2397 79EA  
                   l2389 7972                     l2581 6F36                     l2573 6EF2  
                   l2717 6ED0                     l2661 6A4C                     l2741 7422  
                   l2733 7402                     l2725 73EE                     l2495 7C1C  
                   l2487 7BF6                     l2479 7BBE                     l2567 6588  
                   l2559 655C                     l2655 6A24                     l2647 6A10  
                   l2639 69EC                     l2399 79FC                     l2591 6F9A  
                   l2583 6F52                     l2575 6F0E                     l2719 6EE8  
                   l2671 6AEC                     l2663 6AAC                     l2751 7614  
                   l2735 7406                     l2727 73F6                     l2841 7E96  
                   l2497 7DCC                     l2489 7BFC                     l2657 6A2A  
                   l2649 6A1C                     l2673 6AF2                     l2665 6AB8  
                   l2681 65E8                     l2737 740E                     l2729 73FA  
                   l2683 6288                     l2843 71A0                     l2499 7DDA  
                   l2659 6A2E                     l2691 64EE                     l2675 6AF8  
                   l2667 6AD2                     l2739 741E                     l2747 742A  
                   l2685 64AC                     l2597 6FC6                     l2589 6F7E  
                   l2693 6DBC                     l2677 63C4                     l2669 6AE0  
                   l2749 7464                     l2687 64E8                     l2599 6FE2  
                   l2695 6DCC                     l2679 63F0                     l2839 743E  
                   l2689 64EA                     l2699 6DEC                     STR_1 7EE1  
                   STR_2 7FCD                     STR_3 7FE5                     STR_4 7FCD  
                   STR_5 7FE5                     STR_6 7FF5                     STR_7 7FEE  
                   STR_8 7FFC                     STR_9 7FC0                     u2000 79EA  
                   u2001 79E6                     u2010 79FC                     u2011 79F8  
                   u2100 6C1E                     u2101 6C1A                     u2110 6C40  
                   u1310 763C                     u2111 6C3C                     u1311 7638  
                   u2120 6C5E                     u1400 773E                     u1320 764E  
                   u2200 7DDA                     u2040 7A62                     u2024 7A12  
                   u2121 6C5A                     u1401 773A                     u1321 764A  
                   u2201 7DD6                     u2041 7A5E                     u2025 7A0E  
                   u2130 6C8E                     u2210 7E22                     u2050 7A74  
                   u2034 7A36                     u2131 6C8A                     u2211 7E1E  
                   u2051 7A70                     u2035 7A32                     u2220 7E50  
                   u2140 7AD0                     u2300 6F52                     u2221 7E4C  
                   u2141 7ACC                     u2301 6F4E                     u1430 779C  
                   u1414 7750                     u1350 76AC                     u1334 7660  
                   u1510 653C                     u2150 7B08                     u1431 7798  
                   u1415 774C                     u1351 76A8                     u1335 765C  
                   u1511 6538                     u2151 7B04                     u2240 680E  
                   u2080 6BD6                     u1504 7860                     u1440 77B6  
                   u1424 7770                     u1360 76C6                     u1344 7680  
                   u1520 63C2                     u1600 6916                     u2160 7B56  
                   u2400 68AE                     u2064 7A8A                     u2320 6F9A  
                   u2241 680A                     u2081 6BD2                     u1505 785C  
                   u1441 77B2                     u1425 776C                     u1361 76C2  
                   u1345 767C                     u1521 63BE                     u1601 6912  
                   u2161 7B52                     u2401 68AA                     u2065 7A86  
                   u2321 6F96                     u2250 6842                     u2234 67EE  
                   u2090 6BF8                     u1530 6B12                     u1610 6930  
                   u2170 7B82                     u2410 69DC                     u2074 7AAE  
                   u2314 6F68                     u2251 683E                     u2235 67E8  
                   u2091 6BF4                     u1531 6B0E                     u1611 692C  
                   u2171 7B7E                     u2411 69D8                     u2075 7AAA  
                   u2315 6F64                     u1700 6CE4                     u1540 6B2C  
                   u1620 694E                     u2180 7BB8                     u2260 655C  
                   u2420 6A4A                     u2340 6FE2                     u2500 6EE8  
                   u1701 6CE0                     u1541 6B28                     u1621 694A  
                   u2181 7BB4                     u2261 6558                     u2421 6A46  
                   u2341 6FDE                     u2501 6EE4                     u1470 7814  
                   u1454 77C8                     u1390 7724                     u1374 76D8  
                   u1710 6D1E                     u1550 6B52                     u1630 6964  
                   u2190 7BE4                     u2270 6574                     u2334 6FB0  
                   u2430 6DE8                     u2510 741E                     u1471 7810  
                   u1455 77C4                     u1391 7720                     u1375 76D4  
                   u1711 6D1A                     u1551 6B4E                     u1631 6960  
                   u2191 7BE0                     u2271 6570                     u2335 6FAC  
                   u2431 6DE4                     u2511 741A                     u1480 782E  
                   u1464 77E8                     u1384 76F8                     u1720 6D40  
                   u1560 6B70                     u1640 6988                     u1800 728C  
                   u2360 702A                     u2280 6F0E                     u1481 782A  
                   u1465 77E4                     u1385 76F4                     u1721 6D3C  
                   u1561 6B6C                     u1641 6984                     u1801 7288  
                   u2361 7026                     u2281 6F0A                     u1730 6D68  
                   u1570 6B8C                     u1650 65E6                     u1810 72B4  
                   u2354 6FF8                     u2450 6E38                     u1731 6D64  
                   u1571 6B88                     u1651 65E2                     u1811 72B0  
                   u2355 6FF4                     u2451 6E34                     u1740 6D9A  
                   u1580 6BB2                     u1660 67CC                     u1820 72DC  
                   u2380 6862                     u2444 6E08                     u1741 6D96  
                   u1581 6BAE                     u1661 67C8                     u1821 72D8  
                   u2381 685E                     u2445 6E02                     u1750 6650  
                   u1494 7840                     u1670 670E                     u1590 68FC  
                   u1830 7304                     u2390 6882                     u2374 7040  
                   u2294 6F20                     u2470 6E7C                     u1751 664C  
                   u1495 783C                     u1671 670A                     u1591 68F8  
                   u1831 7300                     u2391 687E                     u2375 703C  
                   u2295 6F1C                     u2471 6E78                     u1760 6664  
                   u1680 6748                     u1840 733E                     u1920 78FA  
                   u1904 78AE                     u2464 6E50                     u1761 6660  
                   u1681 6744                     u1841 733A                     u1921 78F6  
                   u1905 78AA                     u2465 6E4A                     u1770 667A  
                   u1690 6CC2                     u1850 7366                     u1930 790C  
                   u1914 78CE                     u2490 6EC6                     u1771 6676  
                   u1691 6CBE                     u1851 7362                     u1931 7908  
                   u1915 78CA                     u2491 6EC2                     u1780 6690  
                   u1860 738E                     u2484 6E98                     u1781 668C  
                   u1861 738A                     u2485 6E92                     u1870 73DC  
                   u1790 71DE                     u1871 73D8                     u1791 71DA  
                   u1960 7972                     u1944 7922                     u1880 788A  
                   u1961 796E                     u1945 791E                     u1881 7886  
                   u1970 7984                     u1954 7946                     u1890 789C  
                   u1971 7980                     u1955 7942                     u1891 7898  
                   u1984 799A                     u1985 7996                     u1994 79BE  
                   u1995 79BA                     _PIR1 000F9E                     _main 73DE  
                   _keys 0057         ??_PulseClockData 0007                     _time 004F  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
            LigarLed@num 0001                     start 0000          pushNibble@value 000C  
           _totalStudied 004B             ___param_bank 000000   __end_of_pulseEnablePin 64AC  
        __end_of___aldiv 6DBC          __end_of___almod 6CB0                    ?_main 0001  
        __end_of_adcInit 64F4          __end_of_adcRead 6592          __end_of___awdiv 6BC4  
                  STR_10 7F27                    STR_11 7FD9                    STR_12 7F67  
                  STR_20 7EF3                    STR_21 7F47                    STR_13 7F05  
                  STR_22 7F97                    STR_14 7F37                    STR_23 7FA5  
                  STR_15 7F16                    STR_16 7F57                    STR_17 7F87  
                  STR_18 7F77                    STR_19 7FB3          __end_of___awmod 699A  
                  _T0CON 000FD5          ___awdiv@divisor 0003          ___awdiv@counter 0005  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _SPBRG 000FAF                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 7EE1                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD                    _TXSTA 000FAC  
        __end_of_lcdChar 631A      ___lmul@multiplicand 0005          __end_of_lcdInit 6B00  
                  _tecla 0062                    _reset 006B          __end_of_pinMode 7ABC  
                  _valor 7EC7          __end_of_operate 7EC6          __end_of_soWrite 6542  
                  tablat 000FF5          __end_of_ssdInit 663E                    status 000FD8  
           pushNibble@rs 000A     __end_of_digitalWrite 786E          __initialization 63F6  
        ?_pulseEnablePin 0001             __end_of_main 7620         __end_of_LigarLed 62B0  
                 ??_main 0034       __size_of_LeTeclado 00A4     __end_of_ConfiguraLed 6292  
            _DesligarLed 62B0         __end_of_SetaMeta 6A4C            __activetblptr 000002  
   __size_of_digitalRead 016A                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001                   _INTCON 000FF2                   _SPBRGH 000FB0  
                 ___lmul 66F0                ??___aldiv 0015                ??___almod 0023  
              ??_adcInit 0007                ??_adcRead 0003                ??___awdiv 0005  
              ??___awmod 000D                   _enable 0061                   _kpInit 63C4  
                 _kpRead 6292                   clear_0 641C                   _soInit 642C  
       ___awdiv@quotient 0007          ___awmod@divisor 000B                ??_lcdChar 000E  
                 isa$std 000001                ??_lcdInit 000F          ___awmod@counter 000D  
       __end_of_ssdDigit 6696             __pdataCOMRAM 0063                ??_pinMode 0005  
           __mediumconst 7EC6                   tblptrh 000FF7                   tblptrl 000FF6  
              ??_operate 0027                   tblptru 000FF8                ??_soWrite 0009  
              ??_ssdInit 0007         __end_of_pushByte 66F0               __accesstop 0080  
__end_of__initialization 6422        __end_of_LeTeclado 68EA            ___rparam_used 000001  
          pushByte@value 000D              pinMode@type 0003           __pcstackCOMRAM 0001  
          __end_of_valor 7ED7       __size_of_delayMili 0030       __size_of_lcdNumber 0074  
     __size_of_lcdString 0056       __size_of_kpReadKey 0078                ?_LigarLed 0001  
  __size_of_digitalWrite 024E               _delayMicro 6286                ?_SetaMeta 0001  
                ?___lmul 0001               _lcdCommand 62DE    __size_of_ConfiguraLed 000A  
                ?_kpInit 0001                  ?_kpRead 0001                  _BAUDCON 000FB8  
         ___lmul@product 0009                  ?_soInit 0001               _kpDebounce 6DBC  
     __size_of_ssdUpdate 016C             _digitalWrite 7620               ??_LigarLed 0001  
      __end_of_delayMili 63C4         ??_pulseEnablePin 0007             _ConfiguraLed 6288  
             ??_SetaMeta 0015                  __Hparam 0000        __end_of_lcdNumber 67CE  
                __Lparam 0000                ?_ssdDigit 0025        __end_of_lcdString 65E8  
         verifyGoal@test 0020          kpDebounce@tempo 0060                  ___aldiv 6CB0  
      __end_of_kpReadKey 6846                  ___almod 6BC4                  _adcInit 64AC  
                _adcRead 6542                  ___awdiv 6B00          __size_of___lmul 006A  
                ___awmod 68EA                ?_pushByte 000A          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 7ED7              ssdDigit@val 0026  
            ssdDigit@pos 0025                  __pcinit 63F6                  _lcdChar 62FC  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 6A4C  
                __ptext0 73DE                  __ptext1 65E8                  __ptext2 6A4C  
                __ptext3 631A                  __ptext4 63C4                  __ptext5 642C  
                __ptext6 6DBC                  __ptext7 6EF2                  __ptext8 64AC  
                __ptext9 786E             ?_DesligarLed 0001                  _display 005F  
                _pinMode 786E         ___awmod@dividend 0009         ___aldiv@dividend 000D  
             delayMili@a 0001                  _operate 7ABC               delayMili@i 0004  
                _soWrite 64F4                  _ssdInit 65E8     end_of_initialization 6422  
          ?_PulseEnClock 0001            __Lmediumconst 7EC6           digitalRead@pin 0001  
            ?_delayMicro 0001        __end_of_ssdUpdate 71C8               ??_ssdDigit 0026  
       ___aldiv@quotient 0017                  postdec1 000FE5              ?_lcdCommand 0001  
                postinc0 000FEE               ??_pushByte 000C  __size_of_PulseClockData 002A  
          ??_digitalRead 0003              ?_kpDebounce 0001               lcdNumber@i 0011  
             _verifyGoal 71C8               _pushNibble 631A               lcdString@i 0013  
         ??_PulseEnClock 0007               _totalBreak 0047               kpReadKey@i 0004  
              _LeTeclado 6846           __end_of___lmul 675A           adcRead@ADvalor 0003  
          __pidataCOMRAM 62C6              verifyGoal@i 001C              verifyGoal@j 001E  
         __end_of_kpInit 63F6           __end_of_kpRead 629C           __end_of_soInit 646A  
    __size_of_delayMicro 0002      start_initialization 63F6      __end_of_digitalRead 705C  
              SetaMeta@i 0015      __size_of_lcdCommand 001E      __size_of_kpDebounce 0136  
      __size_of_LigarLed 0014           adcRead@channel 0001               ?_LeTeclado 0001  
      kpDebounce@oldRead 0053        kpDebounce@newRead 0055                 ??___lmul 0009  
      __size_of_SetaMeta 00B2                 ??_kpInit 0007                 ??_kpRead 0003  
               ??_soInit 0007              ?_verifyGoal 0001              __pbssCOMRAM 003F  
   __size_of_DesligarLed 0016              ?_pushNibble 000A               pinMode@pin 0001  
              _delayMili 6394                _main$1191 0036                _main$1192 003A  
              _breakTime 0073            __pmediumconst 7EC6                 ?___aldiv 000D  
               ?___almod 001B                 ?_adcInit 0001                 ?_adcRead 0001  
               ?___awdiv 0001                 ?___awmod 0009        __size_of_ssdDigit 0058  
         _PulseClockData 6340                _lcdNumber 675A     __end_of_PulseEnClock 6394  
              _lcdString 6592              _digitalRead 6EF2                 ?_lcdChar 0001  
       ___almod@dividend 001B        __size_of_pushByte 005A                 ?_lcdInit 0001  
              _kpReadKey 67CE             _oldStudyGoal 003F                 ?_pinMode 0001  
               ?_operate 0001                 ?_soWrite 0007                 ?_ssdInit 0001  
        ___aldiv@divisor 0011          ___aldiv@counter 0015             ??_delayMicro 0003  
             ?_delayMili 0001      __size_of_verifyGoal 0216              ??_LeTeclado 0034  
 __end_of_PulseClockData 636A      __size_of_pushNibble 0026             ??_lcdCommand 000E  
              _ssdUpdate 705C               ?_lcdNumber 000F               ?_lcdString 000F  
           ??_kpDebounce 000A               ?_kpReadKey 0001          lcdCommand@value 000E  
     __end_of_delayMicro 6288                _studyGoal 0043                _studyTime 0077  
      ___lmul@multiplier 0001                copy_data0 640A       __end_of_lcdCommand 62FC  
               _LigarLed 629C               pushByte@rs 000A             lcdChar@value 000E  
     __end_of_kpDebounce 6EF2                 _SetaMeta 699A                 __Hrparam 0000  
               __Lrparam 0000          ?_PulseClockData 0001               ?_ssdUpdate 0001  
       __size_of___aldiv 010C         __size_of___almod 00EC         __size_of_adcInit 0048  
       __size_of_adcRead 0050         __size_of___awdiv 00C4         __size_of___awmod 00B0  
__size_of_pulseEnablePin 0042           lcdNumber@value 000F                 _bigBreak 006F  
       __size_of_lcdChar 001E         __size_of_lcdInit 00B4             _operate$1190 002D  
           _operate$1189 0029         __size_of_pinMode 024E                 __ptext10 699A  
               __ptext11 6542                 __ptext20 6B00                 __ptext12 62B0  
               __ptext21 62DE                 __ptext13 6846             operate@tempo 0032  
               __ptext30 64F4                 __ptext22 6696                 __ptext14 7ABC  
               __ptext31 636A                 __ptext23 646A                 __ptext15 71C8  
               __ptext32 6340                 __ptext24 6286                 __ptext16 6592  
               __ptext33 7620                 __ptext25 6394                 __ptext17 675A  
               __ptext34 663E                 __ptext26 66F0                 __ptext18 62FC  
               __ptext35 6BC4                 __ptext27 6CB0                 __ptext19 68EA  
               __ptext36 67CE                 __ptext28 629C                 __ptext37 6292  
               __ptext29 705C                 __ptext38 6288         __size_of_operate 040A  
       __size_of_soWrite 004E         __size_of_ssdInit 0056          ___almod@divisor 001F  
        ___almod@counter 0023            __size_of_main 0242                 _oldValue 0059  
              operate@op 0031              ??_delayMili 0003    __size_of_PulseEnClock 002A  
               _ssdDigit 663E              delayMicro@a 0001                 isa$xinst 000000  
           soWrite@value 0007                 _pushByte 6696              ??_lcdNumber 0011  
            ??_lcdString 0011                 main@slot 003E              ??_kpReadKey 0001  
           ??_verifyGoal 001B             ??_pushNibble 000C            ?_digitalWrite 0001  
           _PulseEnClock 636A        digitalWrite@value 0003            ?_ConfiguraLed 0001  
               soWrite@i 0009       __end_of_verifyGoal 73DE              ??_ssdUpdate 000A  
     __end_of_pushNibble 6340             ?_digitalRead 0001            ??_DesligarLed 0001  
            kpDebounce@i 000D           ??_digitalWrite 0005             ___aldiv@sign 0016  
        digitalWrite@pin 0001             ___almod@sign 0024           ??_ConfiguraLed 0001  
